products:
  get:
    summary: Search and filter products
    tags:
      - Shop
    parameters:
      - in: query
        name: q
        schema:
          type: string
        description: Search query for product title, description, brand
      - in: query
        name: category
        schema:
          type: string
          format: uuid
        description: Filter by category
      - in: query
        name: condition
        schema:
          type: string
          enum:
            - new
            - like-new
            - excellent
            - good
            - fair
      - in: query
        name: minPrice
        schema:
          type: number
      - in: query
        name: maxPrice
        schema:
          type: number
      - in: query
        name: brand
        schema:
          type: string
      - in: query
        name: tags
        schema:
          type: array
          items:
            type: string
        style: form
        explode: true
      - in: query
        name: sortBy
        schema:
          type: string
          enum:
            - newest
            - price-low-high
            - price-high-low
            - popular
        default: newest
      - in: query
        name: page
        schema:
          type: integer
          minimum: 1
          default: 1
      - in: query
        name: limit
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
    responses:
      '200':
        description: Successfully retrieved products
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '../schemas/products.yaml#/Product'
                total:
                  type: integer
                page:
                  type: integer
                totalPages:
                  type: integer
                filters:
                  type: object
                  properties:
                    categories:
                      type: array
                      items:
                        $ref: '../schemas/products.yaml#/ProductCategory'
                    brands:
                      type: array
                      items:
                        type: string
                    priceRange:
                      type: object
                      properties:
                        min:
                          type: number
                        max:
                          type: number

  post:
    summary: Create a new product
    tags:
      - Shop
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/products.yaml#/Product'
    responses:
      '201':
        description: Product created successfully
      '400':
        description: Invalid input
      '401':
        description: Unauthorized

product:
  get:
    summary: Get product details
    tags:
      - Shop
    responses:
      '200':
        description: Successfully retrieved product
        content:
          application/json:
            schema:
              $ref: '../schemas/products.yaml#/Product'
      '404':
        description: Product not found

  put:
    summary: Update product
    tags:
      - Shop
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/products.yaml#/Product'
    responses:
      '200':
        description: Product updated successfully
      '400':
        description: Invalid input
      '401':
        description: Unauthorized
      '404':
        description: Product not found

  delete:
    summary: Delete product
    tags:
      - Shop
    security:
      - BearerAuth: []
    responses:
      '200':
        description: Product deleted successfully
      '401':
        description: Unauthorized
      '404':
        description: Product not found 