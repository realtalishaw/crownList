openapi: 3.0.0
info:
  title: Pageant Management Platform API
  version: 1.0.0
  description: |
    API specification for the Pageant Management Platform, enabling users to manage pageant events,
    contestants, businesses, and related services.
servers:
  - url: http://localhost:3000/api
    description: Development server
  - url: https://pageantplatform.com/api
    description: Production server
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    $ref: ./schemas/index.yaml
    BusinessManagementOverview:
      type: object
      properties:
        totalBusinesses:
          type: integer
        activeBusinesses:
          type: integer
        verifiedBusinesses:
          type: integer
        suspendedBusinesses:
          type: integer
        averageRating:
          type: number
          format: float
        applications:
          type: object
          properties:
            pending:
              type: integer
            approved:
              type: integer
            rejected:
              type: integer
        businessesByCategory:
          type: object
          additionalProperties:
            type: integer
    AdminBusinessList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        dateJoined:
          type: string
          format: date-time
        category:
          type: string
        location:
          type: object
          properties:
            city:
              type: string
            state:
              type: string
            country:
              type: string
        status:
          type: string
          enum:
            - active
            - under_review
            - suspended
        rating:
          type: number
          format: float
        totalReviews:
          type: integer
    BusinessApplication:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        submittedAt:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - pending
            - approved
            - rejected
        requiredDocuments:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              name:
                type: string
              status:
                type: string
                enum:
                  - missing
                  - submitted
                  - verified
              url:
                type: string
                format: uri
              submittedAt:
                type: string
                format: date-time
        verificationNotes:
          type: array
          items:
            type: object
            properties:
              note:
                type: string
              addedBy:
                type: string
              timestamp:
                type: string
                format: date-time
        reviewedBy:
          type: string
          format: uuid
        reviewedAt:
          type: string
          format: date-time
        decisionReason:
          type: string
    AdminDashboard:
      type: object
      properties:
        overview:
          type: object
          properties:
            totalUsers:
              type: integer
            activeUsers:
              type: integer
            totalBusinesses:
              type: integer
            activeBusinesses:
              type: integer
            pendingReviews:
              type: integer
            totalReports:
              type: integer
            newUsersToday:
              type: integer
            newBusinessesToday:
              type: integer
        platformActivity:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              metrics:
                type: object
                properties:
                  activeUsers:
                    type: integer
                  newUsers:
                    type: integer
                  totalSessions:
                    type: integer
                  averageSessionDuration:
                    type: integer
                  pageViews:
                    type: integer
        userStats:
          type: object
          properties:
            byType:
              type: object
              properties:
                contestants:
                  type: integer
                businesses:
                  type: integer
                directors:
                  type: integer
                judges:
                  type: integer
                supporters:
                  type: integer
            byStatus:
              type: object
              properties:
                active:
                  type: integer
                pending:
                  type: integer
                suspended:
                  type: integer
        recentActivity:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              type:
                type: string
                enum:
                  - user_registration
                  - business_registration
                  - review_submission
                  - report_filed
              timestamp:
                type: string
                format: date-time
              details:
                type: object
    ContentModeration:
      type: object
      properties:
        overview:
          type: object
          properties:
            pendingReviews:
              type: integer
            reportedContent:
              type: integer
            flaggedUsers:
              type: integer
            suspendedContent:
              type: integer
        reportsByType:
          type: object
          properties:
            userReports:
              type: integer
            businessReports:
              type: integer
            reviewReports:
              type: integer
            commentReports:
              type: integer
            listingReports:
              type: integer
    Report:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - user
            - business
            - review
            - comment
            - listing
        status:
          type: string
          enum:
            - pending
            - investigating
            - resolved
            - dismissed
        priority:
          type: string
          enum:
            - low
            - medium
            - high
            - urgent
        reportedContent:
          type: object
          properties:
            id:
              type: string
              format: uuid
            type:
              type: string
            content:
              type: string
            url:
              type: string
        reportedBy:
          type: string
          format: uuid
        reason:
          type: string
        description:
          type: string
        evidence:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              url:
                type: string
        moderationActions:
          type: array
          items:
            type: object
            properties:
              action:
                type: string
                enum:
                  - warning
                  - suspend
                  - delete
                  - restore
              timestamp:
                type: string
                format: date-time
              moderator:
                type: string
                format: uuid
              notes:
                type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ContentReview:
      type: object
      properties:
        id:
          type: string
          format: uuid
        contentType:
          type: string
          enum:
            - listing
            - review
            - comment
            - profile
        content:
          type: object
        flags:
          type: array
          items:
            type: string
        status:
          type: string
          enum:
            - pending
            - approved
            - rejected
        moderatorNotes:
          type: string
        reviewedBy:
          type: string
          format: uuid
        reviewedAt:
          type: string
          format: date-time
    UserManagementOverview:
      type: object
      properties:
        totalUsers:
          type: integer
        activeUsers:
          type: integer
        suspendedUsers:
          type: integer
        unverifiedUsers:
          type: integer
        usersByRole:
          type: object
          properties:
            contestants:
              type: integer
            businesses:
              type: integer
            directors:
              type: integer
            judges:
              type: integer
            supporters:
              type: integer
            admins:
              type: integer
    AdminUserList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        role:
          type: string
        status:
          type: string
          enum:
            - active
            - pending
            - suspended
            - deactivated
            - deleted
        joinDate:
          type: string
          format: date-time
        lastActive:
          type: string
          format: date-time
        verificationStatus:
          type: boolean
    AdminUserDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
        basicInfo:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
            email:
              type: string
            role:
              type: string
            location:
              type: object
              properties:
                city:
                  type: string
                state:
                  type: string
                country:
                  type: string
        security:
          type: object
          properties:
            emailVerified:
              type: boolean
            mfaEnabled:
              type: boolean
            lastPasswordChange:
              type: string
              format: date-time
        accountStatus:
          type: object
          properties:
            status:
              type: string
              enum:
                - active
                - pending
                - suspended
                - deactivated
                - deleted
            statusReason:
              type: string
            statusChangedAt:
              type: string
              format: date-time
            statusChangedBy:
              type: string
              format: uuid
        loginHistory:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              ipAddress:
                type: string
              device:
                type: string
              location:
                type: string
        activityLog:
          type: array
          items:
            type: object
            properties:
              action:
                type: string
              timestamp:
                type: string
                format: date-time
              details:
                type: string
        permissions:
          type: object
          additionalProperties:
            type: boolean
        joinDate:
          type: string
          format: date-time
        lastActive:
          type: string
          format: date-time
    LeaderboardEntry:
      type: object
      properties:
        ambassadorId:
          type: string
          format: uuid
        rank:
          type: integer
        username:
          type: string
        profilePicture:
          type: string
          format: uri
        level:
          type: string
          enum:
            - rising_star
            - shining_star
            - superstar
            - crown_elite
        points:
          type: integer
        pointsThisPeriod:
          type: integer
        tasksCompleted:
          type: integer
        achievements:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              date:
                type: string
                format: date-time
        streak:
          type: integer
          description: Consecutive days/weeks active
    LeaderboardPeriod:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - daily
            - weekly
            - monthly
            - all_time
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        entries:
          type: array
          items:
            $ref: '#/LeaderboardEntry'
        categories:
          type: array
          items:
            type: string
            enum:
              - points
              - tasks
              - referrals
        rewards:
          type: array
          items:
            type: object
            properties:
              rank:
                type: integer
              reward:
                $ref: ../ambassador-rewards.yaml#/AmbassadorReward
    PointTransaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        ambassadorId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - earned
            - spent
            - expired
            - bonus
            - adjustment
        amount:
          type: integer
        description:
          type: string
        source:
          type: object
          properties:
            type:
              type: string
              enum:
                - task
                - referral
                - reward
                - system
            id:
              type: string
              format: uuid
        multiplier:
          type: number
          format: float
        expiresAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
    PointsSummary:
      type: object
      properties:
        currentBalance:
          type: integer
        lifetimePoints:
          type: integer
        pointsToNextLevel:
          type: integer
        expiringPoints:
          type: array
          items:
            type: object
            properties:
              amount:
                type: integer
              expiryDate:
                type: string
                format: date
        earnedThisMonth:
          type: integer
        spentThisMonth:
          type: integer
        multiplier:
          type: number
          format: float
        breakdown:
          type: object
          properties:
            tasks:
              type: integer
            referrals:
              type: integer
            bonuses:
              type: integer
    AmbassadorReward:
      type: object
      properties:
        id:
          type: string
          format: uuid
        category:
          type: string
          enum:
            - digital
            - physical
            - coaching
            - elite
        title:
          type: string
        description:
          type: string
        pointsRequired:
          type: integer
        image:
          type: string
          format: uri
        quantity:
          type: integer
          description: Available quantity, null if unlimited
        levelRequired:
          type: string
          enum:
            - rising_star
            - shining_star
            - superstar
            - crown_elite
        isActive:
          type: boolean
          default: true
        terms:
          type: string
        expiryDate:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - category
        - title
        - pointsRequired
    RewardRedemption:
      type: object
      properties:
        id:
          type: string
          format: uuid
        ambassadorId:
          type: string
          format: uuid
        rewardId:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - pending
            - processing
            - fulfilled
            - cancelled
        pointsSpent:
          type: integer
        shippingAddress:
          type: object
          properties:
            name:
              type: string
            street:
              type: string
            city:
              type: string
            state:
              type: string
            zipCode:
              type: string
            country:
              type: string
        fulfillmentDetails:
          type: object
          properties:
            method:
              type: string
              enum:
                - digital
                - shipping
                - in_person
                - virtual
            trackingNumber:
              type: string
            scheduledDate:
              type: string
              format: date-time
            notes:
              type: string
        redeemedAt:
          type: string
          format: date-time
        fulfilledAt:
          type: string
          format: date-time
      required:
        - ambassadorId
        - rewardId
        - pointsSpent
    AmbassadorProfile:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - pending
            - active
            - inactive
            - suspended
        level:
          type: string
          enum:
            - rising_star
            - shining_star
            - superstar
            - crown_elite
        currentPoints:
          type: integer
          default: 0
        lifetimePoints:
          type: integer
          default: 0
        referralCode:
          type: string
        joinDate:
          type: string
          format: date-time
        application:
          type: object
          properties:
            pageantExperience:
              type: string
            goals:
              type: string
            socialMediaHandles:
              type: object
              properties:
                instagram:
                  type: string
                tiktok:
                  type: string
                youtube:
                  type: string
            videoSubmission:
              type: string
              format: uri
            completedOrientation:
              type: boolean
              default: false
        stats:
          type: object
          properties:
            totalReferrals:
              type: integer
            completedTasks:
              type: integer
            redeemedRewards:
              type: integer
            pointsEarnedThisMonth:
              type: integer
            lastActivityDate:
              type: string
              format: date-time
        multiplier:
          type: number
          format: float
          description: Points multiplier based on level
        benefits:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - userId
        - status
        - level
    AmbassadorTask:
      type: object
      properties:
        id:
          type: string
          format: uuid
        category:
          type: string
          enum:
            - social_media
            - referral
            - community_building
            - special_event
        type:
          type: string
        title:
          type: string
        description:
          type: string
        points:
          type: integer
        frequencyLimit:
          type: object
          properties:
            quantity:
              type: integer
            period:
              type: string
              enum:
                - day
                - week
                - month
                - total
        requirements:
          type: array
          items:
            type: string
        verificationRequired:
          type: boolean
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - category
        - type
        - title
        - points
    AmbassadorTaskCompletion:
      type: object
      properties:
        id:
          type: string
          format: uuid
        ambassadorId:
          type: string
          format: uuid
        taskId:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - pending
            - approved
            - rejected
        submission:
          type: object
          properties:
            content:
              type: string
            mediaUrls:
              type: array
              items:
                type: string
                format: uri
            verificationData:
              type: object
        pointsEarned:
          type: integer
        reviewedBy:
          type: string
          format: uuid
        reviewNotes:
          type: string
        completedAt:
          type: string
          format: date-time
      required:
        - ambassadorId
        - taskId
        - submission
    Article:
      type: object
      properties:
        id:
          type: string
          format: uuid
        topicId:
          type: string
          format: uuid
        title:
          type: string
          minLength: 3
          maxLength: 200
        content:
          type: string
          minLength: 10
        slug:
          type: string
        excerpt:
          type: string
          maxLength: 500
        tags:
          type: array
          items:
            type: string
        status:
          type: string
          enum:
            - draft
            - published
            - archived
          default: draft
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - title
        - content
        - topicId
        - status
    ArticleCategory:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 2
          maxLength: 100
        description:
          type: string
          maxLength: 500
        slug:
          type: string
        order:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
    ArticleTopic:
      type: object
      properties:
        id:
          type: string
          format: uuid
        categoryId:
          type: string
          format: uuid
        name:
          type: string
          minLength: 2
          maxLength: 100
        description:
          type: string
          maxLength: 500
        slug:
          type: string
        order:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - categoryId
    Appearance:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        title:
          type: string
        type:
          type: string
          enum:
            - community_service
            - media
            - charity
            - school_visit
            - parade
            - photoshoot
            - other
    AppearanceBookingLink:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        availabilitySchedule:
          type: array
          items:
            type: object
            properties:
              dayOfWeek:
                type: integer
                minimum: 0
                maximum: 6
              startTime:
                type: string
                format: time
              endTime:
                type: string
                format: time
        fees:
          type: object
          properties:
            hourlyRate:
              type: number
            minimumHours:
              type: integer
            travelFee:
              type: number
        requirements:
          type: string
        isActive:
          type: boolean
          default: true
        expiresAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
      required:
        - title
    Competition:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        pageantId:
          type: string
          format: uuid
          description: Optional - if connected to official pageant
        name:
          type: string
        description:
          type: string
        type:
          type: string
          enum:
            - interview
            - talent
            - evening_gown
            - swimsuit
            - casual_wear
            - opening_number
            - onstage_question
            - other
        scoringPercentage:
          type: number
          format: float
          minimum: 0
          maximum: 100
        isOfficial:
          type: boolean
          description: Whether this is from official pageant schedule
        isParticipating:
          type: boolean
          default: true
          description: Whether contestant is competing in this competition
        isRequired:
          type: boolean
          default: true
        status:
          type: string
          enum:
            - upcoming
            - completed
            - cancelled
        wardrobeItems:
          type: array
          items:
            type: object
            properties:
              itemId:
                type: string
                format: uuid
              type:
                type: string
                enum:
                  - primary
                  - backup
        details:
          type: object
          properties:
            date:
              type: string
              format: date
            time:
              type: string
              format: time
            location:
              type: string
            duration:
              type: integer
              description: Duration in minutes
            order:
              type: integer
              description: Performance/appearance order
        requirements:
          type: array
          items:
            type: string
        judging:
          type: object
          properties:
            criteria:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  points:
                    type: integer
                  description:
                    type: string
            totalPoints:
              type: integer
        notes:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - type
        - scoringPercentage
    BinderDocument:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        title:
          type: string
        type:
          type: string
          enum:
            - contract
            - application
            - photo
            - bio
            - resume
            - other
        url:
          type: string
          format: uri
        status:
          type: string
          enum:
            - pending
            - submitted
            - approved
            - rejected
        dueDate:
          type: string
          format: date
        notes:
          type: string
        version:
          type: integer
        fileSize:
          type: integer
        fileType:
          type: string
    BudgetOverview:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        totalBudget:
          type: number
          format: float
        summary:
          type: object
          properties:
            totalExpenses:
              type: number
              format: float
            totalPaid:
              type: number
              format: float
            totalPending:
              type: number
              format: float
            totalRaised:
              type: number
              format: float
        upcomingPayments:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
              amount:
                type: number
                format: float
              dueDate:
                type: string
                format: date
              status:
                type: string
                enum:
                  - pending
                  - overdue
                  - paid
        expensesByCategory:
          type: object
          additionalProperties:
            type: number
            format: float
        monthlySpending:
          type: array
          items:
            type: object
            properties:
              month:
                type: string
                format: date
              amount:
                type: number
                format: float
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Expense:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        category:
          type: string
          enum:
            - entry_fee
            - wardrobe
            - travel
            - coaching
            - photography
            - other
        expectedAmount:
          type: number
          format: float
        actualAmount:
          type: number
          format: float
        dueDate:
          type: string
          format: date
        paidDate:
          type: string
          format: date
        status:
          type: string
          enum:
            - planned
            - pending
            - paid
            - overdue
        paymentMethod:
          type: string
        notes:
          type: string
        receipts:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              url:
                type: string
                format: uri
              uploadedAt:
                type: string
                format: date-time
              notes:
                type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - category
        - expectedAmount
    Fundraiser:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        goal:
          type: number
          format: float
        currentAmount:
          type: number
          format: float
        status:
          type: string
          enum:
            - draft
            - active
            - paused
            - completed
            - archived
        coverImage:
          type: string
          format: uri
        story:
          type: string
          description: Detailed fundraiser story/purpose
        updates:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              content:
                type: string
              date:
                type: string
                format: date-time
              media:
                type: array
                items:
                  type: string
                  format: uri
        sharingInfo:
          type: object
          properties:
            url:
              type: string
              format: uri
            socialText:
              type: string
            hashtags:
              type: array
              items:
                type: string
        analytics:
          type: object
          properties:
            views:
              type: integer
            shares:
              type: integer
            donorCount:
              type: integer
            averageDonation:
              type: number
              format: float
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - title
        - description
        - goal
    Donation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        fundraiserId:
          type: string
          format: uuid
        amount:
          type: number
          format: float
        donorName:
          type: string
        donorEmail:
          type: string
          format: email
        isAnonymous:
          type: boolean
          default: false
        message:
          type: string
        status:
          type: string
          enum:
            - pending
            - completed
            - failed
            - refunded
        stripePaymentId:
          type: string
        thankedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
      required:
        - fundraiserId
        - amount
    MediaKit:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        version:
          type: string
        lastGenerated:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - draft
            - published
            - archived
        basicInfo:
          type: object
          properties:
            name:
              type: string
            title:
              type: string
            tagline:
              type: string
            bio:
              type: string
            location:
              type: string
            email:
              type: string
            phone:
              type: string
        photos:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                format: uri
              type:
                type: string
                enum:
                  - headshot
                  - full_length
                  - action
                  - crown_shot
              isPrimary:
                type: boolean
        socialMedia:
          type: array
          items:
            type: object
            properties:
              platform:
                type: string
              handle:
                type: string
              url:
                type: string
              followers:
                type: integer
        achievements:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              organization:
                type: string
              date:
                type: string
                format: date
              description:
                type: string
        platform:
          type: object
          properties:
            cause:
              type: string
            description:
              type: string
            impact:
              type: array
              items:
                type: object
                properties:
                  metric:
                    type: string
                  value:
                    type: string
        appearances:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              date:
                type: string
                format: date
              description:
                type: string
              photos:
                type: array
                items:
                  type: string
                  format: uri
        pressFeatures:
          type: array
          items:
            type: object
            properties:
              outlet:
                type: string
              title:
                type: string
              date:
                type: string
                format: date
              url:
                type: string
                format: uri
        brandCollaborations:
          type: array
          items:
            type: object
            properties:
              brand:
                type: string
              description:
                type: string
              date:
                type: string
                format: date
        demographics:
          type: object
          properties:
            ageRange:
              type: string
            gender:
              type: object
              properties:
                male:
                  type: number
                female:
                  type: number
                other:
                  type: number
            topLocations:
              type: array
              items:
                type: object
                properties:
                  location:
                    type: string
                  percentage:
                    type: number
        files:
          type: array
          items:
            $ref: '#/MediaKitFile'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - binderId
        - basicInfo
    MediaKitFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
        mediaKitId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - pdf
            - presentation
            - one_pager
            - full_kit
        url:
          type: string
          format: uri
        version:
          type: string
        size:
          type: integer
        downloads:
          type: integer
        generatedAt:
          type: string
          format: date-time
      required:
        - mediaKitId
        - type
        - url
    PackingList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        categories:
          type: array
          items:
            $ref: '#/PackingCategory'
        progress:
          type: object
          properties:
            totalItems:
              type: integer
            packedItems:
              type: integer
            percentage:
              type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - binderId
        - name
    PackingCategory:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        items:
          type: array
          items:
            $ref: '#/PackingItem'
        order:
          type: integer
      required:
        - name
    PackingItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        quantity:
          type: integer
          default: 1
        isPacked:
          type: boolean
          default: false
        isRequired:
          type: boolean
          default: true
        notes:
          type: string
        wardrobeItemId:
          type: string
          format: uuid
          description: Optional reference to wardrobe item
        checkedAt:
          type: string
          format: date-time
        order:
          type: integer
      required:
        - name
    BinderPaperwork:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        title:
          type: string
        type:
          type: string
          enum:
            - application
            - contract
            - waiver
            - medical
            - photo_release
            - other
        status:
          type: string
          enum:
            - draft
            - pending_review
            - reviewed
            - approved
            - rejected
            - submitted
        dueDate:
          type: string
          format: date
        submittedDate:
          type: string
          format: date-time
        reviewedBy:
          type: string
          format: uuid
          description: ID of staff member who reviewed
        lastReviewedAt:
          type: string
          format: date-time
        reviewNotes:
          type: string
        version:
          type: integer
        fileUrl:
          type: string
          format: uri
        metadata:
          type: object
          properties:
            pageCount:
              type: integer
            fileSize:
              type: integer
            fileType:
              type: string
        history:
          type: array
          items:
            type: object
            properties:
              action:
                type: string
                enum:
                  - created
                  - updated
                  - reviewed
                  - approved
                  - rejected
                  - submitted
              timestamp:
                type: string
                format: date-time
              userId:
                type: string
                format: uuid
              notes:
                type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - binderId
        - title
        - type
        - status
    Platform:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        name:
          type: string
        status:
          type: string
          enum:
            - draft
            - active
            - archived
        cause:
          type: object
          properties:
            title:
              type: string
            description:
              type: string
            category:
              type: string
              enum:
                - education
                - environment
                - health
                - social_justice
                - community
                - youth
                - other
            targetAudience:
              type: string
            problemStatement:
              type: string
            solution:
              type: string
        goals:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              title:
                type: string
              description:
                type: string
              timeline:
                type: string
              status:
                type: string
                enum:
                  - planned
                  - in_progress
                  - completed
              metrics:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    target:
                      type: number
                    current:
                      type: number
                    unit:
                      type: string
        initiatives:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              title:
                type: string
              description:
                type: string
              startDate:
                type: string
                format: date
              endDate:
                type: string
                format: date
              status:
                type: string
                enum:
                  - planned
                  - active
                  - completed
              impact:
                type: object
                properties:
                  peopleReached:
                    type: integer
                  volunteersEngaged:
                    type: integer
                  fundsRaised:
                    type: number
                  otherMetrics:
                    type: object
        resources:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              type:
                type: string
                enum:
                  - research
                  - statistics
                  - article
                  - video
                  - contact
              title:
                type: string
              url:
                type: string
              notes:
                type: string
        partnerships:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              organizationName:
                type: string
              contactPerson:
                type: string
              email:
                type: string
              phone:
                type: string
              status:
                type: string
                enum:
                  - potential
                  - active
                  - completed
              notes:
                type: string
        presentations:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              title:
                type: string
              audience:
                type: string
              date:
                type: string
                format: date
              location:
                type: string
              notes:
                type: string
              materials:
                type: array
                items:
                  type: string
                  format: uri
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - binderId
        - name
        - cause
    BinderTask:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        category:
          type: string
          enum:
            - paperwork
            - wardrobe
            - practice
            - general
        priority:
          type: string
          enum:
            - high
            - medium
            - low
        status:
          type: string
          enum:
            - pending
            - in_progress
            - completed
            - overdue
        dueDate:
          type: string
          format: date
        completedAt:
          type: string
          format: date-time
        assignedTo:
          type: string
          format: uuid
        reminderDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    BinderSchedule:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - practice
            - coaching
            - photoshoot
            - appearance
            - competition
            - other
        title:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        location:
          type: string
        notes:
          type: string
        participants:
          type: array
          items:
            type: string
            format: uuid
        reminders:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
                format: date-time
              type:
                type: string
                enum:
                  - email
                  - push
                  - sms
    BinderWardrobe:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        category:
          type: string
          enum:
            - interview
            - opening
            - swimsuit
            - evening_gown
            - talent
            - casual
        items:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              brand:
                type: string
              size:
                type: string
              color:
                type: string
              status:
                type: string
                enum:
                  - needed
                  - ordered
                  - alterations
                  - ready
              cost:
                type: number
              photos:
                type: array
                items:
                  type: string
                  format: uri
              notes:
                type: string
    BinderAppearance:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        title:
          type: string
        type:
          type: string
          enum:
            - community_service
            - media
            - charity
            - school_visit
            - parade
            - photoshoot
            - other
        status:
          type: string
          enum:
            - requested
            - confirmed
            - completed
            - cancelled
        date:
          type: string
          format: date
        startTime:
          type: string
          format: time
        endTime:
          type: string
          format: time
        location:
          type: object
          properties:
            name:
              type: string
            address:
              type: string
            city:
              type: string
            state:
              type: string
            zipCode:
              type: string
        organizerContact:
          type: object
          properties:
            name:
              type: string
            title:
              type: string
            email:
              type: string
            phone:
              type: string
        description:
          type: string
        requirements:
          type: array
          items:
            type: string
        wardrobe:
          type: array
          items:
            type: object
            properties:
              itemId:
                type: string
                format: uuid
              notes:
                type: string
        bookingDetails:
          type: object
          properties:
            fee:
              type: number
              format: float
            isPaid:
              type: boolean
            paymentDue:
              type: string
              format: date
            contract:
              type: string
              format: uri
        photos:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                format: uri
              caption:
                type: string
              uploadedAt:
                type: string
                format: date-time
        socialMedia:
          type: array
          items:
            type: object
            properties:
              platform:
                type: string
                enum:
                  - instagram
                  - facebook
                  - twitter
                  - other
              postUrl:
                type: string
                format: uri
              engagement:
                type: object
                properties:
                  likes:
                    type: integer
                  comments:
                    type: integer
                  shares:
                    type: integer
        notes:
          type: string
        impact:
          type: object
          properties:
            peopleReached:
              type: integer
            volunteerHours:
              type: integer
            fundsRaised:
              type: number
              format: float
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - title
        - type
        - date
    BinderTravel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - flight
            - hotel
            - car
            - other
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        confirmationNumber:
          type: string
        provider:
          type: string
        cost:
          type: number
        details:
          type: object
          properties:
            flight:
              type: object
              properties:
                airline:
                  type: string
                flightNumber:
                  type: string
                departure:
                  type: string
                arrival:
                  type: string
            hotel:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
                roomType:
                  type: string
            car:
              type: object
              properties:
                company:
                  type: string
                carType:
                  type: string
                pickupLocation:
                  type: string
                dropoffLocation:
                  type: string
    BinderPlatform:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        cause:
          type: string
        mission:
          type: string
        goals:
          type: array
          items:
            type: string
        activities:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              date:
                type: string
                format: date
              description:
                type: string
              impact:
                type: string
        materials:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              type:
                type: string
              url:
                type: string
                format: uri
    BinderFinances:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        budget:
          type: number
        expenses:
          type: array
          items:
            type: object
            properties:
              category:
                type: string
                enum:
                  - wardrobe
                  - travel
                  - entry_fee
                  - coaching
                  - other
              amount:
                type: number
              date:
                type: string
                format: date
              description:
                type: string
              receipt:
                type: string
                format: uri
        sponsorships:
          type: array
          items:
            type: object
            properties:
              sponsor:
                type: string
              amount:
                type: number
              type:
                type: string
                enum:
                  - monetary
                  - product
                  - service
              status:
                type: string
                enum:
                  - pending
                  - confirmed
                  - received
    WardrobeGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
        eventId:
          type: string
          format: uuid
    WardrobeItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        groupId:
          type: string
          format: uuid
        name:
          type: string
        category:
          type: string
    Schedule:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        pageantId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        isOfficial:
          type: boolean
          description: Whether this is the official pageant schedule
        createdBy:
          type: string
          format: uuid
        permissions:
          type: object
          properties:
            canEdit:
              type: boolean
            canShare:
              type: boolean
            isPublic:
              type: boolean
        dates:
          type: array
          items:
            $ref: '#/ScheduleDay'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - binderId
        - name
    ScheduleDay:
      type: object
      properties:
        id:
          type: string
          format: uuid
        scheduleId:
          type: string
          format: uuid
        date:
          type: string
          format: date
        events:
          type: array
          items:
            $ref: '#/ScheduleEvent'
    ScheduleEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
        dayId:
          type: string
          format: uuid
        title:
          type: string
        type:
          type: string
          enum:
            - orientation
            - rehearsal
            - competition
            - interview
            - photoshoot
            - meal
            - other
        startTime:
          type: string
          format: time
        endTime:
          type: string
          format: time
        location:
          type: object
          properties:
            room:
              type: string
            building:
              type: string
            floor:
              type: string
        description:
          type: string
        requirements:
          type: array
          items:
            type: string
        dress:
          type: string
          format: uuid
          description: Reference to wardrobe item
        isRequired:
          type: boolean
          default: true
        officialNotes:
          type: string
          description: Notes from pageant director
        personalNotes:
          type: string
          description: Contestant's private notes
        isInPersonalSchedule:
          type: boolean
          default: true
          description: Whether contestant has this in their personal schedule
        reminders:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
                format: date-time
              type:
                type: string
                enum:
                  - email
                  - push
                  - sms
        status:
          type: string
          enum:
            - scheduled
            - in_progress
            - completed
            - cancelled
      required:
        - title
        - startTime
        - endTime
    TripDetails:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
    FlightDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
    HotelDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
    CarRentalDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
    SocialMediaAccount:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        platform:
          type: string
          enum:
            - instagram
            - tiktok
            - facebook
        accountName:
          type: string
        accountId:
          type: string
        isConnected:
          type: boolean
        lastSynced:
          type: string
          format: date-time
        stats:
          type: object
          properties:
            followers:
              type: integer
            following:
              type: integer
            totalPosts:
              type: integer
            engagement:
              type: number
              format: float
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ScheduledPost:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        accountId:
          type: string
          format: uuid
        content:
          type: string
        media:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                format: uri
              type:
                type: string
                enum:
                  - image
                  - video
              thumbnail:
                type: string
                format: uri
        scheduledFor:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - draft
            - scheduled
            - posted
            - failed
        platforms:
          type: array
          items:
            type: string
            enum:
              - instagram
              - tiktok
              - facebook
        hashtags:
          type: array
          items:
            type: string
        mentions:
          type: array
          items:
            type: string
        postType:
          type: string
          enum:
            - regular
            - story
            - reel
        analytics:
          type: object
          properties:
            likes:
              type: integer
            comments:
              type: integer
            shares:
              type: integer
            views:
              type: integer
            reach:
              type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - content
        - scheduledFor
        - platforms
    SponsorshipPackage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        levels:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              amount:
                type: number
                format: float
              benefits:
                type: array
                items:
                  type: string
              maxSponsors:
                type: integer
              currentSponsors:
                type: integer
        status:
          type: string
          enum:
            - draft
            - active
            - archived
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - levels
    Sponsor:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        businessName:
          type: string
        contactPerson:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        status:
          type: string
          enum:
            - potential
            - contacted
            - negotiating
            - confirmed
            - declined
        level:
          type: string
        amount:
          type: number
          format: float
        notes:
          type: string
        followUps:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date-time
              type:
                type: string
                enum:
                  - email
                  - call
                  - meeting
                  - other
              notes:
                type: string
              nextSteps:
                type: string
              reminder:
                type: string
                format: date-time
        obligations:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
              dueDate:
                type: string
                format: date
              status:
                type: string
                enum:
                  - pending
                  - completed
                  - overdue
              completedDate:
                type: string
                format: date
              notes:
                type: string
        documents:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - contract
                  - logo
                  - media
                  - other
              url:
                type: string
                format: uri
              uploadedAt:
                type: string
                format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - businessName
        - status
    Website:
      type: object
      properties:
        id:
          type: string
          format: uuid
        binderId:
          type: string
          format: uuid
        domain:
          type: string
        status:
          type: string
          enum:
            - draft
            - published
            - archived
        theme:
          type: string
        settings:
          type: object
          properties:
            colors:
              type: object
              properties:
                primary:
                  type: string
                secondary:
                  type: string
                accent:
                  type: string
            fonts:
              type: object
              properties:
                heading:
                  type: string
                body:
                  type: string
        content:
          type: object
          properties:
            hero:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                image:
                  type: string
                  format: uri
            about:
              type: object
              properties:
                bio:
                  type: string
                photo:
                  type: string
                  format: uri
            platform:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                initiatives:
                  type: array
                  items:
                    type: object
                    properties:
                      title:
                        type: string
                      description:
                        type: string
                      image:
                        type: string
                        format: uri
            gallery:
              type: array
              items:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
                  caption:
                    type: string
            appearances:
              type: array
              items:
                type: object
                properties:
                  title:
                    type: string
                  date:
                    type: string
                    format: date
                  description:
                    type: string
                  image:
                    type: string
                    format: uri
            contact:
              type: object
              properties:
                email:
                  type: string
                socialLinks:
                  type: array
                  items:
                    type: object
                    properties:
                      platform:
                        type: string
                      url:
                        type: string
        analytics:
          type: object
          properties:
            totalViews:
              type: integer
            uniqueVisitors:
              type: integer
            averageTimeOnSite:
              type: integer
            topPages:
              type: array
              items:
                type: object
                properties:
                  path:
                    type: string
                  views:
                    type: integer
            visitorLocations:
              type: array
              items:
                type: object
                properties:
                  location:
                    type: string
                  count:
                    type: integer
            deviceTypes:
              type: object
              properties:
                desktop:
                  type: integer
                mobile:
                  type: integer
                tablet:
                  type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - binderId
        - content
    Binder:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 100
        competitionDate:
          type: string
          format: date
        location:
          type: string
        preparationProgress:
          type: number
          minimum: 0
          maximum: 100
          description: Percentage of completion
        status:
          type: string
          enum:
            - active
            - archived
            - completed
          default: active
        eventId:
          type: string
          format: uuid
          description: Optional - link to specific pageant event
        notes:
          type: string
        lastAccessed:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - userId
        - name
        - competitionDate
    BlogPost:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          minLength: 3
          maxLength: 200
        slug:
          type: string
        excerpt:
          type: string
          maxLength: 500
        content:
          type: string
          minLength: 10
        categoryId:
          type: string
          format: uuid
        tags:
          type: array
          items:
            type: string
        authorId:
          type: string
          format: uuid
        featuredImage:
          type: string
          format: uri
        thumbnailImage:
          type: string
          format: uri
        metaTitle:
          type: string
          maxLength: 100
        metaDescription:
          type: string
          maxLength: 200
        status:
          type: string
          enum:
            - draft
            - published
            - archived
          default: draft
        isFeatured:
          type: boolean
          default: false
        views:
          type: integer
          default: 0
        likes:
          type: integer
          default: 0
        readTime:
          type: integer
          description: Estimated reading time in minutes
        publishedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - title
        - content
        - categoryId
        - authorId
        - status
    BlogComment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        postId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        parentId:
          type: string
          format: uuid
          description: ID of parent comment for nested replies
        content:
          type: string
          minLength: 1
          maxLength: 1000
        status:
          type: string
          enum:
            - pending
            - approved
            - spam
            - deleted
          default: pending
        likes:
          type: integer
          default: 0
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - postId
        - userId
        - content
    BlogCategory:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 2
          maxLength: 100
        description:
          type: string
          maxLength: 500
        slug:
          type: string
        order:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
    AnalyticsOverview:
      type: object
      properties:
        totalRevenue:
          type: number
          format: float
        totalBookings:
          type: integer
        newClients:
          type: integer
        averageRating:
          type: number
          format: float
        periodComparison:
          type: object
          properties:
            revenue:
              type: object
              properties:
                change:
                  type: number
                  format: float
                percentage:
                  type: number
                  format: float
            bookings:
              type: object
              properties:
                change:
                  type: integer
                percentage:
                  type: number
                  format: float
            clients:
              type: object
              properties:
                change:
                  type: integer
                percentage:
                  type: number
                  format: float
    RevenueAnalytics:
      type: object
      properties:
        summary:
          type: object
          properties:
            total:
              type: number
              format: float
            average:
              type: number
              format: float
            highest:
              type: number
              format: float
            lowest:
              type: number
              format: float
        trends:
          type: array
          items:
            type: object
            properties:
              period:
                type: string
              revenue:
                type: number
                format: float
              bookings:
                type: integer
              comparison:
                type: object
                properties:
                  previousPeriod:
                    type: number
                    format: float
                  percentage:
                    type: number
                    format: float
        byService:
          type: array
          items:
            type: object
            properties:
              serviceId:
                type: string
                format: uuid
              serviceName:
                type: string
              revenue:
                type: number
                format: float
              percentage:
                type: number
                format: float
    ServicePerformance:
      type: object
      properties:
        serviceId:
          type: string
          format: uuid
        serviceName:
          type: string
        metrics:
          type: object
          properties:
            totalBookings:
              type: integer
            revenue:
              type: number
              format: float
            averageRating:
              type: number
              format: float
        trends:
          type: array
          items:
            type: object
            properties:
              period:
                type: string
              bookings:
                type: integer
              revenue:
                type: number
                format: float
              comparison:
                type: object
                properties:
                  previousPeriod:
                    type: integer
                  percentage:
                    type: number
                    format: float
    Booking:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        clientInfo:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            email:
              type: string
              format: email
            phone:
              type: string
            profileImage:
              type: string
              format: uri
        serviceInfo:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            duration:
              type: integer
              description: Duration in minutes
            price:
              type: number
              format: float
        dateTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        duration:
          type: integer
          description: Duration in minutes
        location:
          type: object
          properties:
            type:
              type: string
              enum:
                - in_person
                - virtual
                - phone
            address:
              type: string
            city:
              type: string
            state:
              type: string
            zipCode:
              type: string
            meetingLink:
              type: string
              format: uri
        status:
          type: string
          enum:
            - pending
            - confirmed
            - completed
            - cancelled
            - no_show
        payment:
          type: object
          properties:
            amount:
              type: number
              format: float
            status:
              type: string
              enum:
                - pending
                - paid
                - refunded
            method:
              type: string
            transactionId:
              type: string
        notes:
          type: object
          properties:
            clientNotes:
              type: string
            internalNotes:
              type: string
            specialRequirements:
              type: string
        reminders:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - email
                  - sms
              scheduledFor:
                type: string
                format: date-time
              status:
                type: string
                enum:
                  - pending
                  - sent
                  - failed
              sentAt:
                type: string
                format: date-time
        history:
          type: array
          items:
            type: object
            properties:
              action:
                type: string
                enum:
                  - created
                  - updated
                  - rescheduled
                  - cancelled
                  - reminder_sent
              timestamp:
                type: string
                format: date-time
              notes:
                type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - businessId
        - clientInfo
        - serviceInfo
        - dateTime
        - status
    ServiceSchedule:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        serviceId:
          type: string
          format: uuid
        name:
          type: string
        duration:
          type: integer
          description: Duration in minutes
        bufferTime:
          type: integer
          description: Buffer time between bookings in minutes
        maxBookingsPerDay:
          type: integer
        defaultAvailability:
          type: array
          items:
            type: object
            properties:
              dayOfWeek:
                type: integer
                minimum: 0
                maximum: 6
              startTime:
                type: string
                format: time
              endTime:
                type: string
                format: time
              isAvailable:
                type: boolean
                default: true
        customAvailability:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              slots:
                type: array
                items:
                  type: object
                  properties:
                    startTime:
                      type: string
                      format: time
                    endTime:
                      type: string
                      format: time
                    isAvailable:
                      type: boolean
        blockedDates:
          type: array
          items:
            type: object
            properties:
              startDate:
                type: string
                format: date
              endDate:
                type: string
                format: date
              reason:
                type: string
        settings:
          type: object
          properties:
            advanceBookingDays:
              type: integer
              description: How many days in advance booking is allowed
            minNoticeHours:
              type: integer
              description: Minimum hours notice required for booking
            allowWaitlist:
              type: boolean
              default: false
            autoConfirm:
              type: boolean
              default: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    AvailableSlot:
      type: object
      properties:
        serviceId:
          type: string
          format: uuid
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        isAvailable:
          type: boolean
        isBufferTime:
          type: boolean
        bookingId:
          type: string
          format: uuid
          description: If slot is booked
    BusinessDashboard:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        overview:
          type: object
          properties:
            totalClients:
              type: integer
            activeClients:
              type: integer
            totalRevenue:
              type: number
              format: float
            monthlyRevenue:
              type: number
              format: float
            averageRating:
              type: number
              format: float
            totalReviews:
              type: integer
            totalBookings:
              type: integer
            upcomingBookings:
              type: integer
        revenueStats:
          type: object
          properties:
            daily:
              type: array
              items:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  amount:
                    type: number
                    format: float
            monthly:
              type: array
              items:
                type: object
                properties:
                  month:
                    type: string
                    format: date
                  amount:
                    type: number
                    format: float
        recentActivity:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              type:
                type: string
                enum:
                  - booking
                  - review
                  - message
                  - order
                  - payment
              timestamp:
                type: string
                format: date-time
              data:
                type: object
                description: Activity-specific data
              user:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  avatar:
                    type: string
                    format: uri
        upcomingBookings:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              clientId:
                type: string
                format: uuid
              clientName:
                type: string
              service:
                type: string
              dateTime:
                type: string
                format: date-time
              status:
                type: string
                enum:
                  - confirmed
                  - pending
                  - cancelled
              amount:
                type: number
                format: float
        quickActions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - approve_booking
                  - respond_review
                  - message_client
                  - update_service
              priority:
                type: string
                enum:
                  - high
                  - medium
                  - low
              data:
                type: object
                description: Action-specific data
    EventSchedule:
      type: object
      properties:
        id:
          type: string
          format: uuid
        eventId:
          type: string
          format: uuid
        date:
          type: string
          format: date
        items:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
                format: time
              title:
                type: string
              description:
                type: string
              location:
                type: string
              duration:
                type: integer
                description: Duration in minutes
    EventTicket:
      type: object
      properties:
        id:
          type: string
          format: uuid
        eventId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        quantity:
          type: integer
        quantityRemaining:
          type: integer
        saleStartDate:
          type: string
          format: date-time
        saleEndDate:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - general
            - vip
            - early-bird
            - contestant
            - spectator
        status:
          type: string
          enum:
            - active
            - sold-out
            - sale-ended
            - not-started
    EventSponsor:
      type: object
      properties:
        id:
          type: string
          format: uuid
        eventId:
          type: string
          format: uuid
        name:
          type: string
        logo:
          type: string
          format: uri
        website:
          type: string
          format: uri
        level:
          type: string
          enum:
            - platinum
            - gold
            - silver
            - bronze
            - other
        description:
          type: string
        contribution:
          type: string
        socialLinks:
          type: object
          properties:
            facebook:
              type: string
              format: uri
            instagram:
              type: string
              format: uri
            twitter:
              type: string
              format: uri
        displayOrder:
          type: integer
        isVisible:
          type: boolean
          default: true
    BusinessEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - general
            - pageant
        title:
          type: string
        slug:
          type: string
        description:
          type: string
        shortDescription:
          type: string
          maxLength: 200
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        timezone:
          type: string
        isOnline:
          type: boolean
          default: false
        location:
          type: object
          properties:
            name:
              type: string
            address:
              type: string
            city:
              type: string
            state:
              type: string
            zipCode:
              type: string
            country:
              type: string
            coordinates:
              type: object
              properties:
                latitude:
                  type: number
                longitude:
                  type: number
        virtualEventUrl:
          type: string
          format: uri
        status:
          type: string
          enum:
            - draft
            - published
            - cancelled
            - completed
        capacity:
          type: integer
        registeredCount:
          type: integer
          default: 0
        ticketing:
          type: object
          properties:
            enabled:
              type: boolean
              default: false
            tickets:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
                    format: float
                  quantity:
                    type: integer
                  soldCount:
                    type: integer
                    default: 0
                  saleStartDate:
                    type: string
                    format: date-time
                  saleEndDate:
                    type: string
                    format: date-time
        coverImage:
          type: string
          format: uri
        images:
          type: array
          items:
            type: string
            format: uri
        visibility:
          type: string
          enum:
            - public
            - private
            - unlisted
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - businessId
        - type
        - title
        - startDate
    Payment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        stripePaymentId:
          type: string
        amount:
          type: number
          format: float
        currency:
          type: string
          default: USD
        type:
          type: string
          enum:
            - booking
            - invoice
            - subscription
            - other
        status:
          type: string
          enum:
            - pending
            - completed
            - failed
            - refunded
            - disputed
        customer:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            email:
              type: string
        paymentMethod:
          type: object
          properties:
            type:
              type: string
              enum:
                - card
                - bank_transfer
                - wallet
            details:
              type: object
              properties:
                last4:
                  type: string
                brand:
                  type: string
        relatedDocument:
          type: object
          properties:
            type:
              type: string
              enum:
                - invoice
                - booking
                - order
            id:
              type: string
              format: uuid
        createdAt:
          type: string
          format: date-time
    FinancialReport:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - income_statement
            - balance_sheet
            - cash_flow
            - tax_summary
            - custom
        period:
          type: object
          properties:
            startDate:
              type: string
              format: date
            endDate:
              type: string
              format: date
        summary:
          type: object
          properties:
            totalRevenue:
              type: number
              format: float
            totalExpenses:
              type: number
              format: float
            netIncome:
              type: number
              format: float
            taxableAmount:
              type: number
              format: float
        categories:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              amount:
                type: number
                format: float
              percentage:
                type: number
                format: float
        format:
          type: string
          enum:
            - pdf
            - csv
            - excel
        status:
          type: string
          enum:
            - generating
            - ready
            - failed
        downloadUrl:
          type: string
          format: uri
        createdAt:
          type: string
          format: date-time
    TaxDocument:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - 1099_K
            - W9
            - tax_return
            - sales_tax
            - other
        year:
          type: integer
        period:
          type: string
          enum:
            - annual
            - quarterly
            - monthly
        status:
          type: string
          enum:
            - pending
            - ready
            - submitted
            - accepted
        summary:
          type: object
          properties:
            grossAmount:
              type: number
              format: float
            taxableAmount:
              type: number
              format: float
            taxRate:
              type: number
              format: float
            taxDue:
              type: number
              format: float
        documentUrl:
          type: string
          format: uri
        submissionDate:
          type: string
          format: date
        dueDate:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
    BusinessWallet:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        stripeAccountId:
          type: string
        balance:
          type: object
          properties:
            available:
              type: number
              format: float
            pending:
              type: number
              format: float
            reserved:
              type: number
              format: float
            currency:
              type: string
              default: USD
        payoutSchedule:
          type: object
          properties:
            interval:
              type: string
              enum:
                - manual
                - daily
                - weekly
                - monthly
            weeklyAnchor:
              type: string
              enum:
                - monday
                - tuesday
                - wednesday
                - thursday
                - friday
            monthlyAnchor:
              type: integer
              minimum: 1
              maximum: 31
        status:
          type: string
          enum:
            - active
            - restricted
            - disabled
        lastPayout:
          type: object
          properties:
            amount:
              type: number
              format: float
            date:
              type: string
              format: date-time
            status:
              type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    FinancialTransaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - payment
            - payout
            - refund
            - fee
            - adjustment
        amount:
          type: number
          format: float
        currency:
          type: string
          default: USD
        status:
          type: string
          enum:
            - pending
            - completed
            - failed
            - cancelled
        source:
          type: object
          properties:
            type:
              type: string
              enum:
                - booking
                - order
                - manual
                - system
            id:
              type: string
              format: uuid
            description:
              type: string
        stripeTransactionId:
          type: string
        metadata:
          type: object
        createdAt:
          type: string
          format: date-time
    PayoutRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        amount:
          type: number
          format: float
        currency:
          type: string
          default: USD
        status:
          type: string
          enum:
            - pending
            - processing
            - completed
            - failed
        destination:
          type: object
          properties:
            type:
              type: string
              enum:
                - bank_account
                - debit_card
            last4:
              type: string
            bankName:
              type: string
        estimatedArrival:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
    Invoice:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        stripeInvoiceId:
          type: string
        number:
          type: string
        customer:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            email:
              type: string
            phone:
              type: string
            address:
              $ref: ../schemas/orders.yaml#/Address
        items:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
              quantity:
                type: integer
              unitPrice:
                type: number
                format: float
              amount:
                type: number
                format: float
              taxRate:
                type: number
                format: float
        subtotal:
          type: number
          format: float
        tax:
          type: number
          format: float
        total:
          type: number
          format: float
        currency:
          type: string
          default: USD
        status:
          type: string
          enum:
            - draft
            - open
            - paid
            - void
            - uncollectible
        dueDate:
          type: string
          format: date
        paymentTerms:
          type: string
        notes:
          type: string
        metadata:
          type: object
          properties:
            serviceId:
              type: string
              format: uuid
            bookingId:
              type: string
              format: uuid
        paymentIntent:
          type: object
          properties:
            id:
              type: string
            status:
              type: string
            paymentMethod:
              type: string
        history:
          type: array
          items:
            type: object
            properties:
              action:
                type: string
              timestamp:
                type: string
                format: date-time
              user:
                type: string
                format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    BusinessListing:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - draft
            - published
            - archived
            - suspended
        type:
          type: string
          enum:
            - service
            - product
            - pageant
        title:
          type: string
        slug:
          type: string
        description:
          type: string
        shortDescription:
          type: string
          maxLength: 200
        categories:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
        location:
          type: object
          properties:
            address:
              type: string
            city:
              type: string
            state:
              type: string
            zipCode:
              type: string
            country:
              type: string
            coordinates:
              type: object
              properties:
                latitude:
                  type: number
                longitude:
                  type: number
        pricing:
          type: object
          properties:
            type:
              type: string
              enum:
                - fixed
                - range
                - starting_at
                - contact
            amount:
              type: number
              format: float
            maxAmount:
              type: number
              format: float
            currency:
              type: string
              default: USD
        media:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              type:
                type: string
                enum:
                  - image
                  - video
              url:
                type: string
                format: uri
              isFeatured:
                type: boolean
              order:
                type: integer
        contact:
          type: object
          properties:
            email:
              type: string
              format: email
            phone:
              type: string
            website:
              type: string
              format: uri
        socialLinks:
          type: object
          properties:
            instagram:
              type: string
            facebook:
              type: string
            tiktok:
              type: string
        stats:
          type: object
          properties:
            views:
              type: integer
            saves:
              type: integer
            inquiries:
              type: integer
            lastViewed:
              type: string
              format: date-time
        seo:
          type: object
          properties:
            title:
              type: string
            description:
              type: string
            keywords:
              type: array
              items:
                type: string
        visibility:
          type: object
          properties:
            isPublic:
              type: boolean
            isFeatured:
              type: boolean
            showInSearch:
              type: boolean
            showPricing:
              type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - businessId
        - type
        - title
        - description
    PerformanceMetrics:
      type: object
      properties:
        revenue:
          type: object
          properties:
            total:
              type: number
              format: float
            growth:
              type: number
              format: float
            averagePerBooking:
              type: number
              format: float
            projectedRevenue:
              type: number
              format: float
        bookings:
          type: object
          properties:
            total:
              type: integer
            growth:
              type: number
              format: float
            completionRate:
              type: number
              format: float
            cancellationRate:
              type: number
              format: float
        clientMetrics:
          type: object
          properties:
            totalClients:
              type: integer
            newClients:
              type: integer
            returningClients:
              type: integer
            retentionRate:
              type: number
              format: float
            averageLifetimeValue:
              type: number
              format: float
        serviceDistribution:
          type: array
          items:
            type: object
            properties:
              serviceId:
                type: string
                format: uuid
              serviceName:
                type: string
              bookings:
                type: integer
              revenue:
                type: number
                format: float
              percentage:
                type: number
                format: float
              growth:
                type: number
                format: float
        timeAnalysis:
          type: object
          properties:
            peakHours:
              type: array
              items:
                type: object
                properties:
                  hour:
                    type: integer
                  bookings:
                    type: integer
            peakDays:
              type: array
              items:
                type: object
                properties:
                  day:
                    type: string
                  bookings:
                    type: integer
        seasonalTrends:
          type: array
          items:
            type: object
            properties:
              period:
                type: string
              bookings:
                type: integer
              revenue:
                type: number
                format: float
    ReportConfig:
      type: object
      properties:
        type:
          type: string
          enum:
            - performance
            - analytics
            - custom
        format:
          type: string
          enum:
            - pdf
            - csv
            - excel
        dateRange:
          type: object
          properties:
            startDate:
              type: string
              format: date
            endDate:
              type: string
              format: date
        metrics:
          type: array
          items:
            type: string
            enum:
              - revenue
              - bookings
              - clients
              - services
              - time_analysis
              - seasonal_trends
        filters:
          type: object
          properties:
            services:
              type: array
              items:
                type: string
                format: uuid
            excludeCancelled:
              type: boolean
        customization:
          type: object
          properties:
            includeLogo:
              type: boolean
            includeCharts:
              type: boolean
            includeComparisons:
              type: boolean
    Promotion:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        code:
          type: string
        discountType:
          type: string
          enum:
            - percentage
            - fixed_amount
        discountValue:
          type: number
          format: float
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - draft
            - active
            - scheduled
            - expired
            - paused
        maxRedemptions:
          type: integer
          description: null for unlimited
        perUserLimit:
          type: integer
          description: null for unlimited
        currentRedemptions:
          type: integer
          default: 0
        termsConditions:
          type: string
        applicableTo:
          type: object
          properties:
            services:
              type: array
              items:
                type: string
                format: uuid
            minimumPurchase:
              type: number
              format: float
        restrictions:
          type: object
          properties:
            newCustomersOnly:
              type: boolean
            excludedDates:
              type: array
              items:
                type: string
                format: date
        metadata:
          type: object
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - title
        - discountType
        - discountValue
        - startDate
        - endDate
    PromotionRedemption:
      type: object
      properties:
        id:
          type: string
          format: uuid
        promotionId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        orderId:
          type: string
          format: uuid
        discountAmount:
          type: number
          format: float
        originalAmount:
          type: number
          format: float
        finalAmount:
          type: number
          format: float
        redeemedAt:
          type: string
          format: date-time
    PromotionAnalytics:
      type: object
      properties:
        promotionId:
          type: string
          format: uuid
        overview:
          type: object
          properties:
            totalRedemptions:
              type: integer
            uniqueUsers:
              type: integer
            totalDiscountAmount:
              type: number
              format: float
            averageDiscountPerUse:
              type: number
              format: float
            conversionRate:
              type: number
              format: float
        timeAnalysis:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              redemptions:
                type: integer
              discountAmount:
                type: number
                format: float
        userSegments:
          type: object
          properties:
            newCustomers:
              type: integer
            returningCustomers:
              type: integer
        impact:
          type: object
          properties:
            revenueImpact:
              type: number
              format: float
            averageOrderValue:
              type: number
              format: float
            customerRetention:
              type: number
              format: float
    Review:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        reviewer:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            avatar:
              type: string
              format: uri
            isVerifiedCustomer:
              type: boolean
        rating:
          type: integer
          minimum: 1
          maximum: 5
        title:
          type: string
        comment:
          type: string
        images:
          type: array
          items:
            type: string
            format: uri
        serviceUsed:
          type: string
          description: Name of service/product reviewed
        response:
          type: object
          properties:
            text:
              type: string
            respondedBy:
              type: string
              format: uuid
            respondedAt:
              type: string
              format: date-time
        status:
          type: string
          enum:
            - pending
            - published
            - flagged
            - removed
        hasResponse:
          type: boolean
          default: false
        visibility:
          type: string
          enum:
            - public
            - private
        helpful:
          type: object
          properties:
            count:
              type: integer
            users:
              type: array
              items:
                type: string
                format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - businessId
        - reviewer
        - rating
        - comment
    ReviewStats:
      type: object
      properties:
        averageRating:
          type: number
          format: float
        totalReviews:
          type: integer
        responseRate:
          type: number
          format: float
        pendingResponses:
          type: integer
        ratingBreakdown:
          type: object
          properties:
            five:
              type: integer
            four:
              type: integer
            three:
              type: integer
            two:
              type: integer
            one:
              type: integer
        trendsOverTime:
          type: array
          items:
            type: object
            properties:
              period:
                type: string
              averageRating:
                type: number
                format: float
              totalReviews:
                type: integer
    BusinessSettings:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        notificationPreferences:
          type: object
          properties:
            bookings:
              type: boolean
              default: true
            reviews:
              type: boolean
              default: true
            marketing:
              type: boolean
              default: true
            channels:
              type: object
              properties:
                email:
                  type: boolean
                  default: true
                sms:
                  type: boolean
                  default: false
                push:
                  type: boolean
                  default: true
        businessHours:
          type: object
          properties:
            isAlwaysOpen:
              type: boolean
              default: false
            regularHours:
              type: array
              items:
                type: object
                properties:
                  dayOfWeek:
                    type: integer
                    minimum: 0
                    maximum: 6
                  isOpen:
                    type: boolean
                    default: true
                  openTime:
                    type: string
                    format: time
                  closeTime:
                    type: string
                    format: time
                  breaks:
                    type: array
                    items:
                      type: object
                      properties:
                        startTime:
                          type: string
                          format: time
                        endTime:
                          type: string
                          format: time
            specialHours:
              type: array
              items:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  isClosed:
                    type: boolean
                  openTime:
                    type: string
                    format: time
                  closeTime:
                    type: string
                    format: time
                  note:
                    type: string
        paymentSettings:
          type: object
          properties:
            stripeAccountId:
              type: string
            isStripeConnected:
              type: boolean
            defaultCurrency:
              type: string
              default: USD
            acceptedPaymentMethods:
              type: array
              items:
                type: string
                enum:
                  - card
                  - bank_transfer
        subscription:
          type: object
          properties:
            planId:
              type: string
            status:
              type: string
              enum:
                - active
                - past_due
                - canceled
                - incomplete
            currentPeriodEnd:
              type: string
              format: date-time
            cancelAtPeriodEnd:
              type: boolean
        updatedAt:
          type: string
          format: date-time
    Business:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 2
          maxLength: 100
        logo:
          type: string
          format: uri
        headerImage:
          type: string
          format: uri
        isVerified:
          type: boolean
          default: false
        isFeatured:
          type: boolean
          default: false
        rating:
          type: number
          format: float
          minimum: 0
          maximum: 5
        reviewCount:
          type: integer
          default: 0
        lastActive:
          type: string
          format: date-time
        price:
          type: string
        ages:
          type: string
        category:
          $ref: '#/Category'
        tags:
          type: array
          items:
            type: string
        phone:
          type: string
        email:
          type: string
          format: email
        website:
          type: string
          format: uri
        images:
          type: array
          items:
            type: string
            format: uri
        shortDescription:
          type: string
          maxLength: 500
        socialLinks:
          type: array
          items:
            $ref: '#/SocialLink'
        userId:
          type: string
          format: uuid
        username:
          type: string
        following:
          type: array
          items:
            type: string
            format: uuid
        followers:
          type: array
          items:
            type: string
            format: uuid
        ctaButtonText:
          type: string
        ctaButtonLink:
          type: string
        hqLocation:
          type: string
        profileInfo:
          type: object
        likes:
          type: integer
          default: 0
      required:
        - name
        - category
    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        slug:
          type: string
        order:
          type: integer
        parentId:
          type: string
          format: uuid
        isActive:
          type: boolean
          default: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
    SocialLink:
      type: object
      properties:
        platform:
          type: string
          enum:
            - facebook
            - instagram
            - twitter
            - linkedin
            - youtube
            - tiktok
        url:
          type: string
          format: uri
    Cart:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        items:
          type: array
          items:
            $ref: '#/CartItem'
        subtotal:
          type: number
          format: float
        total:
          type: number
          format: float
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CartItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        cartId:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        storeId:
          type: string
          format: uuid
        quantity:
          type: integer
          minimum: 1
        price:
          type: number
          format: float
        attributes:
          type: object
          properties:
            color:
              type: string
            size:
              type: string
      required:
        - productId
        - storeId
        - quantity
        - price
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object
    DirectoryResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/PublicProfile'
        total:
          type: integer
        page:
          type: integer
        totalPages:
          type: integer
    PublicProfile:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        profilePicture:
          type: string
          format: uri
        role:
          type: string
          enum:
            - contestant
            - director
            - business
            - parent
            - supporter
            - judge
        title:
          type: string
          description: Current pageant title if applicable
        location:
          type: string
        socialStats:
          type: object
          properties:
            followers:
              type: integer
            following:
              type: integer
        isFollowing:
          type: boolean
          description: Whether the current user is following this profile
      required:
        - id
        - username
        - firstName
        - lastName
        - role
    ActivityPost:
      type: object
      properties:
        id:
          type: string
          format: uuid
        streamActivityId:
          type: string
          description: GetStream activity ID
        userId:
          type: string
          format: uuid
        title:
          type: string
          maxLength: 200
        content:
          type: string
        mediaUrls:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                format: uri
              type:
                type: string
                enum:
                  - image
                  - video
        tags:
          type: array
          items:
            type: string
        visibility:
          type: string
          enum:
            - public
            - followers
            - private
          default: public
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - userId
        - content
    ActivityReaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        streamReactionId:
          type: string
          description: GetStream reaction ID
        userId:
          type: string
          format: uuid
        activityId:
          type: string
        kind:
          type: string
          enum:
            - like
            - love
            - haha
            - wow
            - sad
            - angry
        data:
          type: object
          description: Additional reaction data
        createdAt:
          type: string
          format: date-time
      required:
        - userId
        - activityId
        - kind
    ActivityComment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        streamCommentId:
          type: string
          description: GetStream comment ID
        userId:
          type: string
          format: uuid
        activityId:
          type: string
        parentId:
          type: string
          description: Parent comment ID for replies
        content:
          type: string
          maxLength: 1000
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - userId
        - activityId
        - content
    CommunityGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 3
          maxLength: 100
        description:
          type: string
          maxLength: 1000
        slug:
          type: string
        visibility:
          type: string
          enum:
            - public
            - private
          default: public
        allowedRoles:
          type: array
          items:
            type: string
            enum:
              - contestant
              - director
              - business
              - parent
              - supporter
              - judge
              - admin
        profileImage:
          type: string
          format: uri
        coverImage:
          type: string
          format: uri
        settings:
          type: object
          properties:
            allowPosting:
              type: boolean
              default: true
            allowMediaUploads:
              type: boolean
              default: true
            allowFileSharing:
              type: boolean
              default: true
            allowMemberInvites:
              type: boolean
              default: true
            allowMemberMessaging:
              type: boolean
              default: true
            requireAdminApproval:
              type: boolean
              default: false
        memberCount:
          type: integer
          default: 0
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - visibility
    GroupMember:
      type: object
      properties:
        id:
          type: string
          format: uuid
        groupId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        role:
          type: string
          enum:
            - member
            - moderator
            - admin
          default: member
        status:
          type: string
          enum:
            - pending
            - active
            - banned
          default: active
        joinedAt:
          type: string
          format: date-time
      required:
        - groupId
        - userId
    GroupMedia:
      type: object
      properties:
        id:
          type: string
          format: uuid
        groupId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - image
            - video
        url:
          type: string
          format: uri
        thumbnailUrl:
          type: string
          format: uri
        caption:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - groupId
        - userId
        - type
        - url
    GroupFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
        groupId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        name:
          type: string
        url:
          type: string
          format: uri
        size:
          type: integer
        type:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - groupId
        - userId
        - name
        - url
    ContestantDetails:
      type: object
      properties:
        currentTitle:
          type: string
        platform:
          type: string
          description: Social cause or platform
        pageantHistory:
          type: array
          items:
            type: object
            properties:
              pageantName:
                type: string
              year:
                type: integer
              placement:
                type: string
              title:
                type: string
        measurements:
          type: object
          properties:
            height:
              type: string
            dress:
              type: string
            shoe:
              type: string
        talents:
          type: array
          items:
            type: string
        achievements:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              organization:
                type: string
              date:
                type: string
                format: date
              description:
                type: string
        languages:
          type: array
          items:
            type: string
        education:
          type: object
          properties:
            school:
              type: string
            degree:
              type: string
            fieldOfStudy:
              type: string
            graduationYear:
              type: integer
      required:
        - currentTitle
        - platform
        - pageantHistory
        - measurements
        - talents
        - achievements
        - languages
        - education
    DirectorDashboard:
      type: object
      properties:
        id:
          type: string
          format: uuid
        directorId:
          type: string
          format: uuid
        overview:
          type: object
          properties:
            activePageants:
              type: integer
            totalContestants:
              type: integer
            upcomingEvents:
              type: integer
            pendingApplications:
              type: integer
            totalRevenue:
              type: number
              format: float
        pageantStats:
          type: array
          items:
            type: object
            properties:
              pageantId:
                type: string
                format: uuid
              title:
                type: string
              startDate:
                type: string
                format: date
              contestantCount:
                type: integer
              applicationCount:
                type: integer
              status:
                type: string
                enum:
                  - upcoming
                  - in_progress
                  - completed
        recentActivity:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              type:
                type: string
                enum:
                  - application_submitted
                  - application_reviewed
                  - contestant_registered
                  - payment_received
                  - document_uploaded
              timestamp:
                type: string
                format: date-time
              pageantId:
                type: string
                format: uuid
              pageantTitle:
                type: string
              contestantId:
                type: string
                format: uuid
              contestantName:
                type: string
              details:
                type: object
        pendingTasks:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              type:
                type: string
                enum:
                  - review_application
                  - approve_document
                  - confirm_payment
              dueDate:
                type: string
                format: date
              pageantId:
                type: string
                format: uuid
              contestantId:
                type: string
                format: uuid
              priority:
                type: string
                enum:
                  - high
                  - medium
                  - low
        upcomingDeadlines:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              title:
                type: string
              date:
                type: string
                format: date
              pageantId:
                type: string
                format: uuid
              type:
                type: string
                enum:
                  - application
                  - document
                  - payment
                  - rehearsal
              contestantsAffected:
                type: integer
    Event:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        name:
          type: string
          minLength: 3
          maxLength: 200
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        startTime:
          type: string
          format: time
        endTime:
          type: string
          format: time
        timeZone:
          type: string
        location:
          type: object
          properties:
            address:
              type: string
            city:
              type: string
            state:
              type: string
            zipCode:
              type: string
            country:
              type: string
            isTBA:
              type: boolean
              default: false
        category:
          type: string
          enum:
            - pageant
            - workshop
            - photoshoot
            - appearance
            - fundraiser
            - other
        type:
          type: string
          enum:
            - in-person
            - virtual
            - hybrid
        headerImage:
          type: string
          format: uri
        status:
          type: string
          enum:
            - draft
            - published
            - cancelled
            - completed
        capacity:
          type: integer
          minimum: 1
        isPageant:
          type: boolean
          description: Indicates if this is a pageant event
        pageantDetails:
          type: object
          properties:
            division:
              type: string
            ageGroup:
              type: string
            preliminaryDeadline:
              type: string
              format: date
            finalDeadline:
              type: string
              format: date
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - businessId
        - name
        - startDate
        - endDate
        - category
        - type
    EventPromotion:
      type: object
      properties:
        id:
          type: string
          format: uuid
        eventId:
          type: string
          format: uuid
        code:
          type: string
        type:
          type: string
          enum:
            - percentage
            - fixed
            - free
        value:
          type: number
        maxUses:
          type: integer
        usedCount:
          type: integer
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - active
            - expired
            - depleted
    EventRegistration:
      type: object
      properties:
        id:
          type: string
          format: uuid
        eventId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        ticketId:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - pending
            - confirmed
            - cancelled
        type:
          type: string
          enum:
            - contestant
            - spectator
        contestantDetails:
          type: object
          properties:
            division:
              type: string
            number:
              type: string
            paperworkStatus:
              type: string
              enum:
                - not-started
                - in-progress
                - completed
            binderId:
              type: string
              format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    FavoriteItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        itemType:
          type: string
          enum:
            - product
            - business
            - event
        itemId:
          type: string
          format: uuid
        collectionId:
          type: string
          format: uuid
          description: Optional - for organizing favorites into collections
        notes:
          type: string
          maxLength: 500
        itemData:
          type: object
          description: Denormalized item data for quick access
          properties:
            title:
              type: string
            image:
              type: string
              format: uri
            price:
              type: number
              format: float
            description:
              type: string
            url:
              type: string
        createdAt:
          type: string
          format: date-time
      required:
        - userId
        - itemType
        - itemId
    FavoriteCollection:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          maxLength: 500
        coverImage:
          type: string
          format: uri
        itemCount:
          type: integer
          default: 0
        isDefault:
          type: boolean
          default: false
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - userId
        - name
    ChatChannel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        streamChannelId:
          type: string
        type:
          type: string
          enum:
            - direct
            - group
        name:
          type: string
        image:
          type: string
          format: uri
        members:
          type: array
          items:
            type: object
            properties:
              userId:
                type: string
                format: uuid
              role:
                type: string
                enum:
                  - admin
                  - moderator
                  - member
              lastSeen:
                type: string
                format: date-time
        metadata:
          type: object
          properties:
            isPrivate:
              type: boolean
            allowedRoles:
              type: array
              items:
                type: string
                enum:
                  - contestant
                  - director
                  - business
                  - parent
                  - supporter
                  - judge
                  - admin
        settings:
          type: object
          properties:
            messageRetention:
              type: string
              enum:
                - 30_days
                - 90_days
                - infinite
            allowMedia:
              type: boolean
              default: true
            allowLinks:
              type: boolean
              default: true
            allowReactions:
              type: boolean
              default: true
        status:
          type: string
          enum:
            - active
            - archived
            - muted
        lastMessage:
          $ref: '#/ChatMessage'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ChatMessage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        streamMessageId:
          type: string
        channelId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - text
            - media
            - file
            - system
        text:
          type: string
        attachments:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - image
                  - video
                  - file
              url:
                type: string
                format: uri
              name:
                type: string
              size:
                type: integer
              mimeType:
                type: string
        mentions:
          type: array
          items:
            type: object
            properties:
              userId:
                type: string
                format: uuid
              username:
                type: string
        reactions:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              score:
                type: integer
              userId:
                type: string
                format: uuid
        metadata:
          type: object
          properties:
            isEdited:
              type: boolean
            editedAt:
              type: string
              format: date-time
            readBy:
              type: array
              items:
                type: string
                format: uuid
        parentId:
          type: string
          format: uuid
          description: For thread replies
        status:
          type: string
          enum:
            - sent
            - delivered
            - read
            - failed
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Notification:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - message
            - mention
            - task_completed
            - points_earned
            - reward_redeemed
            - booking_confirmed
            - order_status
            - document_approved
            - new_follower
            - event_reminder
            - system
        title:
          type: string
        message:
          type: string
        priority:
          type: string
          enum:
            - low
            - medium
            - high
        status:
          type: string
          enum:
            - unread
            - read
            - archived
        data:
          type: object
          description: Additional context-specific data
          properties:
            entityType:
              type: string
              enum:
                - message
                - task
                - order
                - event
                - document
                - user
                - reward
            entityId:
              type: string
              format: uuid
            action:
              type: string
            metadata:
              type: object
        link:
          type: string
          format: uri
        icon:
          type: string
        readAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
      required:
        - userId
        - type
        - message
    NotificationPreferences:
      type: object
      properties:
        email:
          type: object
          properties:
            marketing:
              type: boolean
              default: true
            newMessages:
              type: boolean
              default: true
            orderUpdates:
              type: boolean
              default: true
            eventReminders:
              type: boolean
              default: true
            bookingReminders:
              type: boolean
              default: true
            communityUpdates:
              type: boolean
              default: true
        push:
          type: object
          properties:
            newMessages:
              type: boolean
              default: true
            orderUpdates:
              type: boolean
              default: true
            eventReminders:
              type: boolean
              default: true
            bookingReminders:
              type: boolean
              default: true
            communityUpdates:
              type: boolean
              default: true
        sms:
          type: object
          properties:
            orderUpdates:
              type: boolean
              default: false
            eventReminders:
              type: boolean
              default: false
            bookingReminders:
              type: boolean
              default: false
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        orderNumber:
          type: string
          description: Human-readable order identifier
        status:
          type: string
          enum:
            - pending
            - processing
            - completed
            - cancelled
            - refunded
        items:
          type: array
          items:
            $ref: '#/OrderItem'
        storeOrders:
          type: array
          items:
            $ref: '#/StoreOrder'
        subtotal:
          type: number
          format: float
        tax:
          type: number
          format: float
        shipping:
          type: number
          format: float
        total:
          type: number
          format: float
        shippingAddress:
          $ref: '#/Address'
        billingAddress:
          $ref: '#/Address'
        paymentInfo:
          type: object
          properties:
            stripePaymentIntentId:
              type: string
            paymentMethod:
              type: string
            last4:
              type: string
            brand:
              type: string
        orderDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - userId
        - status
        - shippingAddress
        - total
    OrderItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        orderId:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        storeId:
          type: string
          format: uuid
        quantity:
          type: integer
        price:
          type: number
          format: float
        attributes:
          type: object
          properties:
            color:
              type: string
            size:
              type: string
        productSnapshot:
          type: object
          description: Snapshot of product data at time of purchase
      required:
        - productId
        - storeId
        - quantity
        - price
    StoreOrder:
      type: object
      properties:
        id:
          type: string
          format: uuid
        orderId:
          type: string
          format: uuid
        storeId:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - pending
            - processing
            - shipped
            - delivered
            - cancelled
        subtotal:
          type: number
          format: float
        shipping:
          type: number
          format: float
        total:
          type: number
          format: float
        trackingNumber:
          type: string
        trackingUrl:
          type: string
        estimatedDelivery:
          type: string
          format: date
      required:
        - orderId
        - storeId
        - status
    Address:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        street:
          type: string
        apartment:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
        country:
          type: string
        phone:
          type: string
      required:
        - firstName
        - lastName
        - street
        - city
        - state
        - zipCode
        - country
    CommunicationOverview:
      type: object
      properties:
        id:
          type: string
          format: uuid
        pageantId:
          type: string
          format: uuid
        stats:
          type: object
          properties:
            totalMessagesSent:
              type: integer
            averageOpenRate:
              type: number
              format: float
            draftMessages:
              type: integer
            emailsSent:
              type: integer
            pushNotificationsSent:
              type: integer
            lastSentAt:
              type: string
              format: date-time
    PageantMessage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        pageantId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - email
            - push_notification
        subject:
          type: string
        content:
          type: string
        htmlContent:
          type: string
        audience:
          type: object
          properties:
            type:
              type: string
              enum:
                - all
                - event
                - category
                - specific
            eventId:
              type: string
              format: uuid
            category:
              type: string
            contestantIds:
              type: array
              items:
                type: string
                format: uuid
        status:
          type: string
          enum:
            - draft
            - scheduled
            - sent
            - failed
        scheduledFor:
          type: string
          format: date-time
        sentAt:
          type: string
          format: date-time
        metrics:
          type: object
          properties:
            recipients:
              type: integer
            opens:
              type: integer
            uniqueOpens:
              type: integer
            clicks:
              type: integer
            uniqueClicks:
              type: integer
        templateId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - type
        - subject
        - content
        - audience
    MessageTemplate:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        type:
          type: string
          enum:
            - email
            - push_notification
        subject:
          type: string
        content:
          type: string
        htmlContent:
          type: string
        variables:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              required:
                type: boolean
        category:
          type: string
          enum:
            - welcome
            - reminder
            - announcement
            - other
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - type
        - subject
        - content
    PageantContestant:
      type: object
      properties:
        id:
          type: string
          format: uuid
        pageantId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        contestantNumber:
          type: string
        registrationStatus:
          type: string
          enum:
            - pending
            - approved
            - waitlist
            - withdrawn
            - disqualified
        registrationDate:
          type: string
          format: date-time
        personalInfo:
          type: object
          properties:
            name:
              type: string
            age:
              type: integer
            division:
              type: string
            title:
              type: string
            platform:
              type: string
            hometown:
              type: string
        payments:
          type: array
          items:
            type: object
            properties:
              feeId:
                type: string
                format: uuid
              amount:
                type: number
                format: float
              status:
                type: string
                enum:
                  - pending
                  - paid
                  - partial
                  - overdue
              dueDate:
                type: string
                format: date
              paidAmount:
                type: number
                format: float
              remainingAmount:
                type: number
                format: float
        submissions:
          type: array
          items:
            type: object
            properties:
              formId:
                type: string
                format: uuid
              status:
                type: string
                enum:
                  - not_started
                  - in_progress
                  - submitted
                  - approved
                  - rejected
              submittedAt:
                type: string
                format: date-time
              reviewedAt:
                type: string
                format: date-time
              reviewNotes:
                type: string
        documents:
          type: array
          items:
            type: object
            properties:
              documentId:
                type: string
                format: uuid
              status:
                type: string
                enum:
                  - pending
                  - submitted
                  - approved
                  - rejected
              fileUrl:
                type: string
                format: uri
              submittedAt:
                type: string
                format: date-time
              notes:
                type: string
        competitions:
          type: array
          items:
            type: object
            properties:
              areaId:
                type: string
                format: uuid
              status:
                type: string
                enum:
                  - registered
                  - withdrawn
                  - completed
              score:
                type: number
                format: float
              rank:
                type: integer
              notes:
                type: string
        notes:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              content:
                type: string
              createdBy:
                type: string
                format: uuid
              createdAt:
                type: string
                format: date-time
              isPrivate:
                type: boolean
    ContestantSubmission:
      type: object
      properties:
        id:
          type: string
          format: uuid
        pageantId:
          type: string
          format: uuid
        contestantId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - form
            - document
            - payment
        itemId:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - pending
            - submitted
            - approved
            - rejected
        content:
          type: object
        files:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                format: uri
              type:
                type: string
              name:
                type: string
        submittedAt:
          type: string
          format: date-time
        reviewedAt:
          type: string
          format: date-time
        reviewedBy:
          type: string
          format: uuid
        reviewNotes:
          type: string
        history:
          type: array
          items:
            type: object
            properties:
              action:
                type: string
              timestamp:
                type: string
                format: date-time
              userId:
                type: string
                format: uuid
              notes:
                type: string
    PageantFinancials:
      type: object
      properties:
        id:
          type: string
          format: uuid
        pageantId:
          type: string
          format: uuid
        summary:
          type: object
          properties:
            totalRevenue:
              type: number
              format: float
            totalExpenses:
              type: number
              format: float
            netIncome:
              type: number
              format: float
            pendingPayments:
              type: number
              format: float
        revenueBreakdown:
          type: object
          properties:
            applicationFees:
              type: number
              format: float
            competitionFees:
              type: number
              format: float
            optionalCompetitions:
              type: number
              format: float
            peoplesChoice:
              type: number
              format: float
            merchandise:
              type: number
              format: float
            other:
              type: number
              format: float
        expenseBreakdown:
          type: object
          properties:
            venue:
              type: number
              format: float
            staffing:
              type: number
              format: float
            marketing:
              type: number
              format: float
            prizes:
              type: number
              format: float
            equipment:
              type: number
              format: float
            other:
              type: number
              format: float
        monthlyStats:
          type: array
          items:
            type: object
            properties:
              month:
                type: string
                format: date
              revenue:
                type: number
                format: float
              expenses:
                type: number
                format: float
              netIncome:
                type: number
                format: float
    PageantTransaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        pageantId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - revenue
            - expense
        category:
          type: string
        amount:
          type: number
          format: float
        description:
          type: string
        date:
          type: string
          format: date
        status:
          type: string
          enum:
            - pending
            - completed
            - cancelled
        relatedTo:
          type: object
          properties:
            type:
              type: string
              enum:
                - contestant
                - vendor
                - staff
                - other
            id:
              type: string
              format: uuid
            name:
              type: string
    PageantEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
        directorId:
          type: string
          format: uuid
        basicInfo:
          type: object
          properties:
            title:
              type: string
            startDate:
              type: string
              format: date
            endDate:
              type: string
              format: date
            location:
              type: object
              properties:
                venue:
                  type: string
                address:
                  type: string
                city:
                  type: string
                state:
                  type: string
        registrationSettings:
          type: object
          properties:
            openDate:
              type: string
              format: date
            closeDate:
              type: string
              format: date
            maxContestants:
              type: integer
            currentContestants:
              type: integer
            waitlistEnabled:
              type: boolean
        fees:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
              amount:
                type: number
                format: float
              dueDate:
                type: string
                format: date
              isRequired:
                type: boolean
              allowPartialPayment:
                type: boolean
              minimumDeposit:
                type: number
                format: float
        areasOfCompetition:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
              description:
                type: string
              isRequired:
                type: boolean
              percentage:
                type: number
              fee:
                type: number
                format: float
              formId:
                type: string
                format: uuid
        documents:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              title:
                type: string
              type:
                type: string
                enum:
                  - handbook
                  - rules
                  - waiver
                  - contract
                  - other
              file:
                type: string
                format: uri
              isRequired:
                type: boolean
              dueDate:
                type: string
                format: date
        forms:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              title:
                type: string
              type:
                type: string
                enum:
                  - registration
                  - competition
                  - interview
                  - other
              fields:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type: string
                    label: string
                    required: boolean
                    options:
                      type: array
                      items:
                        type: string
              dueDate:
                type: string
                format: date
              isRequired:
                type: boolean
        schedule:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              title:
                type: string
              type:
                type: string
                enum:
                  - competition
                  - rehearsal
                  - meal
                  - appearance
                  - other
              startTime:
                type: string
                format: date-time
              endTime:
                type: string
                format: date-time
              location:
                type: string
              description:
                type: string
              isRequired:
                type: boolean
              attire:
                type: string
        status:
          type: string
          enum:
            - draft
            - published
            - in_progress
            - completed
            - cancelled
    PeoplesChoiceEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
        pageantId:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - draft
            - active
            - ended
            - cancelled
        votingPeriod:
          type: object
          properties:
            startDate:
              type: string
              format: date-time
            endDate:
              type: string
              format: date-time
        settings:
          type: object
          properties:
            paidVoting:
              type: boolean
              default: false
            votePrice:
              type: number
              format: float
            voteBundles:
              type: array
              items:
                type: object
                properties:
                  quantity:
                    type: integer
                  price:
                    type: number
                    format: float
                  discount:
                    type: number
                    format: float
            dailyVoteLimit:
              type: integer
              description: null for unlimited
            showVoteCount:
              type: boolean
              default: true
            showTop3:
              type: boolean
              default: true
        stats:
          type: object
          properties:
            totalContestants:
              type: integer
            totalVotes:
              type: integer
            totalRevenue:
              type: number
              format: float
            votesLastDay:
              type: integer
        contestants:
          type: array
          items:
            type: object
            properties:
              contestantId:
                type: string
                format: uuid
              name:
                type: string
              photo:
                type: string
                format: uri
              votes:
                type: integer
              rank:
                type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - pageantId
        - votingPeriod
    VotingStats:
      type: object
      properties:
        totalEvents:
          type: integer
        activeEvents:
          type: integer
        totalVotes:
          type: integer
        totalRevenue:
          type: number
          format: float
        recentActivity:
          type: array
          items:
            type: object
            properties:
              eventId:
                type: string
                format: uuid
              action:
                type: string
                enum:
                  - vote_cast
                  - bundle_purchased
              amount:
                type: number
              timestamp:
                type: string
                format: date-time
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          minLength: 3
          maxLength: 200
        slug:
          type: string
        description:
          type: string
          maxLength: 2000
        shortDescription:
          type: string
          maxLength: 500
        brand:
          type: string
        condition:
          type: string
          enum:
            - new
            - like-new
            - excellent
            - good
            - fair
        attributes:
          type: object
          properties:
            colors:
              type: array
              items:
                type: string
            sizes:
              type: array
              items:
                type: string
        categories:
          type: array
          items:
            $ref: '#/ProductCategory'
        tags:
          type: array
          items:
            type: string
        images:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                format: uri
              alt:
                type: string
              isPrimary:
                type: boolean
        stores:
          type: array
          items:
            $ref: '#/ProductStore'
        basePrice:
          type: number
          format: float
          description: Lowest price across all stores
        status:
          type: string
          enum:
            - active
            - draft
            - archived
            - out-of-stock
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - title
        - description
        - condition
        - basePrice
        - status
    ProductCategory:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        parentId:
          type: string
          format: uuid
          description: For nested categories
        image:
          type: string
          format: uri
        order:
          type: integer
      required:
        - name
    ProductStore:
      type: object
      properties:
        id:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        price:
          type: number
          format: float
        salePrice:
          type: number
          format: float
        inventory:
          type: integer
          minimum: 0
        shippingInfo:
          type: object
          properties:
            isAvailable:
              type: boolean
            price:
              type: number
              format: float
            estimatedDays:
              type: string
        status:
          type: string
          enum:
            - active
            - out-of-stock
            - discontinued
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - productId
        - businessId
        - price
        - status
    PublicVotingEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
        pageantId:
          type: string
          format: uuid
        pageantName:
          type: string
        status:
          type: string
          enum:
            - active
            - upcoming
            - ended
        votingPeriod:
          type: object
          properties:
            startDate:
              type: string
              format: date-time
            endDate:
              type: string
              format: date-time
        pricing:
          type: object
          properties:
            singleVotePrice:
              type: number
              format: float
            bundles:
              type: array
              items:
                type: object
                properties:
                  votes:
                    type: integer
                  price:
                    type: number
                    format: float
                  savings:
                    type: number
                    format: float
        stats:
          type: object
          properties:
            totalContestants:
              type: integer
            totalVotes:
              type: integer
            topContestants:
              type: array
              items:
                $ref: '#/VotingContestant'
    VotingContestant:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        title:
          type: string
        photo:
          type: string
          format: uri
        bio:
          type: string
        platform:
          type: string
        votes:
          type: integer
        rank:
          type: integer
        socialLinks:
          type: object
          properties:
            instagram:
              type: string
            facebook:
              type: string
            tiktok:
              type: string
        gallery:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                format: uri
              caption:
                type: string
    VoteTransaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        contestantId:
          type: string
          format: uuid
        numberOfVotes:
          type: integer
        amount:
          type: number
          format: float
        paymentStatus:
          type: string
          enum:
            - pending
            - completed
            - failed
        paymentMethod:
          type: string
        transactionId:
          type: string
        createdAt:
          type: string
          format: date-time
    ResaleShipment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        shipmentNumber:
          type: string
          description: Human-readable shipment identifier
        status:
          type: string
          enum:
            - pending
            - in_transit
            - received
            - processed
            - completed
            - cancelled
        trackingNumber:
          type: string
        shippingCarrier:
          type: string
        items:
          type: array
          items:
            $ref: '#/ResaleItem'
        shippingAddress:
          $ref: ../schemas/orders.yaml#/Address
        returnAddress:
          $ref: ../schemas/orders.yaml#/Address
        notes:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ResaleItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        shipmentId:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
          description: ID of the product listing if accepted
        status:
          type: string
          enum:
            - pending_review
            - accepted
            - rejected
            - donated
            - listed
            - sold
            - returned
        type:
          type: string
          enum:
            - dress
            - gown
            - costume
            - shoes
            - accessories
            - other
        details:
          type: object
          properties:
            brand:
              type: string
            size:
              type: string
            color:
              type: string
            condition:
              type: string
              enum:
                - new_with_tags
                - like_new
                - gently_used
                - well_worn
            originalPrice:
              type: number
              format: float
            askingPrice:
              type: number
              format: float
            description:
              type: string
            yearPurchased:
              type: integer
        images:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                format: uri
              type:
                type: string
                enum:
                  - main
                  - detail
                  - damage
                  - tag
        reviewNotes:
          type: string
          description: Internal notes from review process
        listingStats:
          type: object
          properties:
            views:
              type: integer
            saves:
              type: integer
            dateListed:
              type: string
              format: date-time
            dateSold:
              type: string
              format: date-time
            soldPrice:
              type: number
              format: float
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ResaleOverview:
      type: object
      properties:
        processingCount:
          type: integer
        processedCount:
          type: integer
        soldCount:
          type: integer
        totalEarnings:
          type: number
          format: float
        availableBalance:
          type: number
          format: float
        pendingBalance:
          type: number
          format: float
        recentShipments:
          type: array
          items:
            $ref: '#/ResaleShipment'
        recentSales:
          type: array
          items:
            $ref: '#/ResaleItem'
    ResaleEarnings:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        totalEarnings:
          type: number
          format: float
        availableBalance:
          type: number
          format: float
        pendingBalance:
          type: number
          format: float
        onHoldBalance:
          type: number
          format: float
        payoutHistory:
          type: array
          items:
            $ref: '#/ResalePayout'
        monthlyStats:
          type: array
          items:
            type: object
            properties:
              month:
                type: string
                format: date
              itemsSold:
                type: integer
              earnings:
                type: number
                format: float
        itemStats:
          type: object
          properties:
            totalItemsSold:
              type: integer
            averageSellingPrice:
              type: number
              format: float
            bestSellingCategory:
              type: string
    ResalePayout:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        amount:
          type: number
          format: float
        status:
          type: string
          enum:
            - pending
            - processing
            - completed
            - failed
            - cancelled
        paymentMethod:
          type: object
          properties:
            type:
              type: string
              enum:
                - bank_transfer
                - paypal
                - stripe
            last4:
              type: string
            accountName:
              type: string
        requestedAt:
          type: string
          format: date-time
        processedAt:
          type: string
          format: date-time
        notes:
          type: string
    UserSettings:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        notifications:
          $ref: '#/NotificationPreferences'
        privacy:
          $ref: '#/PrivacySettings'
        account:
          $ref: '#/AccountSettings'
        updatedAt:
          type: string
          format: date-time
    PrivacySettings:
      type: object
      properties:
        profileVisibility:
          type: string
          enum:
            - public
            - private
            - friends
          default: public
        showEmail:
          type: boolean
          default: false
        showPhone:
          type: boolean
          default: false
        showLocation:
          type: boolean
          default: true
        showBirthday:
          type: boolean
          default: false
        allowMessagesFrom:
          type: string
          enum:
            - everyone
            - followers
            - none
          default: everyone
        allowTagging:
          type: boolean
          default: true
        showActivityStatus:
          type: boolean
          default: true
    AccountSettings:
      type: object
      properties:
        timezone:
          type: string
          default: UTC
        language:
          type: string
          default: en
        currency:
          type: string
          default: USD
        dateFormat:
          type: string
          enum:
            - MM/DD/YYYY
            - DD/MM/YYYY
            - YYYY-MM-DD
          default: MM/DD/YYYY
        timeFormat:
          type: string
          enum:
            - 12h
            - 24h
          default: 12h
        emailFrequency:
          type: string
          enum:
            - immediate
            - daily
            - weekly
            - never
          default: immediate
    ShippingLabel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - label
            - pickup
            - dropoff
        status:
          type: string
          enum:
            - pending
            - generated
            - used
            - expired
            - cancelled
        labelUrl:
          type: string
          format: uri
          description: URL to download shipping label PDF
        trackingNumber:
          type: string
        carrier:
          type: string
        pickupDetails:
          type: object
          properties:
            date:
              type: string
              format: date
            timeWindow:
              type: string
              enum:
                - morning
                - afternoon
                - evening
            instructions:
              type: string
        dropoffLocation:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            address:
              $ref: ../schemas/orders.yaml#/Address
            hours:
              type: object
              properties:
                monday:
                  type: string
                tuesday:
                  type: string
                wednesday:
                  type: string
                thursday:
                  type: string
                friday:
                  type: string
                saturday:
                  type: string
                sunday:
                  type: string
        packageDetails:
          type: object
          properties:
            itemCount:
              type: integer
            weight:
              type: number
            dimensions:
              type: object
              properties:
                length:
                  type: number
                width:
                  type: number
                height:
                  type: number
        expiresAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
    ResaleEstimate:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        itemDetails:
          type: object
          properties:
            brand:
              type: string
            styleNumber:
              type: string
            purchaseDate:
              type: string
              format: date
            purchasePrice:
              type: number
              format: float
            condition:
              type: string
              enum:
                - new_with_tags
                - like_new
                - gently_used
                - well_worn
            repairs:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - missing_beads
                      - broken_zipper
                      - torn_seam
                      - other
                  description:
                    type: string
            cleaning:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - stain
                      - discoloration
                      - smell
                      - other
                  description:
                    type: string
            images:
              type: array
              items:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
                  type:
                    type: string
                    enum:
                      - front
                      - back
                      - detail
                      - damage
        estimate:
          type: object
          properties:
            estimatedValue:
              type: number
              format: float
            estimatedCommission:
              type: number
              format: float
            confidence:
              type: string
              enum:
                - high
                - medium
                - low
            notes:
              type: string
        createdAt:
          type: string
          format: date-time
    StaffMember:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        roleId:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - pending
            - active
            - inactive
        permissions:
          type: object
          properties:
            events:
              type: object
              properties:
                view:
                  type: boolean
                  default: false
                create:
                  type: boolean
                  default: false
                edit:
                  type: boolean
                  default: false
                delete:
                  type: boolean
                  default: false
            contestants:
              type: object
              properties:
                view:
                  type: boolean
                  default: false
                manage:
                  type: boolean
                  default: false
            judging:
              type: object
              properties:
                view:
                  type: boolean
                  default: false
                edit:
                  type: boolean
                  default: false
            finances:
              type: object
              properties:
                view:
                  type: boolean
                  default: false
                manage:
                  type: boolean
                  default: false
        lastLogin:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - firstName
        - lastName
        - email
        - roleId
    StaffRole:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        permissions:
          type: object
          properties:
            events:
              type: object
              properties:
                view:
                  type: boolean
                  default: false
                create:
                  type: boolean
                  default: false
                edit:
                  type: boolean
                  default: false
                delete:
                  type: boolean
                  default: false
            contestants:
              type: object
              properties:
                view:
                  type: boolean
                  default: false
                manage:
                  type: boolean
                  default: false
            judging:
              type: object
              properties:
                view:
                  type: boolean
                  default: false
                edit:
                  type: boolean
                  default: false
            finances:
              type: object
              properties:
                view:
                  type: boolean
                  default: false
                manage:
                  type: boolean
                  default: false
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - permissions
    Store:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        name:
          type: string
          minLength: 2
          maxLength: 100
        slug:
          type: string
        description:
          type: string
          maxLength: 2000
        shortDescription:
          type: string
          maxLength: 500
        logo:
          type: string
          format: uri
        bannerImage:
          type: string
          format: uri
        links:
          type: object
          properties:
            website:
              type: string
              format: uri
            facebook:
              type: string
              format: uri
            instagram:
              type: string
              format: uri
            twitter:
              type: string
              format: uri
        rating:
          type: number
          format: float
          minimum: 0
          maximum: 5
        reviewCount:
          type: integer
          default: 0
        status:
          type: string
          enum:
            - active
            - inactive
            - pending
        policies:
          type: object
          properties:
            shipping:
              type: string
            returns:
              type: string
            payments:
              type: array
              items:
                type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - businessId
        - userId
    StoreReview:
      type: object
      properties:
        id:
          type: string
          format: uuid
        storeId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        rating:
          type: integer
          minimum: 1
          maximum: 5
        title:
          type: string
          maxLength: 200
        content:
          type: string
          maxLength: 1000
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - storeId
        - userId
        - rating
    SupportTicket:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        category:
          type: string
          enum:
            - technical
            - billing
            - account
            - pageant
            - business
            - other
        priority:
          type: string
          enum:
            - low
            - medium
            - high
            - urgent
        status:
          type: string
          enum:
            - open
            - in_progress
            - resolved
            - closed
        subject:
          type: string
        description:
          type: string
        attachments:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              filename:
                type: string
              url:
                type: string
                format: uri
              size:
                type: integer
              type:
                type: string
        messages:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              sender:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - user
                      - support
                  name:
                    type: string
              content:
                type: string
              attachments:
                type: array
                items:
                  type: object
                  properties:
                    url:
                      type: string
                    filename:
                      type: string
              createdAt:
                type: string
                format: date-time
        assignedTo:
          type: string
          format: uuid
        lastUpdated:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
      required:
        - category
        - subject
        - description
    UserProfile:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
          minLength: 3
          maxLength: 30
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        profilePicture:
          type: string
          format: uri
        headerImage:
          type: string
          format: uri
        location:
          type: object
          properties:
            city:
              type: string
            state:
              type: string
            country:
              type: string
        dateOfBirth:
          type: string
          format: date
        about:
          type: string
          maxLength: 2000
        role:
          type: string
          enum:
            - contestant
            - director
            - business
            - parent
            - supporter
            - judge
            - admin
        isVerified:
          type: boolean
          default: false
        socialLinks:
          type: object
          properties:
            facebook:
              type: string
              format: uri
            instagram:
              type: string
              format: uri
            tiktok:
              type: string
              format: uri
            linkedin:
              type: string
              format: uri
            youtube:
              type: string
              format: uri
            twitter:
              type: string
              format: uri
            pinterest:
              type: string
              format: uri
        socialStats:
          type: object
          properties:
            followers:
              type: integer
              default: 0
            following:
              type: integer
              default: 0
            posts:
              type: integer
              default: 0
        achievements:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              date:
                type: string
                format: date
              award:
                type: string
              description:
                type: string
        contestantDetails:
          type: object
          properties:
            currentTitle:
              type: string
            platform:
              type: string
              description: Social cause or platform
            bio:
              type: string
              maxLength: 1000
        businessDetails:
          type: object
          properties:
            businessId:
              type: string
              format: uuid
            role:
              type: string
              enum:
                - owner
                - manager
                - staff
            businessName:
              type: string
        privacy:
          type: object
          properties:
            isPublic:
              type: boolean
              default: true
            showEmail:
              type: boolean
              default: false
            showPhone:
              type: boolean
              default: false
            showLocation:
              type: boolean
              default: true
            showBirthday:
              type: boolean
              default: false
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - username
        - firstName
        - lastName
        - role
    UserStatus:
      type: object
      properties:
        exists:
          type: boolean
        isRegistered:
          type: boolean
        email:
          type: string
          format: email
    Wallet:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        stripeCustomerId:
          type: string
        stripeAccountId:
          type: string
          description: For receiving payments (resale earnings)
        balance:
          type: number
          format: float
        availableBalance:
          type: number
          format: float
        pendingBalance:
          type: number
          format: float
        currency:
          type: string
          default: USD
        status:
          type: string
          enum:
            - active
            - frozen
            - suspended
        defaultPaymentMethodId:
          type: string
        updatedAt:
          type: string
          format: date-time
    PaymentMethod:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        stripePaymentMethodId:
          type: string
        type:
          type: string
          enum:
            - card
            - bank_account
        isDefault:
          type: boolean
        details:
          type: object
          properties:
            brand:
              type: string
            last4:
              type: string
            expiryMonth:
              type: string
            expiryYear:
              type: string
            cardholderName:
              type: string
        createdAt:
          type: string
          format: date-time
    Subscription:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        stripeSubscriptionId:
          type: string
        status:
          type: string
          enum:
            - active
            - past_due
            - canceled
            - incomplete
            - incomplete_expired
            - trialing
            - unpaid
        planId:
          type: string
        planName:
          type: string
        amount:
          type: number
          format: float
        interval:
          type: string
          enum:
            - month
            - year
        currentPeriodStart:
          type: string
          format: date-time
        currentPeriodEnd:
          type: string
          format: date-time
        cancelAtPeriodEnd:
          type: boolean
        paymentMethodId:
          type: string
        createdAt:
          type: string
          format: date-time
    WalletTransaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - payment
            - refund
            - deposit
            - withdrawal
            - subscription_charge
            - resale_earning
        amount:
          type: number
          format: float
        currency:
          type: string
          default: USD
        status:
          type: string
          enum:
            - pending
            - completed
            - failed
            - cancelled
        description:
          type: string
        metadata:
          type: object
          properties:
            orderId:
              type: string
              format: uuid
            subscriptionId:
              type: string
            resaleItemId:
              type: string
              format: uuid
        paymentMethodId:
          type: string
        stripeTransactionId:
          type: string
        createdAt:
          type: string
          format: date-time
paths:
  $ref: ./paths/index.yaml
  business-management:
    get:
      summary: Get business management overview
      tags:
        - Admin Businesses
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved business management overview
          content:
            application/json:
              schema:
                $ref: ../schemas/admin-businesses.yaml#/BusinessManagementOverview
  businesses:
    get:
      summary: Search and filter businesses
      tags:
        - Business
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Search query for business name or description
        - in: query
          name: type
          schema:
            type: string
            enum:
              - service
              - product
              - pageant
        - in: query
          name: category
          schema:
            type: string
          description: Filter by business category
        - in: query
          name: location
          schema:
            type: string
          description: Filter by city or state
        - in: query
          name: rating
          schema:
            type: number
          description: Filter by minimum rating
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - rating
              - newest
              - name
              - popular
          default: rating
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved businesses
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/business.yaml#/Business
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
                  filters:
                    type: object
                    properties:
                      categories:
                        type: array
                        items:
                          type: string
                      locations:
                        type: array
                        items:
                          type: string
    post:
      summary: Create a new business
      tags:
        - Business
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/business.yaml#/Business
      responses:
        '201':
          description: Business created successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  pending-applications:
    get:
      summary: Get pending business applications
      tags:
        - Admin Businesses
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved pending applications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/admin-businesses.yaml#/BusinessApplication
  review-application:
    put:
      summary: Review business application
      tags:
        - Admin Businesses
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                decision:
                  type: string
                  enum:
                    - approve
                    - reject
                reason:
                  type: string
                verificationNotes:
                  type: string
      responses:
        '200':
          description: Application review completed successfully
  business-verification:
    post:
      summary: Add verification note
      tags:
        - Admin Businesses
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  type: string
                documentType:
                  type: string
      responses:
        '201':
          description: Verification note added successfully
  admin-overview:
    get:
      summary: Get admin dashboard overview
      tags:
        - Admin Dashboard
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successfully retrieved admin overview
          content:
            application/json:
              schema:
                $ref: ../schemas/admin-dashboard.yaml#/AdminDashboard
  platform-activity:
    get:
      summary: Get platform activity metrics
      tags:
        - Admin Dashboard
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: period
          schema:
            type: string
            enum:
              - day
              - week
              - month
              - year
          default: week
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successfully retrieved platform activity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                    metrics:
                      type: object
  user-statistics:
    get:
      summary: Get detailed user statistics
      tags:
        - Admin Dashboard
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: userType
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved user statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  byType:
                    type: object
                  byStatus:
                    type: object
                  trends:
                    type: array
  recent-activity:
    get:
      summary: Get recent activity
      tags:
        - Director Dashboard
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: pageantId
          schema:
            type: string
            format: uuid
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved recent activity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                    timestamp:
                      type: string
                      format: date-time
                    details:
                      type: object
  moderation-overview:
    get:
      summary: Get content moderation overview
      tags:
        - Content Moderation
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved moderation overview
          content:
            application/json:
              schema:
                $ref: ../schemas/admin-moderation.yaml#/ContentModeration
  reports:
    get:
      summary: Get reports
      tags:
        - Content Moderation
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - pending
              - investigating
              - resolved
              - dismissed
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: priority
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/admin-moderation.yaml#/Report
  report-details:
    get:
      summary: Get report details
      tags:
        - Content Moderation
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved report details
          content:
            application/json:
              schema:
                $ref: ../schemas/admin-moderation.yaml#/Report
  handle-report:
    put:
      summary: Handle report
      tags:
        - Content Moderation
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                    - warning
                    - suspend
                    - delete
                    - restore
                    - dismiss
                notes:
                  type: string
                notifyReporter:
                  type: boolean
      responses:
        '200':
          description: Report handled successfully
  content-review:
    post:
      summary: Review content
      tags:
        - Content Moderation
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/admin-moderation.yaml#/ContentReview
      responses:
        '200':
          description: Content reviewed successfully
  user-management:
    get:
      summary: Get user management overview
      tags:
        - Admin Users
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved user management overview
          content:
            application/json:
              schema:
                $ref: ../schemas/admin-users.yaml#/UserManagementOverview
  users:
    get:
      summary: Get user list
      tags:
        - Admin Users
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - active
              - pending
              - suspended
              - deactivated
              - deleted
        - in: query
          name: role
          schema:
            type: string
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - name
              - email
              - joinDate
              - lastActive
          default: joinDate
      responses:
        '200':
          description: Successfully retrieved users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/admin-users.yaml#/AdminUserList
  user-details:
    get:
      summary: Get user details
      tags:
        - Admin Users
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved user details
          content:
            application/json:
              schema:
                $ref: ../schemas/admin-users.yaml#/AdminUserDetail
  update-user-status:
    put:
      summary: Update user status
      tags:
        - Admin Users
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - active
                    - suspended
                    - deactivated
                reason:
                  type: string
      responses:
        '200':
          description: User status updated successfully
  flag-user:
    post:
      summary: Flag user account
      tags:
        - Admin Users
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                severity:
                  type: string
                  enum:
                    - low
                    - medium
                    - high
      responses:
        '200':
          description: User flagged successfully
  export-users:
    post:
      summary: Export users
      tags:
        - Admin Users
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                format:
                  type: string
                  enum:
                    - csv
                    - excel
                filters:
                  type: object
                  properties:
                    status:
                      type: string
                    role:
                      type: string
                    dateRange:
                      type: object
                      properties:
                        start:
                          type: string
                          format: date
                        end:
                          type: string
                          format: date
      responses:
        '200':
          description: Users exported successfully
          content:
            application/csv:
              schema:
                type: string
                format: binary
            application/vnd.ms-excel:
              schema:
                type: string
                format: binary
  leaderboard:
    get:
      summary: Get leaderboard rankings
      tags:
        - Ambassador Leaderboard
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - daily
              - weekly
              - monthly
              - all_time
          default: weekly
        - in: query
          name: category
          schema:
            type: string
            enum:
              - points
              - tasks
              - referrals
          default: points
        - in: query
          name: limit
          schema:
            type: integer
            default: 100
      responses:
        '200':
          description: Successfully retrieved leaderboard
          content:
            application/json:
              schema:
                $ref: ../schemas/ambassador-leaderboard.yaml#/LeaderboardPeriod
  ambassador-rank:
    get:
      summary: Get ambassador's current ranking
      tags:
        - Ambassador Leaderboard
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved ambassador ranking
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentRank:
                    type: integer
                  nearbyRanks:
                    type: array
                    items:
                      $ref: ../schemas/ambassador-leaderboard.yaml#/LeaderboardEntry
                  stats:
                    type: object
                    properties:
                      pointsToNextRank:
                        type: integer
                      rankChange:
                        type: integer
  points-summary:
    get:
      summary: Get ambassador points summary
      tags:
        - Ambassador Points
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved points summary
          content:
            application/json:
              schema:
                $ref: ../schemas/ambassador-points.yaml#/PointsSummary
  points-history:
    get:
      summary: Get points transaction history
      tags:
        - Ambassador Points
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - earned
              - spent
              - expired
              - bonus
              - adjustment
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved points history
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/ambassador-points.yaml#/PointTransaction
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
  points-adjustment:
    post:
      summary: Create manual points adjustment
      tags:
        - Ambassador Points
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: integer
                type:
                  type: string
                  enum:
                    - bonus
                    - adjustment
                description:
                  type: string
                reason:
                  type: string
      responses:
        '201':
          description: Points adjustment created successfully
  rewards:
    get:
      summary: Get available rewards
      tags:
        - Ambassador Rewards
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: category
          schema:
            type: string
            enum:
              - digital
              - physical
              - coaching
              - elite
        - in: query
          name: level
          schema:
            type: string
            enum:
              - rising_star
              - shining_star
              - superstar
              - crown_elite
      responses:
        '200':
          description: Successfully retrieved rewards
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/ambassador-rewards.yaml#/AmbassadorReward
  reward-redemption:
    post:
      summary: Redeem reward
      tags:
        - Ambassador Rewards
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rewardId:
                  type: string
                  format: uuid
                shippingAddress:
                  type: object
                  properties:
                    name:
                      type: string
                    street:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zipCode:
                      type: string
                    country:
                      type: string
      responses:
        '201':
          description: Reward redemption successful
          content:
            application/json:
              schema:
                $ref: ../schemas/ambassador-rewards.yaml#/RewardRedemption
  redemption-history:
    get:
      summary: Get reward redemption history
      tags:
        - Ambassador Rewards
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - pending
              - processing
              - fulfilled
              - cancelled
      responses:
        '200':
          description: Successfully retrieved redemption history
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/ambassador-rewards.yaml#/RewardRedemption
  categories:
    get:
      summary: Get all article categories
      tags:
        - Articles
      responses:
        '200':
          description: Successfully retrieved categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/articles.yaml#/ArticleCategory
    post:
      summary: Create a new article category
      tags:
        - Articles
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/articles.yaml#/ArticleCategory
      responses:
        '201':
          description: Category created successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/articles.yaml#/ArticleCategory
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  category:
    get:
      summary: Get a specific category with its topics
      tags:
        - Articles
      responses:
        '200':
          description: Successfully retrieved category
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../schemas/articles.yaml#/ArticleCategory
                  - type: object
                    properties:
                      topics:
                        type: array
                        items:
                          $ref: ../schemas/articles.yaml#/ArticleTopic
        '404':
          description: Category not found
    put:
      summary: Update a category
      tags:
        - Articles
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/articles.yaml#/ArticleCategory
      responses:
        '200':
          description: Category updated successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Category not found
    delete:
      summary: Delete a category
      tags:
        - Articles
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Category deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Category not found
  topics:
    post:
      summary: Create a new topic
      tags:
        - Articles
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/articles.yaml#/ArticleTopic
      responses:
        '201':
          description: Topic created successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  articles:
    get:
      summary: Search articles
      tags:
        - Articles
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Search query
        - in: query
          name: categoryId
          schema:
            type: string
            format: uuid
          description: Filter by category
        - in: query
          name: topicId
          schema:
            type: string
            format: uuid
          description: Filter by topic
        - in: query
          name: tags
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          description: Filter by tags
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Successfully retrieved articles
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/articles.yaml#/Article
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
    post:
      summary: Create a new article
      tags:
        - Articles
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/articles.yaml#/Article
      responses:
        '201':
          description: Article created successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  login:
    post:
      summary: Request login via Supabase magic link
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                redirectTo:
                  type: string
                  description: URL to redirect to after email verification
              required:
                - email
      responses:
        '200':
          description: Magic link sent successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/common.yaml#/SuccessResponse
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: ../schemas/common.yaml#/Error
  logout:
    post:
      summary: Logout current user and invalidate session
      tags:
        - Authentication
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              schema:
                $ref: ../schemas/common.yaml#/SuccessResponse
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../schemas/common.yaml#/Error
  appearances:
    get:
      summary: Get appearances for a binder
      tags:
        - Binder Appearances
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successfully retrieved appearances
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/binder-sections.yaml#/Appearance
                  stats:
                    type: object
                    properties:
                      totalAppearances:
                        type: integer
                      totalHours:
                        type: integer
                      totalPeopleReached:
                        type: integer
                      totalFundsRaised:
                        type: number
    post:
      summary: Create new appearance
      tags:
        - Binder Appearances
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/Appearance
      responses:
        '201':
          description: Appearance created successfully
  appearance:
    get:
      summary: Get appearance details
      tags:
        - Binder Appearances
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved appearance
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-sections.yaml#/Appearance
    put:
      summary: Update appearance
      tags:
        - Binder Appearances
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/Appearance
      responses:
        '200':
          description: Appearance updated successfully
    delete:
      summary: Delete appearance
      tags:
        - Binder Appearances
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Appearance deleted successfully
  appearance-photos:
    post:
      summary: Add photos to appearance
      tags:
        - Binder Appearances
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photos:
                  type: array
                  items:
                    type: string
                    format: binary
                captions:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Photos added successfully
  booking-links:
    get:
      summary: Get booking links
      tags:
        - Binder Appearances
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved booking links
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/binder-sections.yaml#/AppearanceBookingLink
    post:
      summary: Create booking link
      tags:
        - Binder Appearances
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/AppearanceBookingLink
      responses:
        '201':
          description: Booking link created successfully
  booking-link:
    put:
      summary: Update booking link
      tags:
        - Binder Appearances
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/AppearanceBookingLink
      responses:
        '200':
          description: Booking link updated successfully
    delete:
      summary: Delete booking link
      tags:
        - Binder Appearances
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Booking link deleted successfully
  competitions:
    get:
      summary: Get competitions for a binder
      tags:
        - Binder Competitions
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: includeOfficial
          schema:
            type: boolean
          description: Include official pageant competitions
        - in: query
          name: participatingOnly
          schema:
            type: boolean
          description: Only show competitions contestant is participating in
        - in: query
          name: type
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved competitions
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/binder-sections.yaml#/Competition
                  summary:
                    type: object
                    properties:
                      totalCompetitions:
                        type: integer
                      mandatoryCompetitions:
                        type: integer
                      optionalCompetitions:
                        type: integer
                      totalPercentage:
                        type: number
                        format: float
    post:
      summary: Create new competition
      tags:
        - Binder Competitions
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/Competition
      responses:
        '201':
          description: Competition created successfully
        '403':
          description: Cannot create competitions for official pageant
  competition:
    get:
      summary: Get competition details
      tags:
        - Binder Competitions
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved competition
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-sections.yaml#/Competition
    put:
      summary: Update competition
      tags:
        - Binder Competitions
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/Competition
      responses:
        '200':
          description: Competition updated successfully
        '403':
          description: Cannot modify official pageant competition
    delete:
      summary: Delete competition
      tags:
        - Binder Competitions
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Competition deleted successfully
        '403':
          description: Cannot delete official pageant competition
  competition-participation:
    put:
      summary: Update participation status for competition
      tags:
        - Binder Competitions
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isParticipating:
                  type: boolean
                notes:
                  type: string
      responses:
        '200':
          description: Participation status updated successfully
  binder-documents:
    get:
      summary: Get all documents for a binder
      tags:
        - Binder Documents
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: type
          schema:
            type: string
            enum:
              - contract
              - application
              - photo
              - bio
              - resume
              - other
        - in: query
          name: status
          schema:
            type: string
            enum:
              - pending
              - submitted
              - approved
              - rejected
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - date
              - name
              - type
              - status
          default: date
      responses:
        '200':
          description: Successfully retrieved documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/binder-sections.yaml#/BinderDocument
                  total:
                    type: integer
                  pending:
                    type: integer
                  submitted:
                    type: integer
    post:
      summary: Upload new document
      tags:
        - Binder Documents
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                type:
                  type: string
                  enum:
                    - contract
                    - application
                    - photo
                    - bio
                    - resume
                    - other
                title:
                  type: string
                notes:
                  type: string
                dueDate:
                  type: string
                  format: date
      responses:
        '201':
          description: Document uploaded successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-sections.yaml#/BinderDocument
  binder-document:
    get:
      summary: Get specific document
      tags:
        - Binder Documents
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: documentId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved document
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-sections.yaml#/BinderDocument
        '404':
          description: Document not found
    put:
      summary: Update document metadata
      tags:
        - Binder Documents
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                type:
                  type: string
                  enum:
                    - contract
                    - application
                    - photo
                    - bio
                    - resume
                    - other
                status:
                  type: string
                  enum:
                    - pending
                    - submitted
                    - approved
                    - rejected
                notes:
                  type: string
                dueDate:
                  type: string
                  format: date
      responses:
        '200':
          description: Document updated successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-sections.yaml#/BinderDocument
    delete:
      summary: Delete document
      tags:
        - Binder Documents
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Document deleted successfully
  document-file:
    put:
      summary: Update document file
      tags:
        - Binder Documents
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Document file updated successfully
  document-status:
    put:
      summary: Update document status
      tags:
        - Binder Documents
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - pending
                    - submitted
                    - approved
                    - rejected
                notes:
                  type: string
      responses:
        '200':
          description: Document status updated successfully
  budget:
    get:
      summary: Get budget overview
      tags:
        - Finances
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved budget overview
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-finances.yaml#/BudgetOverview
    put:
      summary: Update budget settings
      tags:
        - Finances
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                totalBudget:
                  type: number
                  format: float
      responses:
        '200':
          description: Budget settings updated successfully
  expenses:
    get:
      summary: Get expenses
      tags:
        - Finances
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: category
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
            enum:
              - planned
              - pending
              - paid
              - overdue
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - date
              - amount
              - name
              - status
          default: date
      responses:
        '200':
          description: Successfully retrieved expenses
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/binder-finances.yaml#/Expense
                  summary:
                    type: object
                    properties:
                      total:
                        type: number
                        format: float
                      count:
                        type: integer
                      byCategory:
                        type: object
                        additionalProperties:
                          type: number
                          format: float
    post:
      summary: Create new expense
      tags:
        - Finances
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  $ref: ../schemas/binder-finances.yaml#/Expense
                receipts:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Expense created successfully
  expense:
    get:
      summary: Get expense details
      tags:
        - Finances
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved expense
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-finances.yaml#/Expense
    put:
      summary: Update expense
      tags:
        - Finances
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-finances.yaml#/Expense
      responses:
        '200':
          description: Expense updated successfully
    delete:
      summary: Delete expense
      tags:
        - Finances
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Expense deleted successfully
  expense-receipts:
    post:
      summary: Add receipts to expense
      tags:
        - Finances
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                receipts:
                  type: array
                  items:
                    type: string
                    format: binary
                notes:
                  type: string
      responses:
        '200':
          description: Receipts added successfully
  fundraisers:
    get:
      summary: Get fundraisers
      tags:
        - Fundraising
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: status
          schema:
            type: string
            enum:
              - draft
              - active
              - paused
              - completed
              - archived
      responses:
        '200':
          description: Successfully retrieved fundraisers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/binder-fundraising.yaml#/Fundraiser
    post:
      summary: Create fundraiser
      tags:
        - Fundraising
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  $ref: ../schemas/binder-fundraising.yaml#/Fundraiser
                coverImage:
                  type: string
                  format: binary
      responses:
        '201':
          description: Fundraiser created successfully
  fundraiser:
    get:
      summary: Get fundraiser details
      tags:
        - Fundraising
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved fundraiser
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-fundraising.yaml#/Fundraiser
    put:
      summary: Update fundraiser
      tags:
        - Fundraising
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-fundraising.yaml#/Fundraiser
      responses:
        '200':
          description: Fundraiser updated successfully
    delete:
      summary: Delete fundraiser
      tags:
        - Fundraising
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Fundraiser deleted successfully
  fundraiser-status:
    put:
      summary: Update fundraiser status
      tags:
        - Fundraising
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - draft
                    - active
                    - paused
                    - completed
                    - archived
      responses:
        '200':
          description: Status updated successfully
  fundraiser-updates:
    post:
      summary: Add fundraiser update
      tags:
        - Fundraising
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                media:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Update added successfully
  donations:
    get:
      summary: Get donations for fundraiser
      tags:
        - Fundraising
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - pending
              - completed
              - failed
              - refunded
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successfully retrieved donations
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/binder-fundraising.yaml#/Donation
                  summary:
                    type: object
                    properties:
                      total:
                        type: number
                        format: float
                      count:
                        type: integer
                      average:
                        type: number
                        format: float
  thank-donor:
    post:
      summary: Mark donor as thanked
      tags:
        - Fundraising
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Donor marked as thanked successfully
  media-kits:
    get:
      summary: Get media kits
      tags:
        - Media Kit
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: status
          schema:
            type: string
            enum:
              - draft
              - published
              - archived
      responses:
        '200':
          description: Successfully retrieved media kits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/binder-media-kit.yaml#/MediaKit
    post:
      summary: Create new media kit
      tags:
        - Media Kit
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-media-kit.yaml#/MediaKit
      responses:
        '201':
          description: Media kit created successfully
  media-kit:
    get:
      summary: Get media kit details
      tags:
        - Media Kit
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved media kit
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-media-kit.yaml#/MediaKit
    put:
      summary: Update media kit
      tags:
        - Media Kit
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-media-kit.yaml#/MediaKit
      responses:
        '200':
          description: Media kit updated successfully
    delete:
      summary: Delete media kit
      tags:
        - Media Kit
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Media kit deleted successfully
  generate-file:
    post:
      summary: Generate media kit file
      tags:
        - Media Kit
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - pdf
                    - presentation
                    - one_pager
                    - full_kit
                template:
                  type: string
                  description: Optional template ID to use
      responses:
        '200':
          description: File generated successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-media-kit.yaml#/MediaKitFile
  media-kit-files:
    get:
      summary: Get media kit files
      tags:
        - Media Kit
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - pdf
              - presentation
              - one_pager
              - full_kit
      responses:
        '200':
          description: Successfully retrieved media kit files
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/binder-media-kit.yaml#/MediaKitFile
  media-kit-file:
    delete:
      summary: Delete media kit file
      tags:
        - Media Kit
      security:
        - BearerAuth: []
      responses:
        '200':
          description: File deleted successfully
  packing-list:
    get:
      summary: Get packing list for a binder
      tags:
        - Binder Packing List
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved packing list
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-sections.yaml#/PackingList
    post:
      summary: Create new packing list
      tags:
        - Binder Packing List
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/PackingList
      responses:
        '201':
          description: Packing list created successfully
  packing-categories:
    post:
      summary: Add category to packing list
      tags:
        - Binder Packing List
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/PackingCategory
      responses:
        '201':
          description: Category added successfully
  packing-category:
    put:
      summary: Update packing category
      tags:
        - Binder Packing List
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/PackingCategory
      responses:
        '200':
          description: Category updated successfully
    delete:
      summary: Delete packing category
      tags:
        - Binder Packing List
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Category deleted successfully
  packing-items:
    post:
      summary: Add item to packing list
      tags:
        - Binder Packing List
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/PackingItem
      responses:
        '201':
          description: Item added successfully
  packing-item:
    put:
      summary: Update packing item
      tags:
        - Binder Packing List
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/PackingItem
      responses:
        '200':
          description: Item updated successfully
    delete:
      summary: Delete packing item
      tags:
        - Binder Packing List
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Item deleted successfully
  packing-item-status:
    put:
      summary: Toggle packed status of item
      tags:
        - Binder Packing List
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isPacked:
                  type: boolean
                notes:
                  type: string
      responses:
        '200':
          description: Item status updated successfully
  binder-paperwork:
    get:
      summary: Get all paperwork for a binder
      tags:
        - Binder Paperwork
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: status
          schema:
            type: string
            enum:
              - draft
              - pending_review
              - reviewed
              - approved
              - rejected
              - submitted
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: dueDate
          schema:
            type: string
            format: date
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - dueDate
              - status
              - lastReviewed
              - title
          default: dueDate
      responses:
        '200':
          description: Successfully retrieved paperwork
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/binder-sections.yaml#/BinderPaperwork
                  summary:
                    type: object
                    properties:
                      total:
                        type: integer
                      pendingReview:
                        type: integer
                      overdue:
                        type: integer
                      approved:
                        type: integer
    post:
      summary: Create new paperwork
      tags:
        - Binder Paperwork
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                title:
                  type: string
                type:
                  type: string
                dueDate:
                  type: string
                  format: date
                notes:
                  type: string
      responses:
        '201':
          description: Paperwork created successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-sections.yaml#/BinderPaperwork
  paperwork:
    get:
      summary: Get specific paperwork
      tags:
        - Binder Paperwork
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: paperworkId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved paperwork
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-sections.yaml#/BinderPaperwork
    put:
      summary: Update paperwork metadata
      tags:
        - Binder Paperwork
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                type:
                  type: string
                dueDate:
                  type: string
                  format: date
                notes:
                  type: string
      responses:
        '200':
          description: Paperwork updated successfully
    delete:
      summary: Delete paperwork
      tags:
        - Binder Paperwork
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Paperwork deleted successfully
  paperwork-review:
    post:
      summary: Submit paperwork for review
      tags:
        - Binder Paperwork
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notes:
                  type: string
      responses:
        '200':
          description: Paperwork submitted for review successfully
    put:
      summary: Review paperwork
      tags:
        - Binder Paperwork
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - approved
                    - rejected
                reviewNotes:
                  type: string
      responses:
        '200':
          description: Paperwork reviewed successfully
  paperwork-file:
    put:
      summary: Update paperwork file
      tags:
        - Binder Paperwork
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Paperwork file updated successfully
  platform:
    get:
      summary: Get platform details
      tags:
        - Platform Development
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved platform
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-platform.yaml#/Platform
    post:
      summary: Create platform
      tags:
        - Platform Development
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-platform.yaml#/Platform
      responses:
        '201':
          description: Platform created successfully
    put:
      summary: Update platform
      tags:
        - Platform Development
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-platform.yaml#/Platform
      responses:
        '200':
          description: Platform updated successfully
    delete:
      summary: Delete platform
      tags:
        - Platform Development
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Platform deleted successfully
  platform-goals:
    post:
      summary: Add platform goal
      tags:
        - Platform Development
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                timeline:
                  type: string
                metrics:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      target:
                        type: number
                      unit:
                        type: string
      responses:
        '201':
          description: Goal added successfully
  platform-initiatives:
    post:
      summary: Add platform initiative
      tags:
        - Platform Development
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
      responses:
        '201':
          description: Initiative added successfully
  platform-resources:
    post:
      summary: Add platform resource
      tags:
        - Platform Development
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                title:
                  type: string
                url:
                  type: string
                notes:
                  type: string
      responses:
        '201':
          description: Resource added successfully
  platform-partnerships:
    post:
      summary: Add platform partnership
      tags:
        - Platform Development
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organizationName:
                  type: string
                contactPerson:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                notes:
                  type: string
      responses:
        '201':
          description: Partnership added successfully
  binder-tasks:
    get:
      summary: Get tasks for a binder
      tags:
        - Binder Sections
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: status
          schema:
            type: string
            enum:
              - pending
              - in_progress
              - completed
              - overdue
        - in: query
          name: category
          schema:
            type: string
        - in: query
          name: priority
          schema:
            type: string
            enum:
              - high
              - medium
              - low
      responses:
        '200':
          description: Successfully retrieved tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/binder-sections.yaml#/BinderTask
    post:
      summary: Create new task
      tags:
        - Binder Sections
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/BinderTask
      responses:
        '201':
          description: Task created successfully
  binder-task:
    put:
      summary: Update task
      tags:
        - Binder Sections
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/BinderTask
      responses:
        '200':
          description: Task updated successfully
    delete:
      summary: Delete task
      tags:
        - Binder Sections
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Task deleted successfully
  binder-schedule:
    get:
      summary: Get schedule items for a binder
      tags:
        - Binder Sections
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
        - in: query
          name: type
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved schedule
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/binder-sections.yaml#/BinderSchedule
    post:
      summary: Add schedule item
      tags:
        - Binder Sections
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/BinderSchedule
      responses:
        '201':
          description: Schedule item added successfully
  binder-wardrobe:
    get:
      summary: Get wardrobe items for a binder
      tags:
        - Binder Sections
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: category
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved wardrobe items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/binder-sections.yaml#/BinderWardrobe
    post:
      summary: Add wardrobe item
      tags:
        - Binder Sections
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/BinderWardrobe
      responses:
        '201':
          description: Wardrobe item added successfully
  binder-appearances:
    get:
      summary: Get appearances for a binder
      tags:
        - Binder Sections
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved appearances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/binder-sections.yaml#/BinderAppearance
    post:
      summary: Add appearance
      tags:
        - Binder Sections
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/BinderAppearance
      responses:
        '201':
          description: Appearance added successfully
  binder-travel:
    get:
      summary: Get travel arrangements for a binder
      tags:
        - Binder Sections
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved travel arrangements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/binder-sections.yaml#/BinderTravel
    post:
      summary: Add travel arrangement
      tags:
        - Binder Sections
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/BinderTravel
      responses:
        '201':
          description: Travel arrangement added successfully
  binder-platform:
    get:
      summary: Get platform information for a binder
      tags:
        - Binder Sections
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved platform information
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-sections.yaml#/BinderPlatform
    put:
      summary: Update platform information
      tags:
        - Binder Sections
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/BinderPlatform
      responses:
        '200':
          description: Platform information updated successfully
  binder-finances:
    get:
      summary: Get financial information for a binder
      tags:
        - Binder Sections
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved financial information
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-sections.yaml#/BinderFinances
    post:
      summary: Add financial record
      tags:
        - Binder Sections
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/BinderFinances
      responses:
        '201':
          description: Financial record added successfully
  wardrobe-groups:
    get:
      summary: Get all wardrobe groups for a binder
      tags:
        - Binder Wardrobe
  wardrobe-group:
    get:
      summary: Get specific wardrobe group
  wardrobe-items:
    get:
      summary: Get all wardrobe items in a group
  wardrobe-item:
    get:
      summary: Get specific wardrobe item
  wardrobe-item-photos:
    post:
      summary: Add photos to wardrobe item
  schedules:
    get:
      summary: Get schedules for a binder
      tags:
        - Binder Schedule
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: includePersonal
          schema:
            type: boolean
          description: Include personal schedule modifications
      responses:
        '200':
          description: Successfully retrieved schedules
          content:
            application/json:
              schema:
                type: object
                properties:
                  official:
                    $ref: ../schemas/binder-sections.yaml#/Schedule
                  personal:
                    $ref: ../schemas/binder-sections.yaml#/Schedule
    post:
      summary: Create new schedule
      tags:
        - Binder Schedule
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/Schedule
      responses:
        '201':
          description: Schedule created successfully
  schedule-events:
    get:
      summary: Get events for a specific day
      tags:
        - Binder Schedule
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: date
          schema:
            type: string
            format: date
        - in: query
          name: type
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/binder-sections.yaml#/ScheduleEvent
    post:
      summary: Add event to schedule
      tags:
        - Binder Schedule
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/ScheduleEvent
      responses:
        '201':
          description: Event added successfully
  schedule-event:
    get:
      summary: Get specific event details
      tags:
        - Binder Schedule
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved event
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-sections.yaml#/ScheduleEvent
    put:
      summary: Update event
      tags:
        - Binder Schedule
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sections.yaml#/ScheduleEvent
      responses:
        '200':
          description: Event updated successfully
        '403':
          description: Not authorized to modify official event
    delete:
      summary: Delete event
      tags:
        - Binder Schedule
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Event deleted successfully
        '403':
          description: Not authorized to delete official event
  personal-schedule:
    put:
      summary: Update personal schedule preferences
      tags:
        - Binder Schedule
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventId:
                  type: string
                  format: uuid
                isInPersonalSchedule:
                  type: boolean
                personalNotes:
                  type: string
                reminders:
                  type: array
                  items:
                    type: object
                    properties:
                      time:
                        type: string
                        format: date-time
                      type:
                        type: string
                        enum:
                          - email
                          - push
                          - sms
      responses:
        '200':
          description: Personal schedule preferences updated successfully
  trip-details:
    get:
      summary: Get trip details for a binder
  flights:
    post:
      summary: Add flight details
  flight:
    put:
      summary: Update flight details
  hotel:
    put:
      summary: Update hotel details
  car-rental:
    put:
      summary: Update car rental details
  social-accounts:
    get:
      summary: Get connected social media accounts
      tags:
        - Social Media
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved social accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/binder-social-media.yaml#/SocialMediaAccount
    post:
      summary: Connect new social media account
      tags:
        - Social Media
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                platform:
                  type: string
                  enum:
                    - instagram
                    - tiktok
                    - facebook
                authCode:
                  type: string
      responses:
        '201':
          description: Account connected successfully
  social-account:
    delete:
      summary: Disconnect social media account
      tags:
        - Social Media
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Account disconnected successfully
  scheduled-posts:
    get:
      summary: Get scheduled posts
      tags:
        - Social Media
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - draft
              - scheduled
              - posted
              - failed
        - in: query
          name: platform
          schema:
            type: string
            enum:
              - instagram
              - tiktok
              - facebook
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successfully retrieved scheduled posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/binder-social-media.yaml#/ScheduledPost
    post:
      summary: Create scheduled post
      tags:
        - Social Media
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  $ref: ../schemas/binder-social-media.yaml#/ScheduledPost
                media:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Post scheduled successfully
  scheduled-post:
    get:
      summary: Get scheduled post details
      tags:
        - Social Media
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved post details
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-social-media.yaml#/ScheduledPost
    put:
      summary: Update scheduled post
      tags:
        - Social Media
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-social-media.yaml#/ScheduledPost
      responses:
        '200':
          description: Post updated successfully
    delete:
      summary: Delete scheduled post
      tags:
        - Social Media
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Post deleted successfully
  sponsorship-packages:
    get:
      summary: Get sponsorship packages
      tags:
        - Sponsorships
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: status
          schema:
            type: string
            enum:
              - draft
              - active
              - archived
      responses:
        '200':
          description: Successfully retrieved sponsorship packages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/binder-sponsorships.yaml#/SponsorshipPackage
    post:
      summary: Create sponsorship package
      tags:
        - Sponsorships
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sponsorships.yaml#/SponsorshipPackage
      responses:
        '201':
          description: Package created successfully
  sponsorship-package:
    get:
      summary: Get sponsorship package details
      tags:
        - Sponsorships
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved package
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-sponsorships.yaml#/SponsorshipPackage
    put:
      summary: Update sponsorship package
      tags:
        - Sponsorships
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sponsorships.yaml#/SponsorshipPackage
      responses:
        '200':
          description: Package updated successfully
    delete:
      summary: Delete sponsorship package
      tags:
        - Sponsorships
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Package deleted successfully
  sponsors:
    get:
      summary: Get sponsors
      tags:
        - Sponsorships
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - potential
              - contacted
              - negotiating
              - confirmed
              - declined
        - in: query
          name: level
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved sponsors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/binder-sponsorships.yaml#/Sponsor
    post:
      summary: Create new sponsor
      tags:
        - Sponsorships
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sponsorships.yaml#/Sponsor
      responses:
        '201':
          description: Sponsor created successfully
  sponsor:
    get:
      summary: Get sponsor details
      tags:
        - Sponsorships
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved sponsor
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-sponsorships.yaml#/Sponsor
    put:
      summary: Update sponsor
      tags:
        - Sponsorships
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-sponsorships.yaml#/Sponsor
      responses:
        '200':
          description: Sponsor updated successfully
    delete:
      summary: Delete sponsor
      tags:
        - Sponsorships
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Sponsor deleted successfully
  sponsor-followup:
    post:
      summary: Add sponsor follow-up
      tags:
        - Sponsorships
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - email
                    - call
                    - meeting
                    - other
                notes:
                  type: string
                nextSteps:
                  type: string
                reminder:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Follow-up added successfully
  sponsor-documents:
    post:
      summary: Upload sponsor documents
      tags:
        - Sponsorships
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - contract
                    - logo
                    - media
                    - other
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Document uploaded successfully
  website:
    get:
      summary: Get website details
      tags:
        - Website
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: binderId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved website
          content:
            application/json:
              schema:
                $ref: ../schemas/binder-website.yaml#/Website
    post:
      summary: Create website
      tags:
        - Website
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-website.yaml#/Website
      responses:
        '201':
          description: Website created successfully
    put:
      summary: Update website
      tags:
        - Website
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binder-website.yaml#/Website
      responses:
        '200':
          description: Website updated successfully
    delete:
      summary: Delete website
      tags:
        - Website
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Website deleted successfully
  website-analytics:
    get:
      summary: Get website analytics
      tags:
        - Website
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
        - in: query
          name: metric
          schema:
            type: string
            enum:
              - views
              - visitors
              - time_on_site
              - locations
              - devices
      responses:
        '200':
          description: Successfully retrieved analytics
          content:
            application/json:
              schema:
                type: object
                properties:
                  analytics:
                    type: object
                    properties:
                      totalViews:
                        type: integer
                      uniqueVisitors:
                        type: integer
                      averageTimeOnSite:
                        type: integer
                      topPages:
                        type: array
                        items:
                          type: object
                          properties:
                            path:
                              type: string
                            views:
                              type: integer
                      visitorLocations:
                        type: array
                        items:
                          type: object
                          properties:
                            location:
                              type: string
                            count:
                              type: integer
                      deviceTypes:
                        type: object
                        properties:
                          desktop:
                            type: integer
                          mobile:
                            type: integer
                          tablet:
                            type: integer
  website-publish:
    post:
      summary: Publish website
      tags:
        - Website
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Website published successfully
  binders:
    get:
      summary: Get contestant's binders
      tags:
        - Binders
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - active
              - archived
              - completed
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - date
              - name
              - progress
              - lastAccessed
          default: date
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved binders
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/binders.yaml#/Binder
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
    post:
      summary: Create new binder
      tags:
        - Binders
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binders.yaml#/Binder
      responses:
        '201':
          description: Binder created successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/binders.yaml#/Binder
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  binder:
    get:
      summary: Get binder details
      tags:
        - Binders
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved binder
          content:
            application/json:
              schema:
                $ref: ../schemas/binders.yaml#/Binder
        '404':
          description: Binder not found
    put:
      summary: Update binder
      tags:
        - Binders
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/binders.yaml#/Binder
      responses:
        '200':
          description: Binder updated successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/binders.yaml#/Binder
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Binder not found
    delete:
      summary: Delete binder
      tags:
        - Binders
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Binder deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Binder not found
  archive-binder:
    post:
      summary: Archive/Unarchive binder
      tags:
        - Binders
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - active
                    - archived
              required:
                - status
      responses:
        '200':
          description: Binder status updated successfully
  posts:
    get:
      summary: Get blog posts
      tags:
        - Blog
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Search query
        - in: query
          name: categoryId
          schema:
            type: string
            format: uuid
          description: Filter by category
        - in: query
          name: tags
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          description: Filter by tags
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved posts
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/blog.yaml#/BlogPost
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
  post-like:
    post:
      summary: Like/unlike a blog post
      tags:
        - Blog
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Like status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  liked:
                    type: boolean
                  likes:
                    type: integer
  post-comments:
    post:
      summary: Add a comment to a blog post
      tags:
        - Blog
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/blog.yaml#/BlogComment
      responses:
        '201':
          description: Comment added successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/blog.yaml#/BlogComment
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Post not found
  comment:
    put:
      summary: Update a comment
      tags:
        - Blog
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  minLength: 1
                  maxLength: 1000
              required:
                - content
      responses:
        '200':
          description: Comment updated successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Comment not found
    delete:
      summary: Delete a comment
      tags:
        - Blog
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Comment deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Comment not found
  analytics-overview:
    get:
      summary: Get analytics overview
      tags:
        - Business Analytics
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: timeframe
          schema:
            type: string
            enum:
              - day
              - week
              - month
              - year
          default: month
      responses:
        '200':
          description: Successfully retrieved analytics overview
          content:
            application/json:
              schema:
                $ref: ../schemas/business-analytics.yaml#/AnalyticsOverview
  revenue-analytics:
    get:
      summary: Get revenue analytics
      tags:
        - Business Analytics
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          required: true
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          required: true
        - in: query
          name: groupBy
          schema:
            type: string
            enum:
              - day
              - week
              - month
          default: month
        - in: query
          name: includeComparison
          schema:
            type: boolean
          default: true
      responses:
        '200':
          description: Successfully retrieved revenue analytics
          content:
            application/json:
              schema:
                $ref: ../schemas/business-analytics.yaml#/RevenueAnalytics
  service-performance:
    get:
      summary: Get service performance analytics
      tags:
        - Business Analytics
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: serviceId
          schema:
            type: string
            format: uuid
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          required: true
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          required: true
        - in: query
          name: groupBy
          schema:
            type: string
            enum:
              - day
              - week
              - month
          default: month
      responses:
        '200':
          description: Successfully retrieved service performance analytics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/business-analytics.yaml#/ServicePerformance
  bookings:
    get:
      summary: Get contestant's bookings
      tags:
        - Contestant
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - upcoming
              - completed
              - cancelled
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved bookings
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        serviceId:
                          type: string
                          format: uuid
                        businessName:
                          type: string
                        serviceName:
                          type: string
                        dateTime:
                          type: string
                          format: date-time
                        status:
                          type: string
                          enum:
                            - upcoming
                            - completed
                            - cancelled
                        price:
                          type: number
                          format: float
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
  booking:
    get:
      summary: Get booking details
      tags:
        - Business Bookings
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved booking
          content:
            application/json:
              schema:
                $ref: ../schemas/business-bookings.yaml#/Booking
    put:
      summary: Update booking
      tags:
        - Business Bookings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/business-bookings.yaml#/Booking
      responses:
        '200':
          description: Booking updated successfully
  reschedule-booking:
    post:
      summary: Reschedule booking
      tags:
        - Business Bookings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newDateTime:
                  type: string
                  format: date-time
                reason:
                  type: string
                notifyClient:
                  type: boolean
                  default: true
      responses:
        '200':
          description: Booking rescheduled successfully
  cancel-booking:
    post:
      summary: Cancel booking
      tags:
        - Business Bookings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                refundPayment:
                  type: boolean
                  default: false
                notifyClient:
                  type: boolean
                  default: true
      responses:
        '200':
          description: Booking cancelled successfully
  send-reminder:
    post:
      summary: Send booking reminder
      tags:
        - Business Bookings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - email
                    - sms
                customMessage:
                  type: string
      responses:
        '200':
          description: Reminder sent successfully
  service-schedules:
    get:
      summary: Get service schedules
      tags:
        - Business Calendar
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved service schedules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/business-calendar.yaml#/ServiceSchedule
    post:
      summary: Create service schedule
      tags:
        - Business Calendar
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/business-calendar.yaml#/ServiceSchedule
      responses:
        '201':
          description: Service schedule created successfully
  service-schedule:
    get:
      summary: Get service schedule details
      tags:
        - Business Calendar
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved service schedule
          content:
            application/json:
              schema:
                $ref: ../schemas/business-calendar.yaml#/ServiceSchedule
    put:
      summary: Update service schedule
      tags:
        - Business Calendar
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/business-calendar.yaml#/ServiceSchedule
      responses:
        '200':
          description: Service schedule updated successfully
    delete:
      summary: Delete service schedule
      tags:
        - Business Calendar
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Service schedule deleted successfully
  available-slots:
    get:
      summary: Get available slots
      tags:
        - Business Calendar
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: serviceId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: startDate
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successfully retrieved available slots
          content:
            application/json:
              schema:
                type: object
                properties:
                  dates:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        slots:
                          type: array
                          items:
                            $ref: ../schemas/business-calendar.yaml#/AvailableSlot
  block-dates:
    post:
      summary: Block date range
      tags:
        - Business Calendar
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
                reason:
                  type: string
      responses:
        '200':
          description: Dates blocked successfully
  custom-availability:
    post:
      summary: Set custom availability for date
      tags:
        - Business Calendar
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                slots:
                  type: array
                  items:
                    type: object
                    properties:
                      startTime:
                        type: string
                        format: time
                      endTime:
                        type: string
                        format: time
                      isAvailable:
                        type: boolean
      responses:
        '200':
          description: Custom availability set successfully
  dashboard:
    get:
      summary: Get director dashboard overview
      tags:
        - Director Dashboard
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved dashboard data
          content:
            application/json:
              schema:
                $ref: ../schemas/director-dashboard.yaml#/DirectorDashboard
  upcoming-bookings:
    get:
      summary: Get upcoming bookings
      tags:
        - Business Dashboard
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - confirmed
              - pending
              - cancelled
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Successfully retrieved upcoming bookings
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    clientInfo:
                      type: object
                    serviceInfo:
                      type: object
                    bookingDetails:
                      type: object
  quick-actions:
    get:
      summary: Get quick actions
      tags:
        - Business Dashboard
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved quick actions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                    priority:
                      type: string
                    data:
                      type: object
  revenue-stats:
    get:
      summary: Get revenue statistics
      tags:
        - Business Dashboard
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: timeframe
          schema:
            type: string
            enum:
              - daily
              - monthly
              - yearly
          default: monthly
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successfully retrieved revenue statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        period:
                          type: string
                        amount:
                          type: number
                          format: float
                  summary:
                    type: object
                    properties:
                      total:
                        type: number
                        format: float
                      average:
                        type: number
                        format: float
                      change:
                        type: number
                        format: float
  event-schedule:
    get:
      summary: Get event schedule
      tags:
        - Event Details
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved schedule
          content:
            application/json:
              schema:
                $ref: ../schemas/business-event-details.yaml#/EventSchedule
    post:
      summary: Create or update event schedule
      tags:
        - Event Details
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/business-event-details.yaml#/EventSchedule
      responses:
        '200':
          description: Schedule updated successfully
  schedule-item:
    post:
      summary: Add schedule item
      tags:
        - Event Details
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                startTime:
                  type: string
                  format: date-time
                endTime:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Schedule item added successfully
    put:
      summary: Update schedule item
      tags:
        - Event Details
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Schedule item updated successfully
    delete:
      summary: Delete schedule item
      tags:
        - Event Details
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Schedule item deleted successfully
  event-tickets:
    get:
      summary: Get event tickets
      tags:
        - Event Details
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/business-event-details.yaml#/EventTicket
    post:
      summary: Create new ticket type
      tags:
        - Event Details
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/business-event-details.yaml#/EventTicket
      responses:
        '201':
          description: Ticket type created successfully
  event-ticket:
    put:
      summary: Update ticket type
      tags:
        - Event Details
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/business-event-details.yaml#/EventTicket
      responses:
        '200':
          description: Ticket type updated successfully
    delete:
      summary: Delete ticket type
      tags:
        - Event Details
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Ticket type deleted successfully
  event-sponsors:
    get:
      summary: Get event sponsors
      tags:
        - Event Details
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved sponsors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/business-event-details.yaml#/EventSponsor
    post:
      summary: Add event sponsor
      tags:
        - Event Details
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  $ref: ../schemas/business-event-details.yaml#/EventSponsor
                logo:
                  type: string
                  format: binary
      responses:
        '201':
          description: Sponsor added successfully
  event-sponsor:
    put:
      summary: Update sponsor
      tags:
        - Event Details
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/business-event-details.yaml#/EventSponsor
      responses:
        '200':
          description: Sponsor updated successfully
    delete:
      summary: Remove sponsor
      tags:
        - Event Details
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Sponsor removed successfully
  events:
    get:
      summary: Get events
      tags:
        - Events
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Search query
        - in: query
          name: category
          schema:
            type: string
            enum:
              - pageant
              - workshop
              - photoshoot
              - appearance
              - fundraiser
              - other
        - in: query
          name: type
          schema:
            type: string
            enum:
              - in-person
              - virtual
              - hybrid
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
        - in: query
          name: status
          schema:
            type: string
            enum:
              - draft
              - published
              - cancelled
              - completed
      responses:
        '200':
          description: Successfully retrieved events
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/events.yaml#/Event
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
    post:
      summary: Create a new event
      tags:
        - Events
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/events.yaml#/Event
      responses:
        '201':
          description: Event created successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  event:
    get:
      summary: Get event details
      tags:
        - Events
      responses:
        '200':
          description: Successfully retrieved event
          content:
            application/json:
              schema:
                $ref: ../schemas/events.yaml#/Event
        '404':
          description: Event not found
    put:
      summary: Update event details
      tags:
        - Events
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/events.yaml#/Event
      responses:
        '200':
          description: Event updated successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Event not found
    delete:
      summary: Delete event
      tags:
        - Events
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Event deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Event not found
  event-status:
    put:
      summary: Update event status
      tags:
        - Business Events
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - draft
                    - published
                    - cancelled
                    - completed
      responses:
        '200':
          description: Status updated successfully
  payments:
    get:
      summary: Get payments
      tags:
        - Business Finances
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - pending
              - completed
              - failed
              - refunded
              - disputed
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successfully retrieved payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/business-finances-additional.yaml#/Payment
  payment:
    get:
      summary: Get payment details
      tags:
        - Business Finances
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved payment
          content:
            application/json:
              schema:
                $ref: ../schemas/business-finances-additional.yaml#/Payment
  financial-reports:
    get:
      summary: Get financial reports
      tags:
        - Business Finances
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: period
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/business-finances-additional.yaml#/FinancialReport
    post:
      summary: Generate new financial report
      tags:
        - Business Finances
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                period:
                  type: object
                format:
                  type: string
      responses:
        '201':
          description: Report generation started
  tax-documents:
    get:
      summary: Get tax documents
      tags:
        - Business Finances
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: year
          schema:
            type: integer
        - in: query
          name: type
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved tax documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/business-finances-additional.yaml#/TaxDocument
  generate-tax-document:
    post:
      summary: Generate tax document
      tags:
        - Business Finances
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                year:
                  type: integer
                period:
                  type: string
      responses:
        '201':
          description: Tax document generation started
  wallet:
    get:
      summary: Get user's wallet information
      tags:
        - Wallet
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved wallet information
          content:
            application/json:
              schema:
                $ref: ../schemas/wallet.yaml#/Wallet
  transactions:
    get:
      summary: Get wallet transactions
      tags:
        - Wallet
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - payment
              - refund
              - deposit
              - withdrawal
              - subscription_charge
              - resale_earning
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/wallet.yaml#/WalletTransaction
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
  payout-request:
    post:
      summary: Request payout
      tags:
        - Business Finances
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: float
                destination:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - bank_account
                        - debit_card
                    id:
                      type: string
      responses:
        '201':
          description: Payout request created successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/business-finances.yaml#/PayoutRequest
  payout-schedule:
    put:
      summary: Update payout schedule
      tags:
        - Business Finances
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interval:
                  type: string
                  enum:
                    - manual
                    - daily
                    - weekly
                    - monthly
                weeklyAnchor:
                  type: string
                  enum:
                    - monday
                    - tuesday
                    - wednesday
                    - thursday
                    - friday
                monthlyAnchor:
                  type: integer
                  minimum: 1
                  maximum: 31
      responses:
        '200':
          description: Payout schedule updated successfully
  invoices:
    get:
      summary: Get all invoices
      tags:
        - Business Invoicing
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - draft
              - open
              - paid
              - void
              - uncollectible
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
        - in: query
          name: customerId
          schema:
            type: string
            format: uuid
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - date
              - amount
              - dueDate
              - status
          default: date
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved invoices
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/business-invoicing.yaml#/Invoice
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
    post:
      summary: Create new invoice
      tags:
        - Business Invoicing
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/business-invoicing.yaml#/Invoice
      responses:
        '201':
          description: Invoice created successfully
  invoice:
    get:
      summary: Get invoice by ID
      tags:
        - Business Invoicing
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved invoice
          content:
            application/json:
              schema:
                $ref: ../schemas/business-invoicing.yaml#/Invoice
    put:
      summary: Update invoice
      tags:
        - Business Invoicing
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/business-invoicing.yaml#/Invoice
      responses:
        '200':
          description: Invoice updated successfully
    delete:
      summary: Delete invoice (draft only)
      tags:
        - Business Invoicing
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Invoice deleted successfully
  send-invoice:
    post:
      summary: Send invoice to customer
      tags:
        - Business Invoicing
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                sendCopy:
                  type: boolean
      responses:
        '200':
          description: Invoice sent successfully
  void-invoice:
    post:
      summary: Void invoice
      tags:
        - Business Invoicing
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
      responses:
        '200':
          description: Invoice voided successfully
  download-invoice:
    get:
      summary: Download invoice PDF
      tags:
        - Business Invoicing
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Invoice PDF
          content:
            application/pdf:
              schema:
                type: string
                format: binary
  listings:
    get:
      summary: Get business listings
      tags:
        - Business Listings
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - draft
              - published
              - archived
              - suspended
        - in: query
          name: type
          schema:
            type: string
            enum:
              - service
              - product
              - pageant
        - in: query
          name: category
          schema:
            type: string
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - newest
              - oldest
              - views
              - popularity
          default: newest
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved listings
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/business-listings.yaml#/BusinessListing
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
    post:
      summary: Create new listing
      tags:
        - Business Listings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  $ref: ../schemas/business-listings.yaml#/BusinessListing
                media:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Listing created successfully
  listing:
    get:
      summary: Get listing details
      tags:
        - Business Listings
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved listing
          content:
            application/json:
              schema:
                $ref: ../schemas/business-listings.yaml#/BusinessListing
    put:
      summary: Update listing
      tags:
        - Business Listings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/business-listings.yaml#/BusinessListing
      responses:
        '200':
          description: Listing updated successfully
    delete:
      summary: Delete listing
      tags:
        - Business Listings
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Listing deleted successfully
  listing-status:
    put:
      summary: Update listing status
      tags:
        - Business Listings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - draft
                    - published
                    - archived
                    - suspended
      responses:
        '200':
          description: Status updated successfully
  listing-media:
    post:
      summary: Add media to listing
      tags:
        - Business Listings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                isFeatured:
                  type: boolean
                order:
                  type: integer
      responses:
        '201':
          description: Media added successfully
  listing-stats:
    get:
      summary: Get listing statistics
      tags:
        - Business Listings
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: timeframe
          schema:
            type: string
            enum:
              - day
              - week
              - month
              - year
          default: month
      responses:
        '200':
          description: Successfully retrieved listing statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  views:
                    type: integer
                  saves:
                    type: integer
                  inquiries:
                    type: integer
                  viewsByDate:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        count:
                          type: integer
  performance-metrics:
    get:
      summary: Get detailed performance metrics
      tags:
        - Business Performance
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          required: true
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          required: true
        - in: query
          name: compareWithPrevious
          schema:
            type: boolean
          default: true
      responses:
        '200':
          description: Successfully retrieved performance metrics
          content:
            application/json:
              schema:
                $ref: ../schemas/business-performance.yaml#/PerformanceMetrics
  client-retention:
    get:
      summary: Get client retention analysis
      tags:
        - Business Performance
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: timeframe
          schema:
            type: string
            enum:
              - month
              - quarter
              - year
          default: month
      responses:
        '200':
          description: Successfully retrieved client retention analysis
          content:
            application/json:
              schema:
                type: object
                properties:
                  retentionRate:
                    type: number
                    format: float
                  retentionTrend:
                    type: array
                    items:
                      type: object
                      properties:
                        period:
                          type: string
                        rate:
                          type: number
                          format: float
                  clientSegments:
                    type: array
                    items:
                      type: object
                      properties:
                        segment:
                          type: string
                        count:
                          type: integer
                        retentionRate:
                          type: number
                          format: float
  generate-report:
    post:
      summary: Generate financial report
      tags:
        - Pageant Finances
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reportType:
                  type: string
                  enum:
                    - monthly_revenue
                    - expense_breakdown
                    - application_fees
                    - complete
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
                format:
                  type: string
                  enum:
                    - pdf
                    - excel
                    - csv
      responses:
        '200':
          description: Report generated successfully
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            application/vnd.ms-excel:
              schema:
                type: string
                format: binary
            text/csv:
              schema:
                type: string
                format: binary
  download-report:
    get:
      summary: Download generated report
      tags:
        - Business Performance
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Report file
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            application/vnd.ms-excel:
              schema:
                type: string
                format: binary
            text/csv:
              schema:
                type: string
                format: binary
  promotions:
    get:
      summary: Get all promotions
      tags:
        - Business Promotions
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - draft
              - active
              - scheduled
              - expired
              - paused
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - startDate
              - endDate
              - redemptions
          default: startDate
      responses:
        '200':
          description: Successfully retrieved promotions
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/business-promotions.yaml#/Promotion
                  summary:
                    type: object
                    properties:
                      activePromotions:
                        type: integer
                      scheduledPromotions:
                        type: integer
                      totalRedemptions:
                        type: integer
                      totalDiscountAmount:
                        type: number
                        format: float
    post:
      summary: Create new promotion
      tags:
        - Business Promotions
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/business-promotions.yaml#/Promotion
      responses:
        '201':
          description: Promotion created successfully
  promotion:
    get:
      summary: Get promotion details
      tags:
        - Business Promotions
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved promotion
          content:
            application/json:
              schema:
                $ref: ../schemas/business-promotions.yaml#/Promotion
    put:
      summary: Update promotion
      tags:
        - Business Promotions
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/business-promotions.yaml#/Promotion
      responses:
        '200':
          description: Promotion updated successfully
    delete:
      summary: Delete promotion
      tags:
        - Business Promotions
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Promotion deleted successfully
  promotion-status:
    put:
      summary: Update promotion status
      tags:
        - Business Promotions
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - active
                    - paused
                    - expired
      responses:
        '200':
          description: Status updated successfully
  promotion-redemptions:
    get:
      summary: Get promotion redemptions
      tags:
        - Business Promotions
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successfully retrieved redemptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/business-promotions.yaml#/PromotionRedemption
  promotion-analytics:
    get:
      summary: Get promotion analytics
      tags:
        - Business Promotions
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved analytics
          content:
            application/json:
              schema:
                $ref: ../schemas/business-promotions.yaml#/PromotionAnalytics
  reviews:
    post:
      summary: Add a business review
      tags:
        - Business
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/business.yaml#/BusinessReview
      responses:
        '201':
          description: Review added successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  review:
    get:
      summary: Get review details
      tags:
        - Business Reviews
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved review
          content:
            application/json:
              schema:
                $ref: ../schemas/business-reviews.yaml#/Review
    put:
      summary: Update review status
      tags:
        - Business Reviews
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - published
                    - flagged
                    - removed
      responses:
        '200':
          description: Review status updated successfully
  review-response:
    post:
      summary: Respond to review
      tags:
        - Business Reviews
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                response:
                  type: string
      responses:
        '200':
          description: Response added successfully
  review-stats:
    get:
      summary: Get review statistics
      tags:
        - Business Reviews
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: timeframe
          schema:
            type: string
            enum:
              - week
              - month
              - year
              - all
          default: all
      responses:
        '200':
          description: Successfully retrieved review statistics
          content:
            application/json:
              schema:
                $ref: ../schemas/business-reviews.yaml#/ReviewStats
  review-response-update:
    put:
      summary: Update review response
      tags:
        - Business Reviews
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                response:
                  type: string
      responses:
        '200':
          description: Response updated successfully
  review-response-delete:
    delete:
      summary: Delete review response
      tags:
        - Business Reviews
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Response deleted successfully
  review-detail:
    get:
      summary: Get detailed review information
      tags:
        - Business Reviews
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved detailed review information
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../schemas/business-reviews.yaml#/Review
                  - type: object
                    properties:
                      reviewerHistory:
                        type: object
                        properties:
                          totalReviews:
                            type: integer
                          averageRating:
                            type: number
                            format: float
                          previousReviews:
                            type: array
                            items:
                              $ref: ../schemas/business-reviews.yaml#/Review
                      responseHistory:
                        type: array
                        items:
                          type: object
                          properties:
                            response:
                              type: string
                            respondedAt:
                              type: string
                              format: date-time
                            respondedBy:
                              type: string
                              format: uuid
  settings:
    get:
      summary: Get user settings
      tags:
        - Settings
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved user settings
          content:
            application/json:
              schema:
                $ref: ../schemas/settings.yaml#/UserSettings
        '401':
          description: Unauthorized
  notification-preferences:
    get:
      summary: Get notification preferences
      tags:
        - Notifications
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved preferences
          content:
            application/json:
              schema:
                $ref: ../schemas/notifications.yaml#/NotificationPreferences
    put:
      summary: Update notification preferences
      tags:
        - Notifications
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/notifications.yaml#/NotificationPreferences
      responses:
        '200':
          description: Preferences updated successfully
  business-hours:
    put:
      summary: Update business hours
      tags:
        - Business Settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                businessHours:
                  type: object
      responses:
        '200':
          description: Business hours updated successfully
  payment-settings:
    put:
      summary: Update payment settings
      tags:
        - Business Settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentSettings:
                  type: object
      responses:
        '200':
          description: Payment settings updated successfully
  connect-stripe:
    post:
      summary: Connect Stripe account
      tags:
        - Business Settings
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully initiated Stripe Connect
          content:
            application/json:
              schema:
                type: object
                properties:
                  connectUrl:
                    type: string
                    format: uri
  delete-account:
    delete:
      summary: Delete business account
      tags:
        - Business Settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                confirmationPhrase:
                  type: string
                reason:
                  type: string
      responses:
        '200':
          description: Account deleted successfully
  business:
    get:
      summary: Get business details
      tags:
        - Business
      responses:
        '200':
          description: Successfully retrieved business
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../schemas/business.yaml#/Business
                  - type: object
                    properties:
                      reviews:
                        type: array
                        items:
                          $ref: ../schemas/business.yaml#/BusinessReview
        '404':
          description: Business not found
    put:
      summary: Update business details
      tags:
        - Business
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/business.yaml#/Business
      responses:
        '200':
          description: Business updated successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Business not found
    delete:
      summary: Delete business
      tags:
        - Business
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Business deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Business not found
  services:
    post:
      summary: Add a service
      tags:
        - Business
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/business.yaml#/Service
      responses:
        '201':
          description: Service added successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  service:
    put:
      summary: Update a service
      tags:
        - Business
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/business.yaml#/Service
      responses:
        '200':
          description: Service updated successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
    delete:
      summary: Delete a service
      tags:
        - Business
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Service deleted successfully
        '401':
          description: Unauthorized
  media:
    post:
      summary: Add business media
      tags:
        - Business
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                type:
                  type: string
                  enum:
                    - image
                    - video
                caption:
                  type: string
      responses:
        '201':
          description: Media uploaded successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  cart:
    get:
      summary: Get user's cart
      tags:
        - Cart
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved cart
          content:
            application/json:
              schema:
                $ref: ../schemas/cart.yaml#/Cart
  cart-items:
    post:
      summary: Add item to cart
      tags:
        - Cart
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/cart.yaml#/CartItem
      responses:
        '200':
          description: Item added to cart successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/cart.yaml#/Cart
  cart-item:
    put:
      summary: Update cart item quantity
      tags:
        - Cart
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  minimum: 1
              required:
                - quantity
      responses:
        '200':
          description: Cart item updated successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/cart.yaml#/Cart
    delete:
      summary: Remove item from cart
      tags:
        - Cart
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Item removed from cart successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/cart.yaml#/Cart
  product-categories:
    get:
      summary: Get product categories
      tags:
        - Shop
      parameters:
        - in: query
          name: parentId
          schema:
            type: string
            format: uuid
          description: Filter by parent category
      responses:
        '200':
          description: Successfully retrieved categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/products.yaml#/ProductCategory
    post:
      summary: Create product category
      tags:
        - Shop
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/products.yaml#/ProductCategory
      responses:
        '201':
          description: Category created successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  product-category:
    get:
      summary: Get category details
      tags:
        - Shop
      responses:
        '200':
          description: Successfully retrieved category
          content:
            application/json:
              schema:
                $ref: ../schemas/products.yaml#/ProductCategory
        '404':
          description: Category not found
    put:
      summary: Update category
      tags:
        - Shop
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/products.yaml#/ProductCategory
      responses:
        '200':
          description: Category updated successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Category not found
    delete:
      summary: Delete category
      tags:
        - Shop
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Category deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Category not found
  checkout:
    post:
      summary: Create checkout session
      tags:
        - Checkout
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cartId:
                  type: string
                  format: uuid
                shippingAddress:
                  $ref: ../schemas/orders.yaml#/Address
                billingAddress:
                  $ref: ../schemas/orders.yaml#/Address
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Checkout session created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessionId:
                    type: string
                  clientSecret:
                    type: string
  payment-success:
    post:
      summary: Handle successful payment
      tags:
        - Checkout
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
      responses:
        '200':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/orders.yaml#/Order
  orders:
    get:
      summary: Get user's orders
      tags:
        - Orders
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/orders.yaml#/Order
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
  order:
    get:
      summary: Get order details
      tags:
        - Orders
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved order
          content:
            application/json:
              schema:
                $ref: ../schemas/orders.yaml#/Order
  directory:
    get:
      summary: Get public community members directory
      tags:
        - Community
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Search by name, username, or title
        - in: query
          name: role
          schema:
            type: string
            enum:
              - contestant
              - director
              - business
              - parent
              - supporter
              - judge
          description: Filter by user role
        - in: query
          name: location
          schema:
            type: string
          description: Filter by location
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - newest
              - followers
              - alphabetical
              - title
            default: alphabetical
          description: Sort order for results
        - in: query
          name: hasTitle
          schema:
            type: boolean
          description: Filter users who have a pageant title
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Results per page
      responses:
        '200':
          description: Successfully retrieved directory members
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/community.yaml#/PublicProfile
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
                  filters:
                    type: object
                    properties:
                      availableRoles:
                        type: array
                        items:
                          type: string
                      availableLocations:
                        type: array
                        items:
                          type: string
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: ../schemas/common.yaml#/Error
  directory-user:
    get:
      summary: Get public profile details for a specific user
      tags:
        - Community
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved profile
          content:
            application/json:
              schema:
                $ref: ../schemas/community.yaml#/PublicProfile
        '404':
          description: Profile not found or private
          content:
            application/json:
              schema:
                $ref: ../schemas/common.yaml#/Error
  portal-access:
    get:
      summary: Get contestant portal access and overview
      tags:
        - Contestant Portal
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: pageantId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved portal access
          content:
            application/json:
              schema:
                type: object
                properties:
                  contestantInfo:
                    $ref: ../schemas/pageant-contestants.yaml#/PageantContestant
                  progress:
                    type: object
                    properties:
                      completedItems:
                        type: integer
                      totalItems:
                        type: integer
                      percentage:
                        type: number
                      missingItems:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            name:
                              type: string
                            dueDate:
                              type: string
                              format: date
  portal-schedule:
    get:
      summary: Get contestant schedule
      tags:
        - Contestant Portal
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved schedule
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    eventId:
                      type: string
                    title:
                      type: string
                    startTime:
                      type: string
                      format: date-time
                    endTime:
                      type: string
                      format: date-time
                    location:
                      type: string
                    requirements:
                      type: array
                      items:
                        type: string
                    wardrobe:
                      type: string
  portal-documents:
    get:
      summary: Get required documents and status
      tags:
        - Contestant Portal
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved documents
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
                    dueDate:
                      type: string
                      format: date
                    status:
                      type: string
                      enum:
                        - pending
                        - submitted
                        - approved
                        - rejected
    post:
      summary: Submit document
      tags:
        - Contestant Portal
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                documentId:
                  type: string
                file:
                  type: string
                  format: binary
                notes:
                  type: string
      responses:
        '201':
          description: Document submitted successfully
  portal-fees:
    get:
      summary: Get fee information and payment status
      tags:
        - Contestant Portal
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved fees
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalAmount:
                    type: number
                  paidAmount:
                    type: number
                  remainingAmount:
                    type: number
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        amount:
                          type: number
                        dueDate:
                          type: string
                          format: date
                        status:
                          type: string
                          enum:
                            - pending
                            - paid
                            - overdue
  portal-competitions:
    get:
      summary: Get competition information
      tags:
        - Contestant Portal
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved competition information
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    requirements:
                      type: array
                      items:
                        type: string
                    wardrobe:
                      type: string
                    score:
                      type: number
                    rank:
                      type: integer
                    feedback:
                      type: string
  portal-progress:
    get:
      summary: Get personal progress tracking
      tags:
        - Contestant Portal
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved progress
          content:
            application/json:
              schema:
                type: object
                properties:
                  overallProgress:
                    type: number
                  categories:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        completed:
                          type: integer
                        total:
                          type: integer
                        percentage:
                          type: number
                  nextDeadlines:
                    type: array
                    items:
                      type: object
                      properties:
                        item:
                          type: string
                        dueDate:
                          type: string
                          format: date
  saved-items:
    get:
      summary: Get contestant's saved items
      tags:
        - Contestant
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - products
              - businesses
              - pageants
          description: Filter by item type
      responses:
        '200':
          description: Successfully retrieved saved items
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: ../schemas/products.yaml#/Product
                  businesses:
                    type: array
                    items:
                      $ref: ../schemas/business.yaml#/Business
                  pageants:
                    type: array
                    items:
                      $ref: ../schemas/events.yaml#/Event
    post:
      summary: Save an item
      tags:
        - Contestant
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                itemType:
                  type: string
                  enum:
                    - product
                    - business
                    - pageant
                itemId:
                  type: string
                  format: uuid
              required:
                - itemType
                - itemId
      responses:
        '200':
          description: Item saved successfully
  wallet-transactions:
    get:
      summary: Get wallet transaction history
      tags:
        - Wallet
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - payment
              - refund
              - deposit
              - withdrawal
              - transfer
          description: Filter by transaction type
        - in: query
          name: status
          schema:
            type: string
            enum:
              - pending
              - completed
              - failed
              - cancelled
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/contestant.yaml#/Transaction
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
  payment-methods:
    get:
      summary: Get user's payment methods
      tags:
        - Wallet
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved payment methods
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/wallet.yaml#/PaymentMethod
    post:
      summary: Add new payment method
      tags:
        - Wallet
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stripePaymentMethodId:
                  type: string
                isDefault:
                  type: boolean
              required:
                - stripePaymentMethodId
      responses:
        '201':
          description: Payment method added successfully
  payment-method:
    put:
      summary: Update payment method (e.g., set as default)
      tags:
        - Wallet
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isDefault:
                  type: boolean
              required:
                - isDefault
      responses:
        '200':
          description: Payment method updated successfully
    delete:
      summary: Remove payment method
      tags:
        - Wallet
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Payment method removed successfully
  collections:
    get:
      summary: Get user's favorite collections
      tags:
        - Favorites
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved collections
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/favorites.yaml#/FavoriteCollection
    post:
      summary: Create new collection
      tags:
        - Favorites
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/favorites.yaml#/FavoriteCollection
      responses:
        '201':
          description: Collection created successfully
  collection:
    put:
      summary: Update collection
      tags:
        - Favorites
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/favorites.yaml#/FavoriteCollection
      responses:
        '200':
          description: Collection updated successfully
    delete:
      summary: Delete collection
      tags:
        - Favorites
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Collection deleted successfully
  saved-items-search:
    get:
      summary: Search saved items across collections
      tags:
        - Collections
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Search query
        - in: query
          name: type
          schema:
            type: string
            enum:
              - event
              - business
              - product
          description: Filter by item type
        - in: query
          name: collectionId
          schema:
            type: string
            format: uuid
          description: Filter by collection
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - newest
              - oldest
              - name
          default: newest
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved saved items
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/contestant.yaml#/SavedItem
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
  saved-item:
    post:
      summary: Save item to collection
      tags:
        - Collections
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                itemType:
                  type: string
                  enum:
                    - event
                    - business
                    - product
                itemId:
                  type: string
                  format: uuid
                collectionId:
                  type: string
                  format: uuid
                notes:
                  type: string
              required:
                - itemType
                - itemId
      responses:
        '201':
          description: Item saved successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/contestant.yaml#/SavedItem
    delete:
      summary: Remove saved item
      tags:
        - Collections
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Item removed successfully
  move-saved-item:
    post:
      summary: Move item to different collection
      tags:
        - Collections
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                itemId:
                  type: string
                  format: uuid
                targetCollectionId:
                  type: string
                  format: uuid
              required:
                - itemId
                - targetCollectionId
      responses:
        '200':
          description: Item moved successfully
  contestants:
    get:
      summary: Get all contestants
      tags:
        - Contestants
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Search by name or title
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - newest
              - followers
              - title
          default: newest
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved contestants
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/contestant.yaml#/ContestantProfile
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
    post:
      summary: Create new contestant profile
      tags:
        - Contestants
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/contestant.yaml#/ContestantProfile
      responses:
        '201':
          description: Contestant profile created successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  contestant-profile:
    get:
      summary: Get contestant voting profile
      tags:
        - Public Voting
      responses:
        '200':
          description: Successfully retrieved contestant profile
          content:
            application/json:
              schema:
                $ref: ../schemas/public-voting.yaml#/VotingContestant
  contestant-settings:
    get:
      summary: Get contestant's profile and settings
      tags:
        - Contestants
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved contestant settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    $ref: ../schemas/contestant.yaml#/ContestantDetails
                  preferences:
                    type: object
                    properties:
                      notifications:
                        type: object
                        properties:
                          pageantReminders:
                            type: boolean
                          practiceReminders:
                            type: boolean
                          competitionUpdates:
                            type: boolean
                          coachingReminders:
                            type: boolean
                          newOpportunities:
                            type: boolean
                      privacy:
                        type: object
                        properties:
                          showMeasurements:
                            type: boolean
                          showAchievements:
                            type: boolean
                          showSocialMedia:
                            type: boolean
                          allowMessaging:
                            type: boolean
                          showPageantHistory:
                            type: boolean
                      appearance:
                        type: object
                        properties:
                          theme:
                            type: string
                            enum:
                              - light
                              - dark
                              - system
                          dashboardLayout:
                            type: string
                            enum:
                              - grid
                              - list
                      communication:
                        type: object
                        properties:
                          preferredContactMethod:
                            type: string
                            enum:
                              - email
                              - phone
                              - app
                          language:
                            type: string
                          timezone:
                            type: string
    put:
      summary: Update contestant's profile and settings
      tags:
        - Contestants
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  $ref: ../schemas/contestant.yaml#/ContestantDetails
                preferences:
                  type: object
                  properties:
                    notifications:
                      type: object
                    privacy:
                      type: object
                    appearance:
                      type: object
                    communication:
                      type: object
      responses:
        '200':
          description: Settings updated successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  contestant-profile-images:
    post:
      summary: Update contestant's profile or header image
      tags:
        - Contestants
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - profile
                    - header
                file:
                  type: string
                  format: binary
              required:
                - type
                - file
      responses:
        '200':
          description: Image updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  pending-tasks:
    get:
      summary: Get pending tasks
      tags:
        - Director Dashboard
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: priority
          schema:
            type: string
            enum:
              - high
              - medium
              - low
      responses:
        '200':
          description: Successfully retrieved pending tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                    dueDate:
                      type: string
                      format: date
                    details:
                      type: object
  upcoming-deadlines:
    get:
      summary: Get upcoming deadlines
      tags:
        - Director Dashboard
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: pageantId
          schema:
            type: string
            format: uuid
        - in: query
          name: type
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved upcoming deadlines
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
                    date:
                      type: string
                      format: date
                    details:
                      type: object
  favorites:
    get:
      summary: Get user's favorite items
      tags:
        - Favorites
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: itemType
          schema:
            type: string
            enum:
              - product
              - business
              - event
        - in: query
          name: collectionId
          schema:
            type: string
            format: uuid
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - newest
              - oldest
              - name
              - price
          default: newest
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved favorites
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/favorites.yaml#/FavoriteItem
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
    post:
      summary: Add item to favorites
      tags:
        - Favorites
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                itemType:
                  type: string
                  enum:
                    - product
                    - business
                    - event
                itemId:
                  type: string
                  format: uuid
                collectionId:
                  type: string
                  format: uuid
                notes:
                  type: string
              required:
                - itemType
                - itemId
      responses:
        '201':
          description: Item added to favorites successfully
  favorite:
    delete:
      summary: Remove item from favorites
      tags:
        - Favorites
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Item removed from favorites successfully
  move-favorite:
    post:
      summary: Move favorite item to different collection
      tags:
        - Favorites
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                favoriteId:
                  type: string
                  format: uuid
                targetCollectionId:
                  type: string
                  format: uuid
              required:
                - favoriteId
                - targetCollectionId
      responses:
        '200':
          description: Item moved successfully
  channels:
    get:
      summary: Get user's chat channels
      tags:
        - Messaging
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - direct
              - group
        - in: query
          name: status
          schema:
            type: string
            enum:
              - active
              - archived
              - muted
      responses:
        '200':
          description: Successfully retrieved channels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/messaging.yaml#/ChatChannel
    post:
      summary: Create new chat channel
      tags:
        - Messaging
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - direct
                    - group
                name:
                  type: string
                members:
                  type: array
                  items:
                    type: string
                    format: uuid
                metadata:
                  type: object
                settings:
                  type: object
      responses:
        '201':
          description: Channel created successfully
  channel:
    get:
      summary: Get channel details
      tags:
        - Messaging
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved channel
          content:
            application/json:
              schema:
                $ref: ../schemas/messaging.yaml#/ChatChannel
    put:
      summary: Update channel settings
      tags:
        - Messaging
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                image:
                  type: string
                settings:
                  type: object
                metadata:
                  type: object
      responses:
        '200':
          description: Channel updated successfully
  channel-members:
    post:
      summary: Add members to channel
      tags:
        - Messaging
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                members:
                  type: array
                  items:
                    type: object
                    properties:
                      userId:
                        type: string
                        format: uuid
                      role:
                        type: string
                        enum:
                          - admin
                          - moderator
                          - member
      responses:
        '200':
          description: Members added successfully
    delete:
      summary: Remove member from channel
      tags:
        - Messaging
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Member removed successfully
  messages:
    get:
      summary: Get all messages
      tags:
        - Pageant Communications
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - draft
              - scheduled
              - sent
              - failed
        - in: query
          name: type
          schema:
            type: string
            enum:
              - email
              - push_notification
      responses:
        '200':
          description: Successfully retrieved messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/pageant-communications.yaml#/PageantMessage
    post:
      summary: Create new message
      tags:
        - Pageant Communications
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/pageant-communications.yaml#/PageantMessage
      responses:
        '201':
          description: Message created successfully
  message:
    get:
      summary: Get message details
      tags:
        - Pageant Communications
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved message
          content:
            application/json:
              schema:
                $ref: ../schemas/pageant-communications.yaml#/PageantMessage
    put:
      summary: Update message
      tags:
        - Pageant Communications
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/pageant-communications.yaml#/PageantMessage
      responses:
        '200':
          description: Message updated successfully
    delete:
      summary: Delete message
      tags:
        - Pageant Communications
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Message deleted successfully
  message-reaction:
    post:
      summary: Add reaction to message
      tags:
        - Messaging
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
      responses:
        '200':
          description: Reaction added successfully
  conversations:
    get:
      summary: Get user's conversations
      tags:
        - Messaging
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - active
              - archived
        - in: query
          name: unread
          schema:
            type: boolean
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved conversations
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        channelId:
                          type: string
                          format: uuid
                        participant:
                          $ref: ../schemas/users.yaml#/UserProfile
                        lastMessage:
                          $ref: ../schemas/messaging.yaml#/ChatMessage
                        unreadCount:
                          type: integer
                        lastActivity:
                          type: string
                          format: date-time
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
  conversation:
    get:
      summary: Get specific conversation with user
      tags:
        - Messaging
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: before
          schema:
            type: string
            format: date-time
        - in: query
          name: limit
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: Successfully retrieved conversation
          content:
            application/json:
              schema:
                type: object
                properties:
                  channel:
                    $ref: ../schemas/messaging.yaml#/ChatChannel
                  messages:
                    type: array
                    items:
                      $ref: ../schemas/messaging.yaml#/ChatMessage
                  participant:
                    $ref: ../schemas/users.yaml#/UserProfile
    post:
      summary: Send message in conversation
      tags:
        - Messaging
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                text:
                  type: string
                attachments:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/messaging.yaml#/ChatMessage
  notifications:
    get:
      summary: Get user notifications
      tags:
        - Notifications
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - unread
              - read
              - archived
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved notifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/notifications.yaml#/Notification
                  unreadCount:
                    type: integer
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
  notification:
    put:
      summary: Update notification status
      tags:
        - Notifications
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - read
                    - archived
      responses:
        '200':
          description: Notification status updated successfully
    delete:
      summary: Delete notification
      tags:
        - Notifications
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Notification deleted successfully
  mark-all-read:
    post:
      summary: Mark all notifications as read
      tags:
        - Notifications
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
          description: Optionally specify notification type
      responses:
        '200':
          description: All notifications marked as read
  communications-overview:
    get:
      summary: Get communications overview
      tags:
        - Pageant Communications
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved communications overview
          content:
            application/json:
              schema:
                $ref: ../schemas/pageant-communications.yaml#/CommunicationOverview
  send-message:
    post:
      summary: Send or schedule message
      tags:
        - Pageant Communications
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sendNow:
                  type: boolean
                scheduledFor:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Message sent or scheduled successfully
  message-templates:
    get:
      summary: Get message templates
      tags:
        - Pageant Communications
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - email
              - push_notification
        - in: query
          name: category
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved templates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/pageant-communications.yaml#/MessageTemplate
  message-template:
    get:
      summary: Get template by ID
      tags:
        - Pageant Communications
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved template
          content:
            application/json:
              schema:
                $ref: ../schemas/pageant-communications.yaml#/MessageTemplate
  pageant-forms:
    get:
      summary: Get all forms for a pageant
      tags:
        - Pageant Configuration
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: pageantId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: type
          schema:
            type: string
            enum:
              - registration
              - competition
              - interview
              - other
      responses:
        '200':
          description: Successfully retrieved forms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/pageant-management.yaml#/PageantEvent/properties/forms/items
    post:
      summary: Create new form
      tags:
        - Pageant Configuration
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/pageant-management.yaml#/PageantEvent/properties/forms/items
      responses:
        '201':
          description: Form created successfully
  pageant-fees:
    get:
      summary: Get all fees for a pageant
      tags:
        - Pageant Configuration
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved fees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/pageant-management.yaml#/PageantEvent/properties/fees/items
    post:
      summary: Create new fee
      tags:
        - Pageant Configuration
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/pageant-management.yaml#/PageantEvent/properties/fees/items
      responses:
        '201':
          description: Fee created successfully
  competition-areas:
    get:
      summary: Get competition areas
      tags:
        - Pageant Configuration
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved competition areas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/pageant-management.yaml#/PageantEvent/properties/areasOfCompetition/items
    post:
      summary: Create competition area
      tags:
        - Pageant Configuration
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/pageant-management.yaml#/PageantEvent/properties/areasOfCompetition/items
      responses:
        '201':
          description: Competition area created successfully
  pageant-documents:
    get:
      summary: Get pageant documents
      tags:
        - Pageant Configuration
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - handbook
              - rules
              - waiver
              - contract
              - other
      responses:
        '200':
          description: Successfully retrieved documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/pageant-management.yaml#/PageantEvent/properties/documents/items
    post:
      summary: Upload pageant document
      tags:
        - Pageant Configuration
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  $ref: ../schemas/pageant-management.yaml#/PageantEvent/properties/documents/items
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Document uploaded successfully
  competition-scoring:
    post:
      summary: Record competition scores
      tags:
        - Pageant Competition
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                areaId:
                  type: string
                  format: uuid
                contestantId:
                  type: string
                  format: uuid
                score:
                  type: number
                notes:
                  type: string
      responses:
        '201':
          description: Scores recorded successfully
  competition-results:
    get:
      summary: Get competition results
      tags:
        - Pageant Competition
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: areaId
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved results
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    contestantId:
                      type: string
                    score:
                      type: number
                    rank:
                      type: integer
  pageant-financials:
    get:
      summary: Get pageant financial overview
      tags:
        - Pageant Finances
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: pageantId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved financial overview
          content:
            application/json:
              schema:
                $ref: ../schemas/pageant-finances.yaml#/PageantFinancials
  pageant-transactions:
    get:
      summary: Get pageant transactions
      tags:
        - Pageant Finances
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - revenue
              - expense
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
        - in: query
          name: category
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/pageant-finances.yaml#/PageantTransaction
  revenue-overview:
    get:
      summary: Get revenue overview
      tags:
        - Pageant Finances
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: period
          schema:
            type: string
            enum:
              - daily
              - weekly
              - monthly
          default: monthly
      responses:
        '200':
          description: Successfully retrieved revenue overview
          content:
            application/json:
              schema:
                type: object
                properties:
                  trends:
                    type: array
                    items:
                      type: object
                      properties:
                        period:
                          type: string
                        amount:
                          type: number
                        change:
                          type: number
                  breakdown:
                    type: object
                    properties:
                      byCategory:
                        type: object
                      byPaymentMethod:
                        type: object
  judges:
    get:
      summary: Get all judges for a pageant
      tags:
        - Pageant Judging
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved judges
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    name:
                      type: string
                    email:
                      type: string
                    status:
                      type: string
                      enum:
                        - invited
                        - active
                        - inactive
                    assignedAreas:
                      type: array
                      items:
                        type: string
                        format: uuid
    post:
      summary: Add judge to pageant
      tags:
        - Pageant Judging
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
                assignedAreas:
                  type: array
                  items:
                    type: string
                    format: uuid
      responses:
        '201':
          description: Judge added successfully
  scoring-sheets:
    get:
      summary: Get scoring sheets for competition area
      tags:
        - Pageant Judging
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: areaId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved scoring sheets
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    contestantId:
                      type: string
                    scores:
                      type: array
                      items:
                        type: object
                        properties:
                          criteriaId:
                            type: string
                          score:
                            type: number
                          notes:
                            type: string
  live-scoring:
    post:
      summary: Submit live scores
      tags:
        - Pageant Judging
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contestantId:
                  type: string
                areaId:
                  type: string
                scores:
                  type: array
                  items:
                    type: object
                    properties:
                      criteriaId:
                        type: string
                      score:
                        type: number
                      notes:
                        type: string
      responses:
        '200':
          description: Scores submitted successfully
  aggregate-scores:
    get:
      summary: Get real-time aggregated scores
      tags:
        - Pageant Judging
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: areaId
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved aggregated scores
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    contestantId:
                      type: string
                    totalScore:
                      type: number
                    averageScore:
                      type: number
                    rank:
                      type: integer
                    breakdown:
                      type: object
  awards:
    post:
      summary: Create award/placement
      tags:
        - Pageant Judging
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                contestantId:
                  type: string
                type:
                  type: string
                  enum:
                    - placement
                    - special_award
                description:
                  type: string
      responses:
        '201':
          description: Award created successfully
  contestant-management:
    post:
      summary: Import contestants
      tags:
        - Contestant Management
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                createPortalAccess:
                  type: boolean
                  default: true
      responses:
        '200':
          description: Contestants imported successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  imported:
                    type: integer
                  failed:
                    type: integer
                  errors:
                    type: array
    get:
      summary: Export contestants
      tags:
        - Contestant Management
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - csv
              - excel
          default: excel
        - in: query
          name: includeDetails
          schema:
            type: string
            enum:
              - basic
              - full
              - custom
          default: basic
      responses:
        '200':
          description: Contestants exported successfully
          content:
            application/vnd.ms-excel:
              schema:
                type: string
                format: binary
  pageant-contestants:
    get:
      summary: Get all contestants for a pageant
      tags:
        - Pageant Management
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: pageantId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: status
          schema:
            type: string
            enum:
              - pending
              - approved
              - waitlist
              - withdrawn
              - disqualified
        - in: query
          name: division
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved contestants
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/pageant-contestants.yaml#/PageantContestant
    post:
      summary: Register new contestant
      tags:
        - Pageant Management
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/pageant-contestants.yaml#/PageantContestant
      responses:
        '201':
          description: Contestant registered successfully
  contestant:
    get:
      summary: Get contestant details
      tags:
        - Pageant Management
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved contestant
          content:
            application/json:
              schema:
                $ref: ../schemas/pageant-contestants.yaml#/PageantContestant
    put:
      summary: Update contestant information
      tags:
        - Pageant Management
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/pageant-contestants.yaml#/PageantContestant
      responses:
        '200':
          description: Contestant updated successfully
  contestant-status:
    put:
      summary: Update contestant status
      tags:
        - Pageant Management
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - pending
                    - approved
                    - waitlist
                    - withdrawn
                    - disqualified
                notes:
                  type: string
      responses:
        '200':
          description: Status updated successfully
  contestant-submissions:
    get:
      summary: Get contestant submissions
      tags:
        - Pageant Management
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - form
              - document
              - payment
        - in: query
          name: status
          schema:
            type: string
            enum:
              - pending
              - submitted
              - approved
              - rejected
      responses:
        '200':
          description: Successfully retrieved submissions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/pageant-contestants.yaml#/ContestantSubmission
    post:
      summary: Create new submission
      tags:
        - Pageant Management
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  $ref: ../schemas/pageant-contestants.yaml#/ContestantSubmission
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Submission created successfully
  review-submission:
    put:
      summary: Review contestant submission
      tags:
        - Pageant Management
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - approved
                    - rejected
                notes:
                  type: string
      responses:
        '200':
          description: Submission reviewed successfully
  contestant-payments:
    get:
      summary: Get contestant payments
      tags:
        - Pageant Management
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved payments
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    feeId:
                      type: string
                    amount:
                      type: number
                    status:
                      type: string
  record-payment:
    post:
      summary: Record contestant payment
      tags:
        - Pageant Management
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feeId:
                  type: string
                amount:
                  type: number
                paymentMethod:
                  type: string
                notes:
                  type: string
      responses:
        '201':
          description: Payment recorded successfully
  peoples-choice-overview:
    get:
      summary: Get people's choice overview and stats
      tags:
        - People's Choice
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved overview
          content:
            application/json:
              schema:
                $ref: ../schemas/peoples-choice.yaml#/VotingStats
  voting-events:
    get:
      summary: Get all public voting events
      tags:
        - Public Voting
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - active
              - upcoming
              - ended
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved voting events
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/public-voting.yaml#/PublicVotingEvent
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
  voting-event:
    get:
      summary: Get voting event details
      tags:
        - Public Voting
      responses:
        '200':
          description: Successfully retrieved voting event
          content:
            application/json:
              schema:
                $ref: ../schemas/public-voting.yaml#/PublicVotingEvent
  voting-contestants:
    post:
      summary: Add/Update contestants in voting event
      tags:
        - People's Choice
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  contestantId:
                    type: string
                    format: uuid
                  photo:
                    type: string
                    format: uri
      responses:
        '200':
          description: Contestants updated successfully
    delete:
      summary: Remove contestant from voting event
      tags:
        - People's Choice
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: contestantId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Contestant removed successfully
  voting-settings:
    put:
      summary: Update voting event settings
      tags:
        - People's Choice
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paidVoting:
                  type: boolean
                votePrice:
                  type: number
                voteBundles:
                  type: array
                dailyVoteLimit:
                  type: integer
                showVoteCount:
                  type: boolean
                showTop3:
                  type: boolean
      responses:
        '200':
          description: Settings updated successfully
  me:
    get:
      summary: Get current user's profile
      tags:
        - Profile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved current user profile
          content:
            application/json:
              schema:
                $ref: ../schemas/users.yaml#/UserProfile
        '401':
          description: Unauthorized
        '404':
          description: Profile not found
    put:
      summary: Update current user's profile
      tags:
        - Profile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/users.yaml#/UserProfile
      responses:
        '200':
          description: Successfully updated profile
          content:
            application/json:
              schema:
                $ref: ../schemas/users.yaml#/UserProfile
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Profile not found
  username:
    get:
      summary: Get user profile by username
      tags:
        - Profile
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    $ref: ../schemas/users.yaml#/UserProfile
                  media:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        type:
                          type: string
                          enum:
                            - image
                            - video
                        url:
                          type: string
                          format: uri
                        thumbnailUrl:
                          type: string
                          format: uri
                        caption:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                  posts:
                    type: array
                    items:
                      $ref: ../schemas/community.yaml#/ActivityPost
                  isFollowing:
                    type: boolean
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: ../schemas/common.yaml#/Error
  update-profile:
    put:
      summary: Update user profile
      tags:
        - Profile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                basicInfo:
                  type: object
                  properties:
                    firstName:
                      type: string
                    lastName:
                      type: string
                    username:
                      type: string
                    email:
                      type: string
                      format: email
                    phone:
                      type: string
                    dateOfBirth:
                      type: string
                      format: date
                    location:
                      type: object
                      properties:
                        city:
                          type: string
                        state:
                          type: string
                        country:
                          type: string
                profilePicture:
                  type: string
                  format: uri
                headerImage:
                  type: string
                  format: uri
                socialLinks:
                  type: object
                  properties:
                    facebook:
                      type: string
                      format: uri
                    instagram:
                      type: string
                      format: uri
                    tiktok:
                      type: string
                      format: uri
                    linkedin:
                      type: string
                      format: uri
                    youtube:
                      type: string
                      format: uri
                    twitter:
                      type: string
                      format: uri
                    pinterest:
                      type: string
                      format: uri
                contestantInfo:
                  type: object
                  properties:
                    currentTitle:
                      type: string
                    platform:
                      type: string
                    bio:
                      type: string
                      maxLength: 2000
                    measurements:
                      type: object
                      properties:
                        height:
                          type: string
                        dress:
                          type: string
                        shoe:
                          type: string
                    talents:
                      type: array
                      items:
                        type: string
                    languages:
                      type: array
                      items:
                        type: string
                    education:
                      type: object
                      properties:
                        school:
                          type: string
                        degree:
                          type: string
                        fieldOfStudy:
                          type: string
                        graduationYear:
                          type: integer
                privacy:
                  type: object
                  properties:
                    isPublic:
                      type: boolean
                    showEmail:
                      type: boolean
                    showPhone:
                      type: boolean
                    showLocation:
                      type: boolean
                    showBirthday:
                      type: boolean
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/users.yaml#/UserProfile
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: ../schemas/common.yaml#/Error
        '401':
          description: Unauthorized
        '404':
          description: Profile not found
  update-profile-picture:
    post:
      summary: Update profile picture
      tags:
        - Profile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Profile picture updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
  update-header-image:
    post:
      summary: Update profile header image
      tags:
        - Profile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Header image updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
  connect-business:
    post:
      summary: Connect business to user profile
      tags:
        - Profile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                businessId:
                  type: string
                  format: uuid
                role:
                  type: string
                  enum:
                    - owner
                    - manager
                    - staff
              required:
                - businessId
                - role
      responses:
        '200':
          description: Business connected successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Business not found
  event-contestants:
    get:
      summary: Get contestants for voting event
      tags:
        - Public Voting
      parameters:
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - votes
              - name
          default: votes
      responses:
        '200':
          description: Successfully retrieved contestants
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/public-voting.yaml#/VotingContestant
  purchase-votes:
    post:
      summary: Purchase votes for contestant
      tags:
        - Public Voting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contestantId:
                  type: string
                  format: uuid
                votePackage:
                  type: object
                  properties:
                    votes:
                      type: integer
                    amount:
                      type: number
                      format: float
                paymentMethod:
                  type: string
      responses:
        '201':
          description: Vote purchase initiated
          content:
            application/json:
              schema:
                $ref: ../schemas/public-voting.yaml#/VoteTransaction
  vote-transaction:
    get:
      summary: Get vote transaction status
      tags:
        - Public Voting
      responses:
        '200':
          description: Successfully retrieved transaction
          content:
            application/json:
              schema:
                $ref: ../schemas/public-voting.yaml#/VoteTransaction
  overview:
    get:
      summary: Get contestant's resale overview
      tags:
        - Resale
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved resale overview
          content:
            application/json:
              schema:
                $ref: ../schemas/resale.yaml#/ResaleOverview
  shipments:
    get:
      summary: Get contestant's resale shipments
      tags:
        - Resale
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved shipments
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/resale.yaml#/ResaleShipment
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
    post:
      summary: Create new resale shipment
      tags:
        - Resale
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/resale.yaml#/ResaleShipment
      responses:
        '201':
          description: Shipment created successfully
  shipment:
    get:
      summary: Get shipment details
      tags:
        - Resale
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved shipment
          content:
            application/json:
              schema:
                $ref: ../schemas/resale.yaml#/ResaleShipment
  resale-items:
    get:
      summary: Get contestant's resale items
      tags:
        - Resale
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: userId
          schema:
            type: string
            format: uuid
          required: true
          description: ID of the contestant whose items to retrieve
        - in: query
          name: shipmentId
          schema:
            type: string
            format: uuid
          description: Optional - Filter items by specific shipment
        - in: query
          name: status
          schema:
            type: string
            enum:
              - pending_review
              - accepted
              - rejected
              - donated
              - listed
              - sold
              - returned
        - in: query
          name: type
          schema:
            type: string
            enum:
              - dress
              - gown
              - costume
              - shoes
              - accessories
              - other
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - date_added
              - status
              - price
          default: date_added
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved resale items
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/resale.yaml#/ResaleItem
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - User doesn't have permission to view these items
  withdraw-funds:
    post:
      summary: Request withdrawal of available balance
      tags:
        - Resale
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: float
                paymentMethodId:
                  type: string
                  format: uuid
              required:
                - amount
                - paymentMethodId
      responses:
        '200':
          description: Withdrawal requested successfully
  earnings:
    get:
      summary: Get contestant's resale earnings overview
      tags:
        - Resale
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: timeframe
          schema:
            type: string
            enum:
              - all_time
              - year
              - month
              - custom
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successfully retrieved earnings overview
          content:
            application/json:
              schema:
                $ref: ../schemas/resale.yaml#/ResaleEarnings
  payouts:
    get:
      summary: Get payout history
      tags:
        - Resale
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - pending
              - processing
              - completed
              - failed
              - cancelled
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved payout history
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/resale.yaml#/ResalePayout
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
  request-payout:
    post:
      summary: Request a payout
      tags:
        - Resale
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: float
                paymentMethodId:
                  type: string
                  format: uuid
                notes:
                  type: string
              required:
                - amount
                - paymentMethodId
      responses:
        '201':
          description: Payout requested successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/resale.yaml#/ResalePayout
        '400':
          description: Invalid request (e.g., insufficient funds)
        '401':
          description: Unauthorized
  cancel-payout:
    post:
      summary: Cancel a pending payout
      tags:
        - Resale
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: payoutId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Payout cancelled successfully
        '400':
          description: Cannot cancel payout (e.g., already processed)
        '401':
          description: Unauthorized
        '404':
          description: Payout not found
  resale-analytics:
    get:
      summary: Get analytics for contestant's resale items
      tags:
        - Resale
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: itemId
          schema:
            type: string
            format: uuid
          description: Optional - get analytics for specific item
        - in: query
          name: timeframe
          schema:
            type: string
            enum:
              - day
              - week
              - month
              - year
              - all
          default: month
      responses:
        '200':
          description: Successfully retrieved resale analytics
          content:
            application/json:
              schema:
                type: object
                properties:
                  overview:
                    type: object
                    properties:
                      totalViews:
                        type: integer
                      totalSaves:
                        type: integer
                      totalSales:
                        type: integer
                      averageTimeToSell:
                        type: integer
                        description: Average days to sell
                      conversionRate:
                        type: number
                        format: float
                        description: Percentage of views that result in sales
                  itemAnalytics:
                    type: array
                    items:
                      type: object
                      properties:
                        itemId:
                          type: string
                          format: uuid
                        title:
                          type: string
                        views:
                          type: integer
                        saves:
                          type: integer
                        status:
                          type: string
                        daysListed:
                          type: integer
                        priceHistory:
                          type: array
                          items:
                            type: object
                            properties:
                              price:
                                type: number
                              date:
                                type: string
                                format: date-time
                  viewsOverTime:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        views:
                          type: integer
                        saves:
                          type: integer
  resale-item-tracking:
    get:
      summary: Get detailed tracking for a specific resale item
      tags:
        - Resale
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: itemId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved item tracking
          content:
            application/json:
              schema:
                type: object
                properties:
                  item:
                    $ref: ../schemas/resale.yaml#/ResaleItem
                  tracking:
                    type: object
                    properties:
                      views:
                        type: integer
                      uniqueViews:
                        type: integer
                      saves:
                        type: integer
                      lastViewed:
                        type: string
                        format: date-time
                      viewerLocations:
                        type: array
                        items:
                          type: object
                          properties:
                            city:
                              type: string
                            state:
                              type: string
                            count:
                              type: integer
                      statusHistory:
                        type: array
                        items:
                          type: object
                          properties:
                            status:
                              type: string
                            date:
                              type: string
                              format: date-time
                            note:
                              type: string
  update-notifications:
    put:
      summary: Update notification preferences
      tags:
        - Settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/settings.yaml#/NotificationPreferences
      responses:
        '200':
          description: Notification preferences updated successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/settings.yaml#/NotificationPreferences
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  update-privacy:
    put:
      summary: Update privacy settings
      tags:
        - Settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/settings.yaml#/PrivacySettings
      responses:
        '200':
          description: Privacy settings updated successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/settings.yaml#/PrivacySettings
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  update-account:
    put:
      summary: Update account settings
      tags:
        - Settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/settings.yaml#/AccountSettings
      responses:
        '200':
          description: Account settings updated successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/settings.yaml#/AccountSettings
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  shipping-label:
    post:
      summary: Generate shipping label
      tags:
        - Shipping
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - label
                    - pickup
                    - dropoff
                itemCount:
                  type: integer
                pickupDetails:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                    timeWindow:
                      type: string
                      enum:
                        - morning
                        - afternoon
                        - evening
                    instructions:
                      type: string
              required:
                - type
                - itemCount
      responses:
        '201':
          description: Shipping label or pickup request created successfully
          content:
            application/json:
              schema:
                $ref: ../schemas/shipping.yaml#/ShippingLabel
  dropoff-locations:
    get:
      summary: Get nearby dropoff locations
      tags:
        - Shipping
      parameters:
        - in: query
          name: zipCode
          required: true
          schema:
            type: string
        - in: query
          name: radius
          schema:
            type: integer
            default: 25
            description: Search radius in miles
      responses:
        '200':
          description: Successfully retrieved dropoff locations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    address:
                      $ref: ../schemas/orders.yaml#/Address
                    distance:
                      type: number
                      description: Distance in miles
                    hours:
                      type: object
  resale-estimate:
    post:
      summary: Get resale value estimate
      tags:
        - Shipping
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                brand:
                  type: string
                styleNumber:
                  type: string
                purchaseDate:
                  type: string
                  format: date
                purchasePrice:
                  type: number
                condition:
                  type: string
                  enum:
                    - new_with_tags
                    - like_new
                    - gently_used
                    - well_worn
                repairs:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      description:
                        type: string
                cleaning:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      description:
                        type: string
                frontImage:
                  type: string
                  format: binary
                backImage:
                  type: string
                  format: binary
                additionalImages:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
                - brand
                - purchaseDate
                - purchasePrice
                - condition
                - frontImage
                - backImage
      responses:
        '200':
          description: Successfully generated estimate
          content:
            application/json:
              schema:
                $ref: ../schemas/shipping.yaml#/ResaleEstimate
  products:
    get:
      summary: Search and filter products
      tags:
        - Shop
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Search query for product title, description, brand
        - in: query
          name: category
          schema:
            type: string
            format: uuid
          description: Filter by category
        - in: query
          name: condition
          schema:
            type: string
            enum:
              - new
              - like-new
              - excellent
              - good
              - fair
        - in: query
          name: minPrice
          schema:
            type: number
        - in: query
          name: maxPrice
          schema:
            type: number
        - in: query
          name: brand
          schema:
            type: string
        - in: query
          name: tags
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - newest
              - price-low-high
              - price-high-low
              - popular
          default: newest
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Successfully retrieved products
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/products.yaml#/Product
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
                  filters:
                    type: object
                    properties:
                      categories:
                        type: array
                        items:
                          $ref: ../schemas/products.yaml#/ProductCategory
                      brands:
                        type: array
                        items:
                          type: string
                      priceRange:
                        type: object
                        properties:
                          min:
                            type: number
                          max:
                            type: number
    post:
      summary: Create a new product
      tags:
        - Shop
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/products.yaml#/Product
      responses:
        '201':
          description: Product created successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  product:
    get:
      summary: Get product details
      tags:
        - Shop
      responses:
        '200':
          description: Successfully retrieved product
          content:
            application/json:
              schema:
                $ref: ../schemas/products.yaml#/Product
        '404':
          description: Product not found
    put:
      summary: Update product
      tags:
        - Shop
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/products.yaml#/Product
      responses:
        '200':
          description: Product updated successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Product not found
    delete:
      summary: Delete product
      tags:
        - Shop
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Product deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Product not found
  staff-overview:
    get:
      summary: Get staff management overview
      tags:
        - Staff Management
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved overview
          content:
            application/json:
              schema:
                type: object
                properties:
                  activeStaff:
                    type: integer
                  customRoles:
                    type: integer
                  pendingInvites:
                    type: integer
  staff-members:
    get:
      summary: Get all staff members
      tags:
        - Staff Management
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - pending
              - active
              - inactive
        - in: query
          name: roleId
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved staff members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/staff-management.yaml#/StaffMember
    post:
      summary: Invite new staff member
      tags:
        - Staff Management
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/staff-management.yaml#/StaffMember
      responses:
        '201':
          description: Staff invitation sent successfully
  staff-member:
    get:
      summary: Get staff member details
      tags:
        - Staff Management
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved staff member
          content:
            application/json:
              schema:
                $ref: ../schemas/staff-management.yaml#/StaffMember
    put:
      summary: Update staff member
      tags:
        - Staff Management
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/staff-management.yaml#/StaffMember
      responses:
        '200':
          description: Staff member updated successfully
    delete:
      summary: Remove staff member
      tags:
        - Staff Management
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Staff member removed successfully
  staff-roles:
    get:
      summary: Get all staff roles
      tags:
        - Staff Management
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved roles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/staff-management.yaml#/StaffRole
    post:
      summary: Create new role
      tags:
        - Staff Management
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/staff-management.yaml#/StaffRole
      responses:
        '201':
          description: Role created successfully
  staff-role:
    put:
      summary: Update role
      tags:
        - Staff Management
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/staff-management.yaml#/StaffRole
      responses:
        '200':
          description: Role updated successfully
    delete:
      summary: Delete role
      tags:
        - Staff Management
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Role deleted successfully
  stores:
    get:
      summary: Get all stores
      tags:
        - Stores
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Search by store name
        - in: query
          name: rating
          schema:
            type: number
          description: Filter by minimum rating
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - rating
              - newest
              - popular
          default: rating
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved stores
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/stores.yaml#/Store
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
    post:
      summary: Create a new store
      tags:
        - Stores
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/stores.yaml#/Store
      responses:
        '201':
          description: Store created successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  store:
    get:
      summary: Get store details
      tags:
        - Stores
      responses:
        '200':
          description: Successfully retrieved store
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../schemas/stores.yaml#/Store
                  - type: object
                    properties:
                      reviews:
                        type: array
                        items:
                          $ref: ../schemas/stores.yaml#/StoreReview
        '404':
          description: Store not found
  store-products:
    get:
      summary: Get store products
      tags:
        - Stores
      parameters:
        - in: query
          name: category
          schema:
            type: string
            format: uuid
        - in: query
          name: condition
          schema:
            type: string
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - newest
              - price-low-high
              - price-high-low
          default: newest
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved store products
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../schemas/products.yaml#/Product
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
  store-reviews:
    post:
      summary: Add store review
      tags:
        - Stores
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/stores.yaml#/StoreReview
      responses:
        '201':
          description: Review added successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  support-tickets:
    get:
      summary: Get user's support tickets
      tags:
        - Support
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - open
              - in_progress
              - resolved
              - closed
        - in: query
          name: category
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved support tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/support.yaml#/SupportTicket
    post:
      summary: Create new support ticket
      tags:
        - Support
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  $ref: ../schemas/support.yaml#/SupportTicket
                attachments:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Support ticket created successfully
  support-ticket:
    get:
      summary: Get support ticket details
      tags:
        - Support
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved support ticket
          content:
            application/json:
              schema:
                $ref: ../schemas/support.yaml#/SupportTicket
    put:
      summary: Update support ticket
      tags:
        - Support
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../schemas/support.yaml#/SupportTicket
      responses:
        '200':
          description: Support ticket updated successfully
  ticket-message:
    post:
      summary: Add message to support ticket
      tags:
        - Support
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                attachments:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Message added successfully
  ticket-status:
    put:
      summary: Update ticket status
      tags:
        - Support
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - open
                    - in_progress
                    - resolved
                    - closed
                note:
                  type: string
      responses:
        '200':
          description: Status updated successfully
  subscriptions:
    get:
      summary: Get user's subscriptions
      tags:
        - Wallet
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved subscriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/wallet.yaml#/Subscription
    post:
      summary: Create new subscription
      tags:
        - Wallet
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                planId:
                  type: string
                paymentMethodId:
                  type: string
              required:
                - planId
                - paymentMethodId
      responses:
        '201':
          description: Subscription created successfully
  subscription:
    put:
      summary: Update subscription
      tags:
        - Wallet
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentMethodId:
                  type: string
                cancelAtPeriodEnd:
                  type: boolean
      responses:
        '200':
          description: Subscription updated successfully
    delete:
      summary: Cancel subscription
      tags:
        - Wallet
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: immediately
          schema:
            type: boolean
            default: false
          description: Cancel immediately or at period end
      responses:
        '200':
          description: Subscription cancelled successfully
